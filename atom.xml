<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <title></title>
    <link href="https://omnicode.com.br/blog/atom.xml" rel="self" type="application/atom+xml"/>
    <link href="https://omnicode.com.br/blog"/>
    <generator uri="https://www.getzola.org/">Zola</generator>
    <updated>2024-05-29T00:00:00+00:00</updated>
    <id>https://omnicode.com.br/blog/atom.xml</id>
    <entry xml:lang="en">
        <title>2024-05-29</title>
        <published>2024-05-29T00:00:00+00:00</published>
        <updated>2024-05-29T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-05-29/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-05-29/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Wednesday, day 150 of 366 (40.98%). We&#x27;re in week 22 of 52 (42.30%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
Finish internship report with LLMs&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I finally finished the report. I completed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;blog&#x2F;blob&#x2F;ec32a86f3a6e784726892180c614af692baa2878&#x2F;internship_report&#x2F;create_report.py#L46C1-L73C24&quot;&gt;&lt;code&gt;create_report.py&lt;&#x2F;code&gt;&#x27;s &lt;code&gt;main&lt;&#x2F;code&gt; function&lt;&#x2F;a&gt; and did some minor adjustments to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;blog&#x2F;blob&#x2F;ec32a86f3a6e784726892180c614af692baa2878&#x2F;internship_report&#x2F;ingest_data.py#L1C1-L35C39&quot;&gt;&lt;code&gt;ingest_data.py&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;blog&#x2F;blob&#x2F;ec32a86f3a6e784726892180c614af692baa2878&#x2F;internship_report&#x2F;query_data.py#L1C1-L43C26&quot;&gt;&lt;code&gt;query_data.py&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;. In the first one I aded an &lt;code&gt;if&lt;&#x2F;code&gt; clause to check if the Chroma client already has a collection and delete it if it does, whitout this I would get an error saying the &lt;code&gt;en_posts&lt;&#x2F;code&gt; collection already existed when &lt;code&gt;create_report.py&lt;&#x2F;code&gt; had to make more than one call to &lt;code&gt;create_report_from_blog&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;I do want to change one thing: currently &lt;code&gt;create_report.py&lt;&#x2F;code&gt; checks if the elapsed time between the start date and the date limit is greater than 3 months, but I use 90 days to split the trimesters (which means the dates from a report are not always form only three months) so I think I should check for the elapsed days instead of the months to make the code more cohesive.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-05-28</title>
        <published>2024-05-28T00:00:00+00:00</published>
        <updated>2024-05-28T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-05-28/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-05-28/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Tuesday, day 149 of 366 (40.71%). We&#x27;re in week 22 of 52 (42.30%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
Finish internship report with LLMs&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I didn&#x27;t finish the report, but I&#x27;m definitely a lot closer to it. I tried to use OpenAI directly instead of LangChain so that I could use &lt;code&gt;gpt-3.5-turbo-instruct&lt;&#x2F;code&gt; as a model because according to &lt;a href=&quot;https:&#x2F;&#x2F;platform.openai.com&#x2F;settings&#x2F;organization&#x2F;limits&quot;&gt;this documentation&lt;&#x2F;a&gt; its token limit is high enough to make the report. However, when I ran it, I got the token limit error saying the limit was much lower. I did a lot more research and eventually found &lt;a href=&quot;https:&#x2F;&#x2F;platform.openai.com&#x2F;docs&#x2F;models&#x2F;continuous-model-upgrades&quot;&gt;this other documentation&lt;&#x2F;a&gt; that says the same model has a much lower TPM limit, which is the actual number I was getting in the error. However, it also says that &lt;code&gt;gpt-4o&lt;&#x2F;code&gt; can handle up to 128,000 tokens but when I tried it, it gave the same token limit error saying it&#x27;s 30,000.&lt;&#x2F;p&gt;
&lt;p&gt;I got tired of not getting anywhere with this, so I decided I&#x27;m going to do the reports by trimester, and if I need a report that covers more time (which I will), I&#x27;ll just make as many trimester reports as I need and then put them together. I had to do a lot of reorganizing the code, and I also separated everything into neat functions to keep it organized. Basically, in &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;blog&#x2F;blob&#x2F;summarize_llm&#x2F;ingest_data.py&quot;&gt;&lt;code&gt;ingest_data.py&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;, we only have the &lt;code&gt;create_collection&lt;&#x2F;code&gt; function, which creates a &lt;code&gt;blog_posts.pkt&lt;&#x2F;code&gt; file with the given blog files&#x27; names. In &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;blog&#x2F;blob&#x2F;summarize_llm&#x2F;query_data.py&quot;&gt;&lt;code&gt;query_data.py&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;, we have two functions that create reports: one from blog posts and the other from other reports, plus a function that saves reports to the &lt;code&gt;report.md&lt;&#x2F;code&gt; file.&lt;&#x2F;p&gt;
&lt;p&gt;The main addition here is &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;blog&#x2F;blob&#x2F;summarize_llm&#x2F;create_report.py&quot;&gt;create_report.py&lt;&#x2F;a&gt;, which handles everything I explained before; it checks how many months I&#x27;m asking for and either calls only once for &lt;code&gt;create_report_from_blog&lt;&#x2F;code&gt; and saves its response, or it splits the time period into maximum 3-month-long periods, makes reports out of them, and then calls for &lt;code&gt;create_report_from_reports&lt;&#x2F;code&gt; to summarize everything. Or at least that&#x27;s what it will do once I finish it.&lt;&#x2F;p&gt;
&lt;p&gt;It took me some time to figure out how to handle the dates and the math was a bit confusing to think about. The &lt;code&gt;calculate_months_diff&lt;&#x2F;code&gt; and &lt;code&gt;calculate_days_diff&lt;&#x2F;code&gt; functions handle this, and I just use the results to make sure I&#x27;m getting a file from the range I want.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;Today I learned how to create a &lt;code&gt;date&lt;&#x2F;code&gt; object from a &#x27;yyyy-mm-dd&#x27; string using &lt;code&gt;datetime&lt;&#x2F;code&gt;:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;datetime
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;date_str = datetime.datetime.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;strptime&lt;&#x2F;span&gt;&lt;span&gt;(date_str, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;%Y&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;%m&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;%d&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;how to get the day difference between two &lt;code&gt;dates&lt;&#x2F;code&gt; by simply doing:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;datetime &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;date
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;a = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;date&lt;&#x2F;span&gt;&lt;span&gt;(year, month, day)
&lt;&#x2F;span&gt;&lt;span&gt;b = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;date&lt;&#x2F;span&gt;&lt;span&gt;(year, month, day)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;days_diff = (a - b).days
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;and how to add time periods to dates with:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;datetime
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;dateutil.relativedelta &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;relativedelta
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;date_after_month = datetime.date.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;today&lt;&#x2F;span&gt;&lt;span&gt;() + &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;relativedelta&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;months&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;)  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# In this example, we&amp;#39;re adding a month to today&amp;#39;s date
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;I also learned about &lt;code&gt;argparse&lt;&#x2F;code&gt;, which can be used to write command-line interfaces, including adding named parameters. For example:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;argparse
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;datetime
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;parser = argparse.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ArgumentParser&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;parser.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;add_argument&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;--date&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;default&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;str&lt;&#x2F;span&gt;&lt;span&gt;(datetime.date.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;today&lt;&#x2F;span&gt;&lt;span&gt;()))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;args = parser.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;parse_args&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Date: &lt;&#x2F;span&gt;&lt;span&gt;{args.date}&amp;#39;)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;In this code, we added a &lt;code&gt;--date&lt;&#x2F;code&gt; named parameter, so when running the code from the command line, we can do:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;python&lt;&#x2F;span&gt;&lt;span&gt; your_code.py&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; --date&lt;&#x2F;span&gt;&lt;span&gt;=&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;2024-03-26&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Date: 2024-03-26
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-05-27</title>
        <published>2024-05-27T00:00:00+00:00</published>
        <updated>2024-05-27T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-05-27/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-05-27/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Monday, day 148 of 366 (40.43%). We&#x27;re in week 22 of 52 (42.30%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
Finish internship report with LLMs&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I almost finished the report using LLMs. I found this &lt;a href=&quot;https:&#x2F;&#x2F;blog.langchain.dev&#x2F;tutorial-chatgpt-over-your-data&#x2F;&quot;&gt;LangChain tutorial&lt;&#x2F;a&gt; on how to use ChatGPT over your own data, and it helped me realize (after a lot of reading) that the Chroma completion is not an embedding, it&#x27;s a vector database. This means all I had to do was give it to ChatGPT and ask for the report. The problem is: there are too many tokens in the response. When I tried to run &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;blog&#x2F;blob&#x2F;summarize_llm&#x2F;query_data.py&quot;&gt;&lt;code&gt;query_data&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;, I got:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;openai.RateLimitError:&lt;&#x2F;span&gt;&lt;span&gt; Error code: 429 - {&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;error&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;: {&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;message&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;: &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Request too large for gpt-4o in organization org-VNt9wqGeLXaFB7IsuMgW42Qi on tokens per min (TPM): Limit 30000, Requested 40539. The input or output tokens must be reduced in order to run successfully. Visit https:&#x2F;&#x2F;platform.openai.com&#x2F;account&#x2F;rate-limits to learn more.&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;, &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;type&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;: &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;tokens&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;, &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;param&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;: None, &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;code&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;: &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;rate_limit_exceeded&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;}}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;In this example, I was using &lt;code&gt;gpt-4o&lt;&#x2F;code&gt; as my model. I went to the link to find a model with a larger token limit and it says that &lt;code&gt;gpt-3.5-turbo-instruct&lt;&#x2F;code&gt; and &lt;code&gt;gpt-3.5-turbo-instruct-0914&lt;&#x2F;code&gt; have 90,000 TPM. So naturally, I just plugged the first one into the code hoping it would work, but I got another error:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;openai.NotFoundError:&lt;&#x2F;span&gt;&lt;span&gt; Error code: 404 - {&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;error&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;: {&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;message&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;: &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;This is not a chat model and thus not supported in the v1&#x2F;chat&#x2F;completions endpoint. Did you mean to use v1&#x2F;completions?&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;, &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;type&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;: &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;invalid_request_error&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;, &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;param&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;: &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;model&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;, &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;code&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;: None}}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;I couldn&#x27;t find LangChain&#x27;s supported types anywhere and also no official documentation on how to use &lt;code&gt;v1&#x2F;completions&lt;&#x2F;code&gt; instead of &lt;code&gt;v1&#x2F;chat&#x2F;completions&lt;&#x2F;code&gt;. I&#x27;ll try looking for it a bit more tomorrow, but I might just give up on LangChain and use OpenAI directly.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-05-24</title>
        <published>2024-05-24T00:00:00+00:00</published>
        <updated>2024-05-24T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-05-24/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-05-24/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Friday, day 145 of 366 (39.61%). We&#x27;re in week 21 of 52 (40.38%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;blog&#x2F;pull&#x2F;184#pullrequestreview-2074109013&quot;&gt;Make requested changes to the translation script&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
Finish the bot that&#x27;ll help me with the report&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I made some changes Mauricio requested on the translation script; he also made some changes himself, and it&#x27;s pretty much done.&lt;&#x2F;p&gt;
&lt;p&gt;I also tried to finish up the report using LLMs but got a bit lost in the process. I got confused about whether I really needed an embedding for this since I&#x27;m not doing a search&#x2F;recommendation system, and started researching more to see if I could find something similar to what I&#x27;m trying to do. I came across &lt;a href=&quot;https:&#x2F;&#x2F;python.langchain.com&#x2F;v0.2&#x2F;docs&#x2F;tutorials&#x2F;graph&#x2F;&quot;&gt;this Langchain documentation&lt;&#x2F;a&gt; about question-answering applications&lt;&#x2F;p&gt;
&lt;p&gt;After thinking about what I actually need for a while, I asked ChatGPT for help and it gave me a sample code that doesn&#x27;t work and a step-by-step:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;Step 1: Extract Data from Zola Blog
&lt;&#x2F;span&gt;&lt;span&gt;First, extract the content of your blog posts. Assuming you have access to the markdown files, you can read them into your script. If they are hosted online, you may need to scrape the data or use an API if available.
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Step 2: Preprocess Data
&lt;&#x2F;span&gt;&lt;span&gt;Preprocess the extracted data to make it suitable for querying and summarizing. This might include cleaning the text, organizing it by date, and separating different sections of the entries.
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Step 3: Set Up LangChain and ChromaDB
&lt;&#x2F;span&gt;&lt;span&gt;LangChain will help you manage the interaction with language models, and ChromaDB can be used for storing and querying your blog content. You can index your daily entries in ChromaDB to allow efficient retrieval.
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Step 4: Query the Data and Generate Report Sections
&lt;&#x2F;span&gt;&lt;span&gt;Use OpenAI&amp;#39;s GPT-4 to generate the content for each section of the report. You can create prompts that summarize the activities, methodologies, and conclusions based on your blog entries.
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The first three steps are pretty much already covered in my current code, and step 4 is exactly where I stopped yesterday and what got me into this mess, but apparently I can use the embeddings instead of a database, which is nice; I just need to figure out how to and I don&#x27;t think ChatGPT&#x27;s code helps me in that matter.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-05-23</title>
        <published>2024-05-23T00:00:00+00:00</published>
        <updated>2024-05-23T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-05-23/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-05-23/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Thursday, day 144 of 366 (39.34%). We&#x27;re in week 21 of 52 (40.38%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
Finish LLMs studies&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
Start working on the AI to summarize the blog posts&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I watched a video about ChromaDB and read an article about LLMs (see the Readings section).&lt;&#x2F;p&gt;
&lt;p&gt;I also started putting everything I learned into practice by working on using AI to help me with the internship report. I began by trying to use Langchain to ask ChatGPT to summarize one of the blog posts. I found &lt;a href=&quot;https:&#x2F;&#x2F;python.langchain.com&#x2F;v0.1&#x2F;docs&#x2F;use_cases&#x2F;summarization&#x2F;&quot;&gt;this official tutorial&lt;&#x2F;a&gt;, so it wasn&#x27;t difficult. You can check the code &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;blog&#x2F;commit&#x2F;39e54534b230799e2cdf1958a73fe3a9e7a75a43&quot;&gt;here&lt;&#x2F;a&gt;, but here&#x27;s the step-by-step (assuming you already have your key in the &lt;code&gt;.env&lt;&#x2F;code&gt; file):&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;Create a loader for the file you want to summarize. In my case, it was a markdown file, so I used &lt;code&gt;UnstructuredMarkdownLoader&lt;&#x2F;code&gt;:&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span&gt;markdown_path = &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;content&#x2F;posts&#x2F;2024-04-16.md&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;loader = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;UnstructuredMarkdownLoader&lt;&#x2F;span&gt;&lt;span&gt;(markdown_path)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;Define the prompt, which is what you want the AI to do (write a concise summary), what you will provide it (&lt;code&gt;text&lt;&#x2F;code&gt;), and what you want in return (&lt;code&gt;CONCISE SUMMARY&lt;&#x2F;code&gt;):&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span&gt;prompt_template = &amp;quot;&amp;quot;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Write a concise summary of the following:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;{text}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;CONCISE SUMMARY:&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;prompt = PromptTemplate.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;from_template&lt;&#x2F;span&gt;&lt;span&gt;(prompt_template)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;Define the LLM chain:&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span&gt;llm = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ChatOpenAI&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;temperature&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;model_name&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;gpt-4&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;llm_chain = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;LLMChain&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;llm&lt;&#x2F;span&gt;&lt;span&gt;=llm, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;prompt&lt;&#x2F;span&gt;&lt;span&gt;=prompt)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ol start=&quot;4&quot;&gt;
&lt;li&gt;Load the file, extract the content, and run the LLM chain:&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span&gt;docs = loader.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;load&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;content = docs[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;].page_content &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# You can check how the markdown file is organized by printing `docs`
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;response = llm_chain.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span&gt;(content)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(response)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;When I got this to work, I started thinking about how to get all the files from the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;blog&#x2F;tree&#x2F;main&#x2F;content&#x2F;posts&quot;&gt;posts folder&lt;&#x2F;a&gt; to create an embedding of them. I decided I only need the files in English, since I can always use the script I made to translate them. So here&#x27;s what I ended up doing:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;os
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;folder_path = &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;content&#x2F;posts&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;files = os.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;listdir&lt;&#x2F;span&gt;&lt;span&gt;(folder_path) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Returns a list with the name of each file in the path
&lt;&#x2F;span&gt;&lt;span&gt;en_files = [file &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;file &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;files &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;.pt&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39; not in file and &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;_index&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39; not in file]
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;file &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;en_files:
&lt;&#x2F;span&gt;&lt;span&gt;    markdown_path = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;{folder_path}{file}&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    loader = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;UnstructuredMarkdownLoader&lt;&#x2F;span&gt;&lt;span&gt;(markdown_path)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    docs = loader.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;load&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;    content = docs[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;].page_content
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Then, all I had to do was create the embedding. This was a bit more complicated, but I did something very similar to &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=QSW2L8dkaZk&quot;&gt;this video&lt;&#x2F;a&gt; from yesterday. You can find the final code &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;blog&#x2F;blob&#x2F;52ef1e547b06d6befc7667ff84640cb19ff54c53&#x2F;summarize.py#L1C1-L47C2&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Tomorrow, I need to figure out how to use Langchain to pass this embedding to ChatGPT so that it can use it as a base to make the report.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;Today I learned that I actually didn&#x27;t have to use ChromaDB directly, since Langchain is integrated with it and you can use native functions while it runs ChromaDB for you in the background. But since I had already made the embedding by this point, I decided to stick with it. You can find more about Langchain and ChromaDB &lt;a href=&quot;https:&#x2F;&#x2F;python.langchain.com&#x2F;v0.2&#x2F;docs&#x2F;integrations&#x2F;vectorstores&#x2F;chroma&#x2F;&quot;&gt;here&lt;&#x2F;a&gt;, including how to pass an existing Chroma Client into Langchain.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;readings&quot;&gt;Readings&lt;&#x2F;h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=QSW2L8dkaZk&quot;&gt;Getting Started with ChromaDB - Lowest Learning Curve Vector Database For Semantic Search&lt;&#x2F;a&gt;:
easy tutorial on ChromaDB.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;towardsdatascience.com&#x2F;a-gentle-intro-to-chaining-llms-agents-and-utils-via-Langchain-16cd385fca81&quot;&gt;A Gentle Intro to Chaining LLMs, Agents, and utils via Langchain&lt;&#x2F;a&gt;:
really nice article, explains very well how to create and use Agents and chains.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-05-22</title>
        <published>2024-05-22T00:00:00+00:00</published>
        <updated>2024-05-22T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-05-22/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-05-22/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Wednesday, day 143 of 366 (39.07%). We&#x27;re in week 21 of 52 (40.38%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;blog&#x2F;issues&#x2F;182&quot;&gt;Automate Blog translation&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I finished automating the blog translation, which means that now I can just run some &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;blog&#x2F;blob&#x2F;38099630fb987877e971cffb4e68e18cf8058579&#x2F;translate.py#L1C1-L43C16&quot;&gt;python code&lt;&#x2F;a&gt; and everything gets translated for me. &lt;&#x2F;p&gt;
&lt;p&gt;I also started studying a bit more about AI so that I can use it to make a summary of all the blog entries that will be my internship report, there&#x27;s more about this is the next sections.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;Today I learned about training GPT on specific documents to make a custom AI powered bot, from what I&#x27;ve learned, the first thing to do is create an embedding of the documents. You can use OpenAI&#x27;s own tools, there&#x27;s some good &lt;a href=&quot;https:&#x2F;&#x2F;platform.openai.com&#x2F;docs&#x2F;guides&#x2F;embeddings&quot;&gt;official documentation&lt;&#x2F;a&gt; on it, but what I&#x27;m going to use is &lt;a href=&quot;https:&#x2F;&#x2F;python.langchain.com&#x2F;v0.2&#x2F;docs&#x2F;introduction&#x2F;&quot;&gt;Langchain&lt;&#x2F;a&gt;, which provides tools for both embedding and training GPT, aside from a lot others. &lt;&#x2F;p&gt;
&lt;h2 id=&quot;readings&quot;&gt;Readings&lt;&#x2F;h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=zAnf6PPnvLg&quot;&gt;Langchain Javascript Coding Tutorial | Getting Started | Node.js Quickstart&lt;&#x2F;a&gt;:
shows a nice example on how to use Langchain in TypeScript, but I want to do mine in in python.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=veV2I-NEjaM&quot;&gt;Langchain JS | How to Use GPT-3, GPT-4 to Reference your own Data | OpenAI Embeddings Intro&lt;&#x2F;a&gt;:
talks about embedding with Langchain.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=Ix9WIZpArm0&quot;&gt;GPT-4 Tutorial: How to Chat With Multiple PDF Files (~1000 pages of Tesla&#x27;s 10-K Annual Reports)&lt;&#x2F;a&gt;:
talks about the logic behind &amp;quot;talking&amp;quot; to multiple PDFs, I don&#x27;t think the logic for &amp;quot;talking&amp;quot; to multiple text files is much different.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=klTvEwg3oJ4&quot;&gt;Vector databases are so hot right now. WTF are they?&lt;&#x2F;a&gt;:
quick explanation on vector databases&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=ySus5ZS0b94&quot;&gt;OpenAI Embeddings and Vector Databases Crash Course&lt;&#x2F;a&gt;:
really nice embedding tutorial&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-05-21</title>
        <published>2024-05-21T00:00:00+00:00</published>
        <updated>2024-05-21T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-05-21/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-05-21/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Tuesday, day 142 of 366 (38.79%). We&#x27;re in week 21 of 52 (40.38%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;scanspend&#x2F;pull&#x2F;2#pullrequestreview-2051203739&quot;&gt;Make requested changes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;blog&#x2F;issues&#x2F;182&quot;&gt;Automate Blog translation&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I made some tiny changes to Scanspend&#x27;s technologies study; I just added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;scanspend&#x2F;blob&#x2F;18ed7853ecaefa87304eb7aee70b744bfa13ccfa&#x2F;docs&#x2F;technologies_study.md?plain=1#L81C1-L87C6&quot;&gt;sections for Python and Rust&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;After that, I went back to automating the blog translation with OpenAI so that I don&#x27;t have to manually ask ChatGPT every day. About yesterday&#x27;s problem, I knew I was forgetting to import the environmental variables somehow, so I did some research and what worked was:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Installing dotenv: &lt;code&gt;pip install python-dotenv&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Using &lt;code&gt;load_dotenv()&lt;&#x2F;code&gt;:&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;dotenv &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;load_dotenv
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;load_dotenv&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;After this, &lt;code&gt;OpenAI()&lt;&#x2F;code&gt; worked just fine. The rest went quite smoothly. I made it so that you can pass the date to the script when calling it from the command line (but if you don&#x27;t, it will look for the file from the current date) and used a higher &lt;code&gt;max_tokens&lt;&#x2F;code&gt; to make sure the whole thing gets translated.&lt;&#x2F;p&gt;
&lt;p&gt;The only thing missing right now is erasing the old text from the &lt;code&gt;.pt.md&lt;&#x2F;code&gt; file before copying the translated text into it. I thought I could just create it as an empty file instead of using the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;blog&#x2F;blob&#x2F;main&#x2F;template-diario.md&quot;&gt;&lt;code&gt;template-diario.md&lt;&#x2F;code&gt; template&lt;&#x2F;a&gt;, but if ChatGPT doesn&#x27;t work for some reason, I&#x27;ll have to do the file manually from scratch instead of just translating the &lt;code&gt;Activities executed&lt;&#x2F;code&gt; and &lt;code&gt;Learnings&lt;&#x2F;code&gt; sections, so I don&#x27;t really like this idea.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;Today I learned about more &lt;code&gt;open()&lt;&#x2F;code&gt; function modes. I already knew about the basic ones: &lt;code&gt;&#x27;w&#x27;&lt;&#x2F;code&gt; (write), &lt;code&gt;&#x27;r&#x27;&lt;&#x2F;code&gt; (read), and &lt;code&gt;&#x27;a&#x27;&lt;&#x2F;code&gt; (append), but today I learned that there are many others, like:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;&#x27;r+&#x27;&lt;&#x2F;code&gt; (read and write): preserves the file&#x27;s existing content and allows reading and writing&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;&#x27;w+&#x27;&lt;&#x2F;code&gt; (write and read): truncates the file (erases its content) and allows reading and writing&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;There are a lot other that VSCode suggests, but I didn&#x27;t dig deep into any of them.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-05-20</title>
        <published>2024-05-20T00:00:00+00:00</published>
        <updated>2024-05-20T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-05-20/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-05-20/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Monday, day 141 of 366 (38.52%). We&#x27;re in week 21 of 52 (40.38%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;scanspend&#x2F;issues&#x2F;1&quot;&gt;Fix any issues with the database model&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;blog&#x2F;issues&#x2F;182&quot;&gt;Get started on Blog renovations&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I fixed a couple of things with the database model; basically, I added IDs to everything and used relations. After that, I started some research on how to use OpenAI to automate translating the blog since this would save me a lot of time daily.&lt;&#x2F;p&gt;
&lt;p&gt;It seemed quite simple as I was reading about it, so once Mauricio gave me the API key, I started working on a Python script. OpenAI has a very good tutorial on how to do exactly what I want, and what you have to do is:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Set your key as &lt;code&gt;OPENAI_API_KEY&lt;&#x2F;code&gt; in a &lt;code&gt;.env&lt;&#x2F;code&gt; file.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Install the OpenAI library with &lt;code&gt;pip install --upgrade openai&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Ask ChatGPT to translate something:&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;openai &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;OpenAI
&lt;&#x2F;span&gt;&lt;span&gt;client = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;OpenAI&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;response = client.chat.completions.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;create&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;model&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;gpt-4&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;messages&lt;&#x2F;span&gt;&lt;span&gt;=[
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;      &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;role&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;system&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;      &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;content&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;You will be provided with a sentence in English, and your task is to translate it into French.&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    },
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;      &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;role&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;user&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;      &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;content&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;My name is Jane. What is yours?&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;  ],
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;temperature&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0.7&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;max_tokens&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;64&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;top_p&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;By default, &lt;code&gt;OpenAI()&lt;&#x2F;code&gt; uses the key saved in the &lt;code&gt;.env&lt;&#x2F;code&gt; file as &lt;code&gt;OPENAI_API_KEY&lt;&#x2F;code&gt;, and that&#x27;s where I&#x27;m getting this error:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;➜&lt;&#x2F;span&gt;&lt;span&gt;  worklog-luisa git:(automate_translation) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;✗&lt;&#x2F;span&gt;&lt;span&gt; &#x2F;home&#x2F;omnicoder&#x2F;.asdf&#x2F;shims&#x2F;python3.11 &#x2F;home&#x2F;omnicoder&#x2F;Repositories&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;worklog-luisa&#x2F;translate
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;.py
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Traceback&lt;&#x2F;span&gt;&lt;span&gt; (most recent call last)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;File &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&#x2F;home&#x2F;omnicoder&#x2F;Repositories&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;worklog-luisa&#x2F;translate.py&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, line 4, in &amp;lt;module&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;client&lt;&#x2F;span&gt;&lt;span&gt; = OpenAI(
&lt;&#x2F;span&gt;&lt;span&gt;             &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;^^^^^^^
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;File &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&#x2F;home&#x2F;omnicoder&#x2F;.asdf&#x2F;installs&#x2F;python&#x2F;3.11.5&#x2F;lib&#x2F;python3.11&#x2F;site-packages&#x2F;openai&#x2F;_client.py&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, line 104, in __init__
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;raise&lt;&#x2F;span&gt;&lt;span&gt; OpenAIError(
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;openai.OpenAIError:&lt;&#x2F;span&gt;&lt;span&gt; The api_key client option must be set either by passing api_key to the client or by setting the OPENAI_API_KEY environment variable
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;It&#x27;s probably just something I forgot to do, so I can definitely get it working tomorrow.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;Today I learned that you can use OpenAI&#x27;s API to do all sorts of things in either &lt;code&gt;Python&lt;&#x2F;code&gt;, &lt;code&gt;Node.js&lt;&#x2F;code&gt;, or &lt;code&gt;curl&lt;&#x2F;code&gt;. Here&#x27;s the &lt;a href=&quot;https:&#x2F;&#x2F;platform.openai.com&#x2F;examples&quot;&gt;official examples list&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-05-16</title>
        <published>2024-05-16T00:00:00+00:00</published>
        <updated>2024-05-16T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-05-16/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-05-16/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Thursday, day 137 of 366 (37.43%). We&#x27;re in week 20 of 52 (38.46%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;scanspend&#x2F;issues&#x2F;3&quot;&gt;Make architectural suggestion for Scanspend&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;scanspend&#x2F;issues&#x2F;1&quot;&gt;Fix any issues with the database model&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I did a lot of research to choose between &lt;a href=&quot;https:&#x2F;&#x2F;deno.com&#x2F;&quot;&gt;Deno&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;bun.sh&#x2F;&quot;&gt;Bun&lt;&#x2F;a&gt; and ultimately went for Deno because I was able to find more information on what I needed. I also made an &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;scanspend&#x2F;blob&#x2F;011679445a2c0b584ef52e095bd91870421c0829&#x2F;docs&#x2F;typescriptApp.md?plain=1#L69&quot;&gt;architecture suggestion&lt;&#x2F;a&gt; for Scanspend. I&#x27;m not sure if it&#x27;s complete, but what I researched the most, other than the runtime, was the MVC framework.&lt;&#x2F;p&gt;
&lt;p&gt;Since the TypeScript app I studied used NestJS, I went straight to it, but it doesn&#x27;t seem to be compatible with Deno. However, I found &lt;a href=&quot;https:&#x2F;&#x2F;deno.land&#x2F;x&#x2F;destjs@v0.2.0&quot;&gt;DestJS&lt;&#x2F;a&gt;, which is a NestJS-inspired framework for Deno. I didn&#x27;t want to use the first one I found, so I did some more research and found &lt;a href=&quot;https:&#x2F;&#x2F;deno.land&#x2F;x&#x2F;mandarinets@v2.3.2&quot;&gt;Mandarine.TS&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;deno.land&#x2F;x&#x2F;knight@2.3.0&quot;&gt;Knight&lt;&#x2F;a&gt;. The first one was hard to find any documentation on, but I did like the second one a lot because it seems really easy to use. I really don&#x27;t know which one I want to use, but I put DestJS in the suggestion since it was based on NestJS.&lt;&#x2F;p&gt;
&lt;p&gt;Mauricio didn&#x27;t get a chance to look at the database model I made, so there wasn&#x27;t anything to fix.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-05-15</title>
        <published>2024-05-15T00:00:00+00:00</published>
        <updated>2024-05-15T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-05-15/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-05-15/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Wednesday, day 136 of 366 (37.15%). We&#x27;re in week 20 of 52 (38.46%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;scanspend&#x2F;issues&#x2F;1&quot;&gt;Make database model&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I worked on making a database model for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;scanspend&quot;&gt;Scanspend&lt;&#x2F;a&gt;. I&#x27;ve never done this before, so there&#x27;s probably a lot of things wrong with it that I&#x27;ll fix tomorrow.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;In order to make the database model, I studied the NFCe&#x27;s &lt;code&gt;html&lt;&#x2F;code&gt; and found out that every item purchased is inside a &lt;code&gt;&amp;lt;table&amp;gt;&lt;&#x2F;code&gt; tag and looks something like this:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;html&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-html &quot;&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;tr &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;id&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Item + 1&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;td &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;valign&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;top&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;span &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;class&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;txtTit&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&amp;gt;SUCO DELI ABACAXI 300ML&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;span&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;span &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;class&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;RCod&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&amp;gt;(Código: 907)&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;span&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;br&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;span &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;class&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Rqtd&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;strong&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;Qtde.:&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;strong&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;1&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;span&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;span &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;class&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;RUN&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;strong&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;UN: &amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;strong&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;UN&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;span&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;span &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;class&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;RvlUnit&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;strong&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;Vl. Unit.:&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;strong&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;nbsp;&lt;&#x2F;span&gt;&lt;span&gt;5&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;span&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;td&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;td &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;align&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;right&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;valign&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;top&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;class&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;txtTit noWrap&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&amp;gt;Vl. Total&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;br&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;span &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;class&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;valor&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&amp;gt;5,00&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;span&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;td&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;tr&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Which means getting information from it shouldn&#x27;t be hard at all. The total might be a little trickier to get directly from the &lt;code&gt;html&lt;&#x2F;code&gt;, since it looks something like this:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;html&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-html &quot;&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;div &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;id&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;totalNota&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;class&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;txtRight&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&amp;lt;!-- ... --&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;div &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;id&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;linhaTotal&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;class&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;linhaShade&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;label&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;Valor a pagar R$:&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;label&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;span &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;class&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;totalNumb txtMax&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&amp;gt;37,99&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;span&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;div&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&amp;lt;!-- ... --&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;div&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;So it might be easier to just get the individual prices and quantities and do some math.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-05-14</title>
        <published>2024-05-14T00:00:00+00:00</published>
        <updated>2024-05-14T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-05-14/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-05-14/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Tuesday, day 135 of 366 (36.88%). We&#x27;re in week 20 of 52 (38.46%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;scanspend&#x2F;issues&#x2F;3&quot;&gt;Study architecture of apps&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I did some more research on the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;scanspend&#x2F;blob&#x2F;67e28fd245298c898b78926c2b9c4e81e1fdc703&#x2F;docs&#x2F;typescriptApp.md?plain=1#L3&quot;&gt;backend technologies from the TypeScript app&lt;&#x2F;a&gt;. I also reached the conclusion that I can&#x27;t have the &lt;code&gt;xml&lt;&#x2F;code&gt; file for the tax invoices, so I&#x27;ll be parsing the &lt;code&gt;html&lt;&#x2F;code&gt; to gather data, that made me go look for more libraries and I found &lt;a href=&quot;https:&#x2F;&#x2F;axios-http.com&#x2F;docs&#x2F;intro&quot;&gt;&lt;code&gt;axios&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;, which can get the page&#x27;s &lt;code&gt;html&lt;&#x2F;code&gt; froma giver &lt;code&gt;url&lt;&#x2F;code&gt;. Apparently it works well with Deno, but not with Bun, which may be important since me and Mauricio decided we&#x27;re going to stick to TypeScript and use Prisma, but we&#x27;ll go for either Deno or Bun instead of Node. Since this is already decided, tomorrow, when I make the database model I can make the code already using Prisma&#x27;s syntax in the source code.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-05-13</title>
        <published>2024-05-13T00:00:00+00:00</published>
        <updated>2024-05-13T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-05-13/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-05-13/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Monday, day 134 of 366 (36.61%). We&#x27;re in week 20 of 52 (38.46%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;scanspend&#x2F;issues&#x2F;1&quot;&gt;Continue research for the tax invoice project&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;scanspend&#x2F;issues&#x2F;3&quot;&gt;Study architecture of apps&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;scanspend&#x2F;blob&#x2F;libraries&#x2F;docs&#x2F;typescriptApp.md&quot;&gt;studied the technologies&lt;&#x2F;a&gt; used by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;SOS-RS&quot;&gt;this TypeScript app&lt;&#x2F;a&gt; and tried to find some JavaScript&#x2F;TypeScript libraries to handle tax invoices, but could only find one, it gets information from the &lt;code&gt;xml&lt;&#x2F;code&gt; file like the Dart one I found.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-05-10</title>
        <published>2024-05-10T00:00:00+00:00</published>
        <updated>2024-05-10T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-05-10/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-05-10/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Friday, day 131 of 366 (35.79%). We&#x27;re in week 19 of 52 (36.53%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;scanspend&#x2F;issues&#x2F;1&quot;&gt;Start research for the tax invoice project&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I did some research on libraries to handle tax invoices; they are all &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;scanspend&#x2F;blob&#x2F;libraries&#x2F;libraries.md&quot;&gt;here&lt;&#x2F;a&gt;. I looked up Dart ones and found one that handles &lt;code&gt;xml&lt;&#x2F;code&gt; files, but nothing specific to tax invoices. I also found a few Python ones, and a couple of them are specific to what I need, but maybe even too specific.&lt;&#x2F;p&gt;
&lt;p&gt;After I couldn&#x27;t find any new ones, I tried to look up how to download the &lt;code&gt;xml&lt;&#x2F;code&gt; file for the tax invoice, and apparently I can&#x27;t, which means half of those libraries are useless. But I&#x27;ll have to dig a little deeper into this matter.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-05-09</title>
        <published>2024-05-09T00:00:00+00:00</published>
        <updated>2024-05-09T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-05-09/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-05-09/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Thursday, day 130 of 366 (35.51%). We&#x27;re in week 19 of 52 (36.53%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;website&#x2F;issues&#x2F;101&quot;&gt;Finish toggle language button&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I was able to get the language selector running perfectly. I started with a deeper research on the &lt;code&gt;history.push&lt;&#x2F;code&gt; method and found out it&#x27;s deprecated and was replaced by the &lt;code&gt;navigate&lt;&#x2F;code&gt; method in &lt;code&gt;react-router-dom&lt;&#x2F;code&gt; v6 (which is the most recent one and the one I&#x27;m using). To use it, you have to do something like this:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;js&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-js &quot;&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;{ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;useNavigate &lt;&#x2F;span&gt;&lt;span&gt;} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;react-router-dom&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;install it with npm i react-router-dom
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;navigate &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;useNavigate&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;navigate&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&#x2F;your&#x2F;path&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Your component (or some parent component) has to be wrapped with a router component, I just wrapped &lt;code&gt;index.js&lt;&#x2F;code&gt; in a &lt;code&gt;BrowserRouter&lt;&#x2F;code&gt;. At first, it wasn&#x27;t working properly: the URL changed but the page wouldn&#x27;t automatically reload, so it would end up staying the same. I tried to find an answer to this, but couldn&#x27;t find any solution that would work, so I just used &lt;code&gt;window.location.reload()&lt;&#x2F;code&gt; after calling &lt;code&gt;navigate&lt;&#x2F;code&gt;. To make sure that selecting the same language the site is already on doesn&#x27;t reload the page for no reason I just moved everything into a separate function and added an &lt;code&gt;if&lt;&#x2F;code&gt; clause. I also made a function to return the right flag based on the current language, so that the default will always be right. In the end, this was what I needed:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;js&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-js &quot;&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; Options array
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;langOptions &lt;&#x2F;span&gt;&lt;span&gt;= [
&lt;&#x2F;span&gt;&lt;span&gt;    { value: &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;lang1&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;, label: &amp;lt;img src={&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;lang1img&lt;&#x2F;span&gt;&lt;span&gt;} alt=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;usa flag&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; width=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;40&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; &#x2F;&amp;gt; }, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; lang1img is the name you used on the image import
&lt;&#x2F;span&gt;&lt;span&gt;    { value: &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;lang2&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;, label: &amp;lt;img src={&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;lang2img&lt;&#x2F;span&gt;&lt;span&gt;} alt=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;brazil flag&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; width=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;40&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; &#x2F;&amp;gt; }
&lt;&#x2F;span&gt;&lt;span&gt;  ]
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; Handle language selection function
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;handleLangChange &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;selectedLang &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;lang &lt;&#x2F;span&gt;&lt;span&gt;!== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;selectedLang&lt;&#x2F;span&gt;&lt;span&gt;.value){
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;navigate&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; + &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;selectedLang&lt;&#x2F;span&gt;&lt;span&gt;.value + &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;originalPath&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;span&gt;        window.location.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;reload&lt;&#x2F;span&gt;&lt;span&gt;();
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; Get right flag function
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;selectFlag&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;language&lt;&#x2F;span&gt;&lt;span&gt;){
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;switch&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;language&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;case &lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;lang1&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;:
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;lang1img
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;case &lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;lang2&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;:
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;lang2img
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;default&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;lang1img
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; Select component
&lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Select
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;defaultValue&lt;&#x2F;span&gt;&lt;span&gt;={{value: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;lang&lt;&#x2F;span&gt;&lt;span&gt;, label: &amp;lt;img src={&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;selectFlag&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;lang&lt;&#x2F;span&gt;&lt;span&gt;)} alt={lang + &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt; flag&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;} width=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;40&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; &#x2F;&amp;gt;}} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; lang comes from gatsby-theme-intl&amp;#39;s usePageContext
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;onChange&lt;&#x2F;span&gt;&lt;span&gt;={&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;handleLangChange&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;options&lt;&#x2F;span&gt;&lt;span&gt;={&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;langOptions&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;unstyled
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;isSearchable&lt;&#x2F;span&gt;&lt;span&gt;={&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;false&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;Today I learned that you can add the &lt;code&gt;unstyled&lt;&#x2F;code&gt; prop to the &lt;code&gt;Select&lt;&#x2F;code&gt; component to disable the default styles. You can also set the &lt;code&gt;isSearchable&lt;&#x2F;code&gt; prop to &lt;code&gt;false&lt;&#x2F;code&gt; if you want to disable searching for an option.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-05-08</title>
        <published>2024-05-08T00:00:00+00:00</published>
        <updated>2024-05-08T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-05-08/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-05-08/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Wednesday, day 129 of 366 (35.24%). We&#x27;re in week 19 of 52 (36.53%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;website&#x2F;issues&#x2F;101&quot;&gt;Finish translating the website&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;website&#x2F;issues&#x2F;101&quot;&gt;Start working on the toggle language button&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I finally finished translating 100% of the website. The method for the legal pages was the same as I used for the services pages, so this part was quite fast.&lt;&#x2F;p&gt;
&lt;p&gt;After I finished the translation, I started working on the toggle button. I first made a simple button to toggle between the two languages we currently have. To do that, I used the &lt;code&gt;lang&lt;&#x2F;code&gt; and &lt;code&gt;originalPath&lt;&#x2F;code&gt; variables that &lt;code&gt;usePageContext()&lt;&#x2F;code&gt; from the theme intl plugin provides. All I had to do was navigate to the same original path, but with the other language:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;js&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-js &quot;&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Link to&lt;&#x2F;span&gt;&lt;span&gt;={&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; + (lang === &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;pt&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39; ? &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;en&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; : &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;pt&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;) + &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;originalPath&lt;&#x2F;span&gt;&lt;span&gt;}&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;lt;li&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;        {&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;lang &lt;&#x2F;span&gt;&lt;span&gt;=== &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;pt&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39; ? &amp;lt;img src={&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;brazil&lt;&#x2F;span&gt;&lt;span&gt;} alt=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;usa flag&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; width=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;40&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; &#x2F;&amp;gt; : &amp;lt;img src={&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;usa&lt;&#x2F;span&gt;&lt;span&gt;} alt=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;brazil flag&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; width=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;40&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; &#x2F;&amp;gt;}
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;li&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Link&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;It worked fine, but then Mauricio said he wanted it to be a dropdown so that we could easily add more languages when necessary. Adding the dropdown itself was not hard; the thing is I cannot for the life of me figure out how to change the current URL once I select a different language. I already tried a lot of different functions, but nothing seems to work when I put it in the &lt;code&gt;onChange&lt;&#x2F;code&gt; parameter. The most promising one I found was &lt;code&gt;this.props.history.push(&amp;quot;path&amp;quot;)&lt;&#x2F;code&gt;, but I just can&#x27;t get it to work.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;readings&quot;&gt;Readings&lt;&#x2F;h2&gt;
&lt;p&gt;I found this nice &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;HatScripts&#x2F;circle-flags?tab=readme-ov-file&quot;&gt;GitHub repo&lt;&#x2F;a&gt; that has almost every country&#x27;s flag in a nice round simplified design svg icon.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-05-07</title>
        <published>2024-05-07T00:00:00+00:00</published>
        <updated>2024-05-07T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-05-07/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-05-07/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Tuesday, day 128 of 366 (34.97%). We&#x27;re in week 19 of 52 (36.53%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;website&#x2F;issues&#x2F;101&quot;&gt;Finish translating the website&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I translated all the service pages. It took me a while because I realized I had to get all the content from the markdown files and turn them into a one-line string to go into the &lt;code&gt;i18n.json&lt;&#x2F;code&gt; file (I used ChatGPT to help me), and that looks really ugly, so I did some research to try to find a way to at least break the string and make reading&#x2F;editing easier in the future. The only possible solution I found was making it an array and using &lt;code&gt;join()&lt;&#x2F;code&gt; in it after, but apparently the &lt;code&gt;theme-intl&lt;&#x2F;code&gt; plugin doesn&#x27;t allow that since it will return a string saying &lt;code&gt;key &#x27;services.consultants.callToAction (pt)&#x27; returned an object instead of string.&lt;&#x2F;code&gt; instead of the actual object. In the end, I had to keep the really long strings with the page&#x27;s content.&lt;&#x2F;p&gt;
&lt;p&gt;It&#x27;s also important to say that I had to tweak the navigation a little bit. The &lt;code&gt;gatsby-theme-intl&lt;&#x2F;code&gt; plugin comes with its own &lt;code&gt;Link&lt;&#x2F;code&gt; tag that makes sure the language you&#x27;re currently on doesn&#x27;t change when you go to another page. In a couple of components, I just had to make sure I changed the import:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;js&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-js &quot;&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;Old
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;{ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Link &lt;&#x2F;span&gt;&lt;span&gt;} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;gatsby&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;New
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;{ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Link &lt;&#x2F;span&gt;&lt;span&gt;} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;@3nvi&#x2F;gatsby-theme-intl&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;But when I did this for the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;website&#x2F;blob&#x2F;2bb9c4314e8102e0ece4f25dd45a1bb695cc1733&#x2F;src&#x2F;components&#x2F;header.js#L1C1-L150C22&quot;&gt;Header component&lt;&#x2F;a&gt;, the &lt;code&gt;scrollTo()&lt;&#x2F;code&gt; function didn&#x27;t work properly. It was quite an easy fix; I just imported &lt;code&gt;gatsby-theme-intl&lt;&#x2F;code&gt;&#x27;s &lt;code&gt;Link&lt;&#x2F;code&gt; with an alias:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;js&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-js &quot;&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;{ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Link &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;as &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ThemeLink &lt;&#x2F;span&gt;&lt;span&gt;} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;@3nvi&#x2F;gatsby-theme-intl&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;and used it where the buttons were supposed to redirect and not just scroll.&lt;&#x2F;p&gt;
&lt;p&gt;Now all that&#x27;s left to finish the translation are the legal pages and after it I can work on adding a button to toggle between languages.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-05-06</title>
        <published>2024-05-06T00:00:00+00:00</published>
        <updated>2024-05-06T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-05-06/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-05-06/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Monday, day 127 of 366 (34.69%). We&#x27;re in week 19 of 52 (36.53%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;website&#x2F;issues&#x2F;101&quot;&gt;Finish translating the website&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I was almost able to finish translating the whole website, all that&#x27;s left are the services and legal markdown pages, which will all be althered at once by altering the templates. However, the home page is already 100% translated and everything seems to work just fine.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;Today I just used &lt;code&gt;useTranslations()&lt;&#x2F;code&gt; as explanined last week&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-05-03</title>
        <published>2024-05-03T00:00:00+00:00</published>
        <updated>2024-05-03T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-05-03/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-05-03/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Tuesday, day 121 of 366 (33.06%). We&#x27;re in week 18 of 52 (34.61%).&lt;&#x2F;p&gt;
&lt;p&gt;Sick day&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-05-02</title>
        <published>2024-05-02T00:00:00+00:00</published>
        <updated>2024-05-02T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-05-02/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-05-02/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Tuesday, day 121 of 366 (33.06%). We&#x27;re in week 18 of 52 (34.61%).&lt;&#x2F;p&gt;
&lt;p&gt;Sick day&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-05-01</title>
        <published>2024-05-01T00:00:00+00:00</published>
        <updated>2024-05-01T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-05-01/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-05-01/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Wednesday, day 122 of 366 (33.33%). We&#x27;re in week 18 of 52 (34.61%).&lt;&#x2F;p&gt;
&lt;p&gt;Today is an international holiday. &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;International_Workers%27_Day&quot;&gt;International Workers&#x27; Day&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-04-30</title>
        <published>2024-04-30T00:00:00+00:00</published>
        <updated>2024-04-30T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-04-30/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-04-30/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Tuesday, day 121 of 366 (33.06%). We&#x27;re in week 18 of 52 (34.61%).&lt;&#x2F;p&gt;
&lt;p&gt;Sick day&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-04-29</title>
        <published>2024-04-29T00:00:00+00:00</published>
        <updated>2024-04-29T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-04-29/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-04-29/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Monday, day 120 of 366 (32.78%). We&#x27;re in week 18 of 52 (34.61%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;website&#x2F;issues&#x2F;101&quot;&gt;Make website multilingual&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I was able to make the website multilingual. On Monday, I found out that the creator of the &lt;a href=&quot;https:&#x2F;&#x2F;itnext.io&#x2F;techniques-approaches-for-multi-language-gatsby-apps-8ba13ff433c5&quot;&gt;tutorial&lt;&#x2F;a&gt; I was following also made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;3nvi&#x2F;gatsby-intl&#x2F;&quot;&gt;plugins&lt;&#x2F;a&gt; to help implement multi-language Gatsby apps. I chose to give &lt;code&gt;gatsby-theme-intl&lt;&#x2F;code&gt; a try since it&#x27;s recommended to integrate i18n for the first time into an existing Gatsby app. It took me a while to get it to work, but in the end, you have to:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;Install &lt;code&gt;gatsby-plugin-intl&lt;&#x2F;code&gt; (the &lt;code&gt;gatsby-theme-intl&lt;&#x2F;code&gt; composes it):&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;npm&lt;&#x2F;span&gt;&lt;span&gt; i @3nvi&#x2F;gatsby-plugin-intl
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;PS: &lt;code&gt;gatsby-plugin-intl&lt;&#x2F;code&gt; depends on &lt;code&gt;react-helmet&lt;&#x2F;code&gt;, so you also need to have that installed.&lt;&#x2F;p&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;Install &lt;code&gt;gatsby-theme-intl&lt;&#x2F;code&gt;:&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;npm&lt;&#x2F;span&gt;&lt;span&gt; i @3nvi&#x2F;gatsby-theme-intl
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;Create an &lt;code&gt;i18n.json&lt;&#x2F;code&gt; file that will hold all your translations:&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;pre data-lang=&quot;json&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-json &quot;&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;en&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: {
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;translations&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: {
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;your translations for &amp;quot;en&amp;quot; language
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;    },
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;pt&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: {
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;translations&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: {
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;your translations for &amp;quot;pt&amp;quot; language
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;add as many languages as you need
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ol start=&quot;4&quot;&gt;
&lt;li&gt;Access your translations file from &lt;code&gt;gatsby-config.js&lt;&#x2F;code&gt;:&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;pre data-lang=&quot;js&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-js &quot;&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;translations &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;require&lt;&#x2F;span&gt;&lt;span&gt;(&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;.&#x2F;i18n.json&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;);
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ol start=&quot;5&quot;&gt;
&lt;li&gt;Configure &lt;code&gt;gatsby-theme-intl&lt;&#x2F;code&gt; in &lt;code&gt;gatsby-config.js&lt;&#x2F;code&gt;:&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;pre data-lang=&quot;js&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-js &quot;&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    resolve: `&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;@3nvi&#x2F;gatsby-theme-intl&lt;&#x2F;span&gt;&lt;span&gt;`,
&lt;&#x2F;span&gt;&lt;span&gt;    options: {
&lt;&#x2F;span&gt;&lt;span&gt;        supportedLanguages: [&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;en&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;pt&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;],
&lt;&#x2F;span&gt;&lt;span&gt;        defaultLanguage: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;en&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;        i18nextConfig: {
&lt;&#x2F;span&gt;&lt;span&gt;            resources: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;translations&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;        },
&lt;&#x2F;span&gt;&lt;span&gt;    },
&lt;&#x2F;span&gt;&lt;span&gt;},
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;After setting everything up, you can access your translations from any &lt;code&gt;.js&lt;&#x2F;code&gt; component using:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;js&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-js &quot;&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;{ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;useTranslation &lt;&#x2F;span&gt;&lt;span&gt;} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span&gt; @3&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;nvi&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;gatsby&lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;theme&lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;intl
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span&gt;{ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;t &lt;&#x2F;span&gt;&lt;span&gt;} = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;useTranslations
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;export default function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;Component&lt;&#x2F;span&gt;&lt;span&gt;() {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;lt;h1&amp;gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;t&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;title&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)}&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;h1&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;lt;p&amp;gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;t&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;description.name&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)}&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;p&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    )
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;In this case, you would need a &lt;code&gt;&amp;quot;title&amp;quot;&lt;&#x2F;code&gt; key with the title and a &lt;code&gt;&amp;quot;description&amp;quot;&lt;&#x2F;code&gt; key with a &lt;code&gt;&amp;quot;name&amp;quot;&lt;&#x2F;code&gt; key in your &lt;code&gt;i18n.json&lt;&#x2F;code&gt; file, so it would look something like this:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;json&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-json &quot;&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;en&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: {
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;translations&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: {
&lt;&#x2F;span&gt;&lt;span&gt;            &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;title&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Component Title &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;            &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;description&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: {
&lt;&#x2F;span&gt;&lt;span&gt;                &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Jane Doe&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;            }
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;    },
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;pt&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: {
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;translations&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: {
&lt;&#x2F;span&gt;&lt;span&gt;            &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;title&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;...
&lt;&#x2F;span&gt;&lt;span&gt;       &lt;&#x2F;span&gt;&lt;span style=&quot;background-color:#bf616a;color:#2b303b;&quot;&gt; &lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;...
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;I was able to implement most translations on the website; the only things missing are the dropdown button options in the contact section and the header buttons.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;Today I learned how to use the &lt;code&gt;gatsby-theme-intl&lt;&#x2F;code&gt; plugin to make a Gatsby app multilingual.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-04-26</title>
        <published>2024-04-26T00:00:00+00:00</published>
        <updated>2024-04-26T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-04-26/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-04-26/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Friday, day 117 of 366 (31.96%). We&#x27;re in week 17 of 52 (32.69%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;website&#x2F;issues&#x2F;101&quot;&gt;Make website multilingual&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;website&#x2F;issues&#x2F;135&quot;&gt;Update GitHub actions&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I started by fixing the GitHub Actions checkout action version to v4, so that could fix these warnings:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;build&lt;&#x2F;span&gt;&lt;span&gt; (20.x)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Node.js&lt;&#x2F;span&gt;&lt;span&gt; 16 actions are deprecated. Please update the following actions to use Node.js 20: actions&#x2F;checkout@v2. For more information see: https:&#x2F;&#x2F;github.blog&#x2F;changelog&#x2F;2023-09-22-github-actions-transitioning-from-node-16-to-node-20&#x2F;.
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;that were showing up when the action ran.&lt;&#x2F;p&gt;
&lt;p&gt;After that, I went back to setting up the website&#x27;s translation. I reset the WIP commit from yesterday and committed a few things, but I must have messed something up in the middle because I started getting an error with GraphQL. I tried removing the &lt;code&gt;node_modules&lt;&#x2F;code&gt; directory and run &lt;code&gt;npm i&lt;&#x2F;code&gt;, but I kept getting the same error. I got a little scared that the same error was happening in the developer branch, so I went to check, and everything was fine. I replaced the files from &lt;code&gt;feat&#x2F;translation&lt;&#x2F;code&gt; that were giving me the error with the same ones from &lt;code&gt;develop&lt;&#x2F;code&gt; to see if maybe I messed something up in them, but I kept getting the same error. After a while, I decided to just go back to the tutorial and redo yesterday&#x27;s path to see if maybe something I did in the &lt;code&gt;gatsby-*.js&lt;&#x2F;code&gt; files was causing it, and apparently it was because after I redid everything, I went back to yesterday&#x27;s &lt;code&gt;lang&lt;&#x2F;code&gt; error:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ERROR &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;#95313  HTML.COMPILATION
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Building&lt;&#x2F;span&gt;&lt;span&gt; static HTML failed for path &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&#x2F;legal&#x2F;privacy-policy&#x2F;&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;See&lt;&#x2F;span&gt;&lt;span&gt; our docs page for more info on this error: https:&#x2F;&#x2F;gatsby.dev&#x2F;debug-html
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;6 &lt;&#x2F;span&gt;&lt;span&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;export &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;const PageContextProvider &lt;&#x2F;span&gt;&lt;span&gt;= ({ pageContext, children }) =&amp;gt; {
&lt;&#x2F;span&gt;&lt;span&gt;   7 |   const { i18n } = useTranslation();
&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;  8 |   i18n.changeLanguage(pageContext.lang);
&lt;&#x2F;span&gt;&lt;span&gt;     |                                   ^
&lt;&#x2F;span&gt;&lt;span&gt;   9 |
&lt;&#x2F;span&gt;&lt;span&gt;  10 |   return &amp;lt;PageContext.Provider value={pageContext}&amp;gt;{children}&amp;lt;&#x2F;PageContext.Provider&amp;gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  11 | };
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;WebpackError:&lt;&#x2F;span&gt;&lt;span&gt; TypeError: Cannot read properties of undefined (reading &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;lang&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;which I haven&#x27;t been able to fix yet.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-04-25</title>
        <published>2024-04-25T00:00:00+00:00</published>
        <updated>2024-04-25T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-04-25/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-04-25/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Thursday, day 116 of 366 (31.69%). We&#x27;re in week 17 of 52 (32.69%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
Fix GitHub action&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;website&#x2F;issues&#x2F;101&quot;&gt;Start working on the website&#x27;s translation&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I was able to get the updated website to pass GitHub actions. Mauricio helped me realize that I was missing a few things in the &lt;code&gt;packages.json&lt;&#x2F;code&gt; file:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;json&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-json &quot;&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;scripts&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: {
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;build&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;gatsby build&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;develop&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;gatsby develop&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;format&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;prettier --write &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;\&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;**&#x2F;*.{js,jsx,ts,tsx,json,md,scss}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;\&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;start&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;yarn run develop&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;serve&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;gatsby serve&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;clean&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;gatsby clean&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;lint&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;prettier --check &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;\&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;**&#x2F;*.{js,jsx,ts,tsx,json,md,scss}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;\&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;test&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;echo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;\&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Write tests! -&amp;gt; https:&#x2F;&#x2F;gatsby.dev&#x2F;unit-testing&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;\&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt; &amp;amp;&amp;amp; exit 1&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;  },
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;devDependencies&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: {
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;prettier&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;2.0.5&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;All I had to do was add those.&lt;&#x2F;p&gt;
&lt;p&gt;I also started working on making the website translatable. I&#x27;m following &lt;a href=&quot;https:&#x2F;&#x2F;itnext.io&#x2F;techniques-approaches-for-multi-language-gatsby-apps-8ba13ff433c5&quot;&gt;this tutorial&lt;&#x2F;a&gt;, and everything was running fine until I added the &lt;code&gt;pageContext.js&lt;&#x2F;code&gt; file, and it started giving me this error:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ERROR&lt;&#x2F;span&gt;&lt;span&gt;  UNKNOWN
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Truncated&lt;&#x2F;span&gt;&lt;span&gt; page data information for the failed page &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&#x2F;legal&#x2F;privacy-policy&#x2F;&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: {
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;errors&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: {},
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;path&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&#x2F;legal&#x2F;privacy-policy&#x2F;&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;slicesMap&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: {},
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;pageContext&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: {
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;slug&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&#x2F;legal&#x2F;privacy-policy&#x2F;&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;failed&lt;&#x2F;span&gt;&lt;span&gt; Building static HTML for pages - 2.179s
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ERROR &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;#95313  HTML.COMPILATION
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Building&lt;&#x2F;span&gt;&lt;span&gt; static HTML failed for path &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&#x2F;legal&#x2F;privacy-policy&#x2F;&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;See&lt;&#x2F;span&gt;&lt;span&gt; our docs page for more info on this error: https:&#x2F;&#x2F;gatsby.dev&#x2F;debug-html
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;6 &lt;&#x2F;span&gt;&lt;span&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;export &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;const PageContextProvider &lt;&#x2F;span&gt;&lt;span&gt;= ({ pageContext, children }) =&amp;gt; {
&lt;&#x2F;span&gt;&lt;span&gt;   7 |   const { i18n } = useTranslation();
&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;  8 |   i18n.changeLanguage(pageContext.lang);
&lt;&#x2F;span&gt;&lt;span&gt;     |                                   ^
&lt;&#x2F;span&gt;&lt;span&gt;   9 |
&lt;&#x2F;span&gt;&lt;span&gt;  10 |   return &amp;lt;PageContext.Provider value={pageContext}&amp;gt;{children}&amp;lt;&#x2F;PageContext.Provider&amp;gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  11 | };
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;WebpackError:&lt;&#x2F;span&gt;&lt;span&gt; TypeError: Cannot read properties of undefined (reading &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;lang&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;It says the error occurs on multiple pages, and by the looks of it, I believe I have to define the &lt;code&gt;lang&lt;&#x2F;code&gt; variable on each page. I&#x27;m just not sure how since the tutorial doesn&#x27;t specify that. I wasn&#x27;t able to really dig into trying to solve this, but I don&#x27;t think it&#x27;s anything too complicated, which means I can try to get the translation logic done by tomorrow.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;Today I learned about the &lt;a href=&quot;https:&#x2F;&#x2F;www.i18next.com&#x2F;&quot;&gt;i18next internationalization-framework&lt;&#x2F;a&gt; that provides plurals, context, interpolation, format, and much more.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-04-24</title>
        <published>2024-04-24T00:00:00+00:00</published>
        <updated>2024-04-24T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-04-24/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-04-24/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Wednesday, day 115 of 366 (31.42%). We&#x27;re in week 17 of 52 (32.69%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
Adjust map configuration&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
Adjust page layout&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I 100% finished the map. I was able to put in the right coordinates and customize the page correctly, including making it responsive. This last part is what took most of my morning, but I was able to figure out the CSS eventually.&lt;&#x2F;p&gt;
&lt;p&gt;I also fixed Node&#x27;s version on the GitHub action, and Mauricio helped me solve the peer dependency error that was making me use &lt;code&gt;--force&lt;&#x2F;code&gt; when installing anything with &lt;code&gt;npm&lt;&#x2F;code&gt;:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;npm&lt;&#x2F;span&gt;&lt;span&gt; ERR! code ERESOLVE
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;npm&lt;&#x2F;span&gt;&lt;span&gt; ERR! ERESOLVE unable to resolve dependency tree
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;npm&lt;&#x2F;span&gt;&lt;span&gt; ERR!
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;npm&lt;&#x2F;span&gt;&lt;span&gt; ERR! While resolving: omnicode-solutions@1.0.0
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;npm&lt;&#x2F;span&gt;&lt;span&gt; ERR! Found: react@18.2.0
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;npm&lt;&#x2F;span&gt;&lt;span&gt; ERR! node_modules&#x2F;react
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;npm&lt;&#x2F;span&gt;&lt;span&gt; ERR!   react@&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;^18.2.0&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; from the root project
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;npm&lt;&#x2F;span&gt;&lt;span&gt; ERR!   peer react@&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;^18.0.0 || ^0.0.0&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; from gatsby@5.13.4
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;npm&lt;&#x2F;span&gt;&lt;span&gt; ERR!   node_modules&#x2F;gatsby
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;npm&lt;&#x2F;span&gt;&lt;span&gt; ERR!     gatsby@&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;^5.13.3&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; from the root project
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;npm&lt;&#x2F;span&gt;&lt;span&gt; ERR!     peer gatsby@&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&amp;gt;=2.0.0&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; from gatsby-plugin-scroll-reveal@0.0.7
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;npm&lt;&#x2F;span&gt;&lt;span&gt; ERR!     node_modules&#x2F;gatsby-plugin-scroll-reveal
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;npm&lt;&#x2F;span&gt;&lt;span&gt; ERR!       gatsby-plugin-scroll-reveal@&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;^0.0.7&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; from the root project
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;npm&lt;&#x2F;span&gt;&lt;span&gt; ERR!   1 more (react-dom)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;npm&lt;&#x2F;span&gt;&lt;span&gt; ERR!
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;npm&lt;&#x2F;span&gt;&lt;span&gt; ERR! Could not resolve dependency:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;npm&lt;&#x2F;span&gt;&lt;span&gt; ERR! peer react@&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;^16.8.0&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; from gatsby-plugin-scroll-reveal@0.0.7
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;npm&lt;&#x2F;span&gt;&lt;span&gt; ERR! node_modules&#x2F;gatsby-plugin-scroll-reveal
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;npm&lt;&#x2F;span&gt;&lt;span&gt; ERR!   gatsby-plugin-scroll-reveal@&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;^0.0.7&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; from the root project
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;npm&lt;&#x2F;span&gt;&lt;span&gt; ERR!
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;npm&lt;&#x2F;span&gt;&lt;span&gt; ERR! Fix the upstream dependency conflict, or retry
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;npm&lt;&#x2F;span&gt;&lt;span&gt; ERR! this command with&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; --force&lt;&#x2F;span&gt;&lt;span&gt; or&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; --legacy-peer-deps
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;npm&lt;&#x2F;span&gt;&lt;span&gt; ERR! to accept an incorrect (and potentially broken) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;dependency&lt;&#x2F;span&gt;&lt;span&gt; resolution.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;npm&lt;&#x2F;span&gt;&lt;span&gt; ERR!
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;npm&lt;&#x2F;span&gt;&lt;span&gt; ERR!
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;npm&lt;&#x2F;span&gt;&lt;span&gt; ERR! For a full report see:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;npm&lt;&#x2F;span&gt;&lt;span&gt; ERR! &#x2F;home&#x2F;omnicoder&#x2F;.npm&#x2F;_logs&#x2F;2024-04-24T15_23_29_798Z-eresolve-report.txt
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;npm&lt;&#x2F;span&gt;&lt;span&gt; ERR! A complete log of this run can be found in: &#x2F;home&#x2F;omnicoder&#x2F;.npm&#x2F;_logs&#x2F;2024-04-24T15_23_29_798Z-debug-0.log
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;This made it possible for the action to run &lt;code&gt;npm ci&lt;&#x2F;code&gt;, but it still fails on &lt;code&gt;npm run lint&lt;&#x2F;code&gt;:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;npm&lt;&#x2F;span&gt;&lt;span&gt; ERR! Missing script: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;lint&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;npm&lt;&#x2F;span&gt;&lt;span&gt; ERR!
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;npm&lt;&#x2F;span&gt;&lt;span&gt; ERR! Did you mean this?
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;npm&lt;&#x2F;span&gt;&lt;span&gt; ERR!     npm link &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Symlink a package folder
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;npm&lt;&#x2F;span&gt;&lt;span&gt; ERR!
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;npm&lt;&#x2F;span&gt;&lt;span&gt; ERR! To see a list of scripts, run:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;npm&lt;&#x2F;span&gt;&lt;span&gt; ERR!   npm run
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;npm&lt;&#x2F;span&gt;&lt;span&gt; ERR! A complete log of this run can be found in: &#x2F;home&#x2F;runner&#x2F;.npm&#x2F;_logs&#x2F;2024-04-24T15_40_29_599Z-debug-0.log
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Error:&lt;&#x2F;span&gt;&lt;span&gt; Process completed with exit code 1.
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Tomorrow I&#x27;ll work on that, and I&#x27;ll start working on the website translation after.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-04-23</title>
        <published>2024-04-23T00:00:00+00:00</published>
        <updated>2024-04-23T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-04-23/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-04-23/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Tuesday, day 114 of 366 (31.14%). We&#x27;re in week 17 of 52 (32.69%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;website&#x2F;issues&#x2F;128&quot;&gt;Add a map to Omnicode&#x27;s website&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today, I successfully added the map to the website. I couldn&#x27;t do it by following the &lt;a href=&quot;https:&#x2F;&#x2F;www.andrewl.net&#x2F;article&#x2F;gatsby-geo-simple-map&quot;&gt;first tutorial I found&lt;&#x2F;a&gt;; I kept getting this error:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ERROR &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;#95312
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;window&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; is not available during server-side rendering. Enable &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;DEV_SSR&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; to debug this during &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;gatsby%0D%0Adevelop&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;.%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;D%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;A
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;I tried doing some research to see if there was a way of fixing it, but I couldn&#x27;t find anything that worked.&lt;&#x2F;p&gt;
&lt;p&gt;After that, I decided to look up the Leaflet plugin and ended up on &lt;a href=&quot;https:&#x2F;&#x2F;www.gatsbyjs.com&#x2F;plugins&#x2F;gatsby-plugin-react-leaflet&#x2F;&quot;&gt;Gatsby&#x27;s documentation&lt;&#x2F;a&gt;, which had a little tutorial on how to add a map. I followed the steps from there, and it worked. I adjusted it a little so that it was its own component and changed some variables to be passed as props.&lt;&#x2F;p&gt;
&lt;p&gt;I still have to adjust the map on the page so that it looks like the &lt;a href=&quot;https:&#x2F;&#x2F;soloist.ai&#x2F;omnicodesolutions&quot;&gt;inspiration&lt;&#x2F;a&gt; and get the right coordinates in it.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-04-19</title>
        <published>2024-04-19T00:00:00+00:00</published>
        <updated>2024-04-19T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-04-19/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-04-19/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Friday, day 110 of 366 (30.05%). We&#x27;re in week 16 of 52 (30.76%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;website&#x2F;issues&#x2F;131&quot;&gt;Copy remaining files to new Gatsby project&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;website&#x2F;issues&#x2F;131&quot;&gt;Fix deprecation warnings&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today, I finished upgrading Gatsby and Node! Everything from the old website works perfectly on the new one. I finished copying all the missing files, hit a few errors, but nothing I hadn&#x27;t fixed before already, and then I dealt with the deprecation warnings. There is one last one that I just saw, which is this:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;warn&lt;&#x2F;span&gt;&lt;span&gt; Browserslist: caniuse-lite is outdated. Please run:
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;npx&lt;&#x2F;span&gt;&lt;span&gt; update-browserslist-db@latest
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Why&lt;&#x2F;span&gt;&lt;span&gt; you should do it regularly: https:&#x2F;&#x2F;github.com&#x2F;browserslist&#x2F;update-db#readme
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;It doesn&#x27;t seem too big of a deal, but I&#x27;ll look it up tomorrow to see if I can remove it. Then, I can go back to adding the map to the new upgraded website.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-04-18</title>
        <published>2024-04-18T00:00:00+00:00</published>
        <updated>2024-04-18T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-04-18/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-04-18/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Thursday, day 109 of 366 (29.78%). We&#x27;re in week 16 of 52 (30.76%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;website&#x2F;issues&#x2F;131&quot;&gt;Add the website&#x27;s content to new Gatsby project&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today, I started by trying to fix yesterday&#x27;s remark error. I spent a long time trying to figure out what was going wrong and read a lot of GitHub repos, but everything looked fine. Running &lt;code&gt;gatsby build&lt;&#x2F;code&gt; kept getting this warning:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;warn&lt;&#x2F;span&gt;&lt;span&gt; .&#x2F;src&#x2F;components&#x2F;hero.js
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Attempted&lt;&#x2F;span&gt;&lt;span&gt; import error: &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;remark&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39; does not contain a default export (imported as &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;remark&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;.
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;So, I thought it had something to do with it. I did a little research and saw that in this case I have to put what I want to import in curly braces, but that didn&#x27;t do it. A while later, I decided to just run &lt;code&gt;gatsby serve&lt;&#x2F;code&gt; to see if what was going on the page would help me figure out the code, and when I opened it, the images were all wrong. I went to GitHub to take a look at the branches and saw a &lt;code&gt;develop&lt;&#x2F;code&gt; branch with the right images, so I asked Mauricio if he was sure the branch I should copy the content from was &lt;code&gt;production&lt;&#x2F;code&gt; and not &lt;code&gt;develop&lt;&#x2F;code&gt;, and he said it was &lt;code&gt;develop&lt;&#x2F;code&gt;. After I replaced all the wrong content, added a few missing plugins and directories, I got the same remark error, but changing the imports fixed it this time.&lt;&#x2F;p&gt;
&lt;p&gt;I did notice some deprecation warnings when running &lt;code&gt;gatsby build&lt;&#x2F;code&gt;, so I&#x27;ll be working on that and adding the rest of the content tomorrow.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-04-17</title>
        <published>2024-04-17T00:00:00+00:00</published>
        <updated>2024-04-17T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-04-17/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-04-17/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Wednesday, day 108 of 366 (29.50%). We&#x27;re in week 16 of 52 (30.76%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;website&#x2F;issues&#x2F;131&quot;&gt;Add the website&#x27;s content to new Gatsby project&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I continued to copy the content from the website into the new Gatsby project. I was able to solve yesterday&#x27;s problem; it turns out I needed another plugin called &lt;code&gt;gatsby-transformer-sharp&lt;&#x2F;code&gt;, and I needed to put both &lt;code&gt;gatsby-transformer-sharp&lt;&#x2F;code&gt; and &lt;code&gt;gatsby-plugin-sharp&lt;&#x2F;code&gt; in the &lt;code&gt;plugins&lt;&#x2F;code&gt; array in &lt;code&gt;gatsby-config.js&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;After I fixed that, I went ahead and copied the &lt;code&gt;index&lt;&#x2F;code&gt; page. I had to install a bunch of other plugins to get past the first few errors, but that&#x27;s when the bigger problems began. Gatsby is throwing an unknown error about &lt;code&gt;remark&lt;&#x2F;code&gt; when it tries to compile the page&#x27;s HTML:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ERROR&lt;&#x2F;span&gt;&lt;span&gt;  UNKNOWN
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Truncated&lt;&#x2F;span&gt;&lt;span&gt; page data information for the failed page &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: {
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;errors&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: {},
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;path&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;slicesMap&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: {},
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;pageContext&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: {}
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;failed&lt;&#x2F;span&gt;&lt;span&gt; Building static HTML for pages - 2.154s
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ERROR &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;#95313  HTML.COMPILATION
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Building&lt;&#x2F;span&gt;&lt;span&gt; static HTML failed for path &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;See&lt;&#x2F;span&gt;&lt;span&gt; our docs page for more info on this error: https:&#x2F;&#x2F;gatsby.dev&#x2F;debug-html
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;8 &lt;&#x2F;span&gt;&lt;span&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;const&lt;&#x2F;span&gt;&lt;span&gt; Hero = props =&amp;gt; {
&lt;&#x2F;span&gt;&lt;span&gt;   9 |   const toHTML = value =&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; 10 |     remark().use(recommended).use(remarkHtml).processSync(value).toString()
&lt;&#x2F;span&gt;&lt;span&gt;     |           ^
&lt;&#x2F;span&gt;&lt;span&gt;  11 |
&lt;&#x2F;span&gt;&lt;span&gt;  12 |   function createMarkup(data) {
&lt;&#x2F;span&gt;&lt;span&gt;  13 |     const dataHtml = toHTML(data)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  WebpackError: TypeError: (0 , remark.default) is not a function
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;I read a little about remark, but couldn&#x27;t figure out what these are.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-04-16</title>
        <published>2024-04-16T00:00:00+00:00</published>
        <updated>2024-04-16T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-04-16/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-04-16/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Tuesday, day 107 of 366 (29.23%). We&#x27;re in week 16 of 52 (30.76%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;website&#x2F;issues&#x2F;131&quot;&gt;Update Gatsby&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I created the new Gatsby project with a newer version of Gatsby, NodeJS, and NPM. I started moving all the information from the website and adding plugins as I need (also newer versions).&lt;&#x2F;p&gt;
&lt;p&gt;The first thing that broke was &lt;code&gt;gatsby-plugin-google-gtag&lt;&#x2F;code&gt; because now it needs some configuration in &lt;code&gt;gatsby-config.js&lt;&#x2F;code&gt;, this is from the &lt;a href=&quot;https:&#x2F;&#x2F;www.gatsbyjs.com&#x2F;plugins&#x2F;gatsby-plugin-google-gtag&#x2F;&quot;&gt;Gatsby documentation&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;js&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-js &quot;&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span&gt;module.exports = {
&lt;&#x2F;span&gt;&lt;span&gt;  plugins: [
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;      resolve: `&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;gatsby-plugin-google-gtag&lt;&#x2F;span&gt;&lt;span&gt;`,
&lt;&#x2F;span&gt;&lt;span&gt;      options: {
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; You can add multiple tracking ids and a pageview event will be fired for all of them.
&lt;&#x2F;span&gt;&lt;span&gt;        trackingIds: [
&lt;&#x2F;span&gt;&lt;span&gt;          &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;GA-TRACKING_ID&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; Google Analytics &#x2F; GA
&lt;&#x2F;span&gt;&lt;span&gt;          &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;AW-CONVERSION_ID&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; Google Ads &#x2F; Adwords &#x2F; AW
&lt;&#x2F;span&gt;&lt;span&gt;          &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;DC-FLOODIGHT_ID&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; Marketing Platform advertising products (Display &amp;amp; Video 360, Search Ads 360, and Campaign Manager)
&lt;&#x2F;span&gt;&lt;span&gt;        ],
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; This object gets passed directly to the gtag config command
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; This config will be shared across all trackingIds
&lt;&#x2F;span&gt;&lt;span&gt;        gtagConfig: {
&lt;&#x2F;span&gt;&lt;span&gt;          optimize_id: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;OPT_CONTAINER_ID&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;          anonymize_ip: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;true&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;          cookie_expires: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;        },
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; This object is used for configuration specific to this plugin
&lt;&#x2F;span&gt;&lt;span&gt;        pluginConfig: {
&lt;&#x2F;span&gt;&lt;span&gt;          &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; Puts tracking script in the head instead of the body
&lt;&#x2F;span&gt;&lt;span&gt;          head: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;false&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;          &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; Setting this parameter is also optional
&lt;&#x2F;span&gt;&lt;span&gt;          respectDNT: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;true&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;          &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; Avoids sending pageview hits from custom paths
&lt;&#x2F;span&gt;&lt;span&gt;          exclude: [&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&#x2F;preview&#x2F;**&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&#x2F;do-not-track&#x2F;me&#x2F;too&#x2F;&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;],
&lt;&#x2F;span&gt;&lt;span&gt;          &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; Defaults to https:&#x2F;&#x2F;www.googletagmanager.com
&lt;&#x2F;span&gt;&lt;span&gt;          origin: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;YOUR_SELF_HOSTED_ORIGIN&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;          &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; Delays processing pageview events on route update (in milliseconds)
&lt;&#x2F;span&gt;&lt;span&gt;          delayOnRouteUpdate: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;        },
&lt;&#x2F;span&gt;&lt;span&gt;      },
&lt;&#x2F;span&gt;&lt;span&gt;    },
&lt;&#x2F;span&gt;&lt;span&gt;  ],
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Mauricio helped me find the ID it needed in the current website, but after I added it, it was still not working, so I removed the plugin from &lt;code&gt;package.json&lt;&#x2F;code&gt;, ran &lt;code&gt;npm i&lt;&#x2F;code&gt; to remove it, added it again, and ran the same command to reinstall it, and it worked.&lt;&#x2F;p&gt;
&lt;p&gt;After that, I moved in the components and a second error arose:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ERROR &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;#85908  GRAPHQL.VALIDATION
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;There&lt;&#x2F;span&gt;&lt;span&gt; was an error in your GraphQL query:
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;The&lt;&#x2F;span&gt;&lt;span&gt; fragment &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;GatsbyImageSharpFluid&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; does not exist.
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;7 &lt;&#x2F;span&gt;&lt;span&gt;|  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt; images with lazy loading and reduced file sizes. The image is loaded using a
&lt;&#x2F;span&gt;&lt;span&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;8 &lt;&#x2F;span&gt;&lt;span&gt;|  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span&gt;`&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;useStaticQuery&lt;&#x2F;span&gt;&lt;span&gt;`, which allows us to load the image from directly within this
&lt;&#x2F;span&gt;&lt;span&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;9 &lt;&#x2F;span&gt;&lt;span&gt;|  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt; component, rather than having to pass the image data down from pages.
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;10 &lt;&#x2F;span&gt;&lt;span&gt;|  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;*
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;11 &lt;&#x2F;span&gt;&lt;span&gt;|  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt; For more information, see the docs:
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;12 &lt;&#x2F;span&gt;&lt;span&gt;|  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt; - `&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;gatsby-image&lt;&#x2F;span&gt;&lt;span&gt;`: https:&#x2F;&#x2F;gatsby.dev&#x2F;gatsby-image
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;13 &lt;&#x2F;span&gt;&lt;span&gt;|  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt; - `&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;useStaticQuery&lt;&#x2F;span&gt;&lt;span&gt;`: https:&#x2F;&#x2F;www.gatsbyjs.org&#x2F;docs&#x2F;use-static-query&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;14 &lt;&#x2F;span&gt;&lt;span&gt;|  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;*&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;15 &lt;&#x2F;span&gt;&lt;span&gt;|
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;16 &lt;&#x2F;span&gt;&lt;span&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;const&lt;&#x2F;span&gt;&lt;span&gt; Image = () =&amp;gt; {
&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; 17 |   const data = useStaticQuery(graphql`
&lt;&#x2F;span&gt;&lt;span&gt;     |                                       &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;^^^^^^^^^^^^^^^^^^^^^^^^
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;18 &lt;&#x2F;span&gt;&lt;span&gt;|     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;query &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;  19 |       placeholderImage: file(relativePath: { eq: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;gatsby-astronaut.png&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; }) {
&lt;&#x2F;span&gt;&lt;span&gt;  20 |         childImageSharp {
&lt;&#x2F;span&gt;&lt;span&gt;  21 |           fluid(maxWidth: 300) {
&lt;&#x2F;span&gt;&lt;span&gt;  22 |             ...GatsbyImageSharpFluid
&lt;&#x2F;span&gt;&lt;span&gt;  23 |           }
&lt;&#x2F;span&gt;&lt;span&gt;  24 |         }
&lt;&#x2F;span&gt;&lt;span&gt;  25 |       }
&lt;&#x2F;span&gt;&lt;span&gt;  26 |     }
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;27 &lt;&#x2F;span&gt;&lt;span&gt;|   `)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;File: src&#x2F;components&#x2F;image.js
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;failed to extract queries from components - 0.386s
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;I looked it up and found an &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gatsbyjs&#x2F;gatsby&#x2F;issues&#x2F;20984&quot;&gt;issue on GitHub&lt;&#x2F;a&gt;. Apparently, a lot of people were having this problem with Gatsby v2, but it was supposed to be fixed. Eventually, I found someone saying that they had forgotten &lt;code&gt;gatsby-plugin-sharp&lt;&#x2F;code&gt;, so I installed it, but it still doesn&#x27;t work. I&#x27;ll try doing the same thing I did for &lt;code&gt;gatsby-plugin-google-gtag&lt;&#x2F;code&gt; tomorrow.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-04-15</title>
        <published>2024-04-15T00:00:00+00:00</published>
        <updated>2024-04-15T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-04-15/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-04-15/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Monday, day 106 of 366 (28.96%). We&#x27;re in week 16 of 52 (30.76%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;website&#x2F;issues&#x2F;128&quot;&gt;Add a map to Omnicode&#x27;s website&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I tried upgrading to Gatsby v5, just to try everything before starting from scratch, but it didn&#x27;t work. I am following &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;website&#x2F;issues&#x2F;131&quot;&gt;Mauricio&#x27;s instructions&lt;&#x2F;a&gt; to rebuild the website with new NodeJS, NPM, and Gatsby. I&#x27;m having some trouble with the syncing part, but I&#x27;m sure I&#x27;ll figure it out.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;Today I learned how to install Gatsby CLI and create a new project with:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;npm&lt;&#x2F;span&gt;&lt;span&gt; install&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -g&lt;&#x2F;span&gt;&lt;span&gt; gatsby-cli
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;gatsby&lt;&#x2F;span&gt;&lt;span&gt; new
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;I also learned how to set NodeJS and NPM in the &lt;code&gt;engines&lt;&#x2F;code&gt; section of the &lt;code&gt;package.json&lt;&#x2F;code&gt; file and ensure that npm commands such as &lt;code&gt;npm install&lt;&#x2F;code&gt; will fail if the required engine versions do not match. All you have to do is add a &lt;code&gt;.npmrc&lt;&#x2F;code&gt; file and set &lt;code&gt;engine-strict&lt;&#x2F;code&gt; to &lt;code&gt;true&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-04-12</title>
        <published>2024-04-12T00:00:00+00:00</published>
        <updated>2024-04-12T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-04-12/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-04-12/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Friday, day 103 of 366 (28.14%). We&#x27;re in week 15 of 52 (28.84%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;website&#x2F;issues&#x2F;128&quot;&gt;Add a map to Omnicode&#x27;s website&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I tried to fix the error with the Leaflet map plugin. First, I attempted to reinstall it, but it didn&#x27;t work. So, I conducted a little research and came across &lt;a href=&quot;https:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;70941127&#x2F;gatsby-plugin-react-leaflet-with-gatsby-v3-build-error#:~:text=It%20should%20be,of%20MapContainer%20wrapper.&quot;&gt;this post&lt;&#x2F;a&gt; on Stack Overflow, which suggests that it&#x27;s a version issue that was resolved with Node 14.x. The problem is, I can&#x27;t use a higher version of Node because then I have to use a higher version of npm, and that&#x27;s not compatible with the current Gatsby version I&#x27;m using. Therefore, I tried upgrading Gatsby.&lt;&#x2F;p&gt;
&lt;p&gt;I went to the Gatsby documentation and found &lt;a href=&quot;https:&#x2F;&#x2F;www.gatsbyjs.com&#x2F;docs&#x2F;reference&#x2F;release-notes&#x2F;migrating-from-v2-to-v3&#x2F;&quot;&gt;this tutorial to migrate from v2 to v3&lt;&#x2F;a&gt;. I attempted to follow it, but since Gatsby is already on v5, I couldn&#x27;t figure out what version I had to use for each plugin.&lt;&#x2F;p&gt;
&lt;p&gt;Tomorrow, I&#x27;m going to try to upgrade all the way to v5, but I think it&#x27;s going to be easier to just start a new Gatsby project with everything in the latest version and then migrate the content from the current site to that.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-04-11</title>
        <published>2024-04-11T00:00:00+00:00</published>
        <updated>2024-04-11T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-04-11/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-04-11/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Thursday, day 102 of 366 (27.86%). We&#x27;re in week 15 of 52 (28.84%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;website&#x2F;issues&#x2F;119&quot;&gt;work on link to blog in Omnicode&#x27;s website&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;website&#x2F;issues&#x2F;128&quot;&gt;start working on adding a map to Omnicode&#x27;s website&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I removed an unecessary logic from the blog link in the website and started working on a new issue, which is to add a map with the company&#x27;s location to the website. I found what looked like a &lt;a href=&quot;https:&#x2F;&#x2F;www.andrewl.net&#x2F;article&#x2F;gatsby-geo-simple-map&quot;&gt;good tempalte&lt;&#x2F;a&gt;, but I&#x27;m having trouble including it. &lt;&#x2F;p&gt;
&lt;p&gt;First, I got this error:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Uncaught&lt;&#x2F;span&gt;&lt;span&gt; Error: Cannot find module &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;react&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Which looked very stringe, so I looked it up and saw someone saying that they bumped into it after installing a couple plugins - which I had just done to add the map. The person said that running &lt;code&gt;npm install&lt;&#x2F;code&gt; fixed it, so I id that and it did fix that problem, but it showed another error:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;yarn&lt;&#x2F;span&gt;&lt;span&gt; run v1.22.4
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; gatsby develop
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;The&lt;&#x2F;span&gt;&lt;span&gt; above error occurred in the &amp;lt;StoreStateProvider&amp;gt; component: in StoreStateProvider in App
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;that looks even more weird because it tells me literally nothing. So I looked it up and found someone else saing that this usually happens because of a mismatch of React and the underlying Gatsby version that may have been previously installed in the application. I tried a few things, but what ultimatly solved it was:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;removing &lt;code&gt;node_modlues&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;removing &lt;code&gt;package-lock.json&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;removing &lt;code&gt;yarn.json&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;running &lt;code&gt;npm install&lt;&#x2F;code&gt; (I stop using yarn)&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;Now, the website builds, but the map doesn&#x27;t work, so that&#x27;s what I&#x27;ll be working on tomorrow.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;Today I learned that to run the gatsby site with npm you use:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;npm&lt;&#x2F;span&gt;&lt;span&gt; run-script build
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-04-10</title>
        <published>2024-04-10T00:00:00+00:00</published>
        <updated>2024-04-10T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-04-10/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-04-10/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Wednesday, day 101 of 366 (27.59%). We&#x27;re in week 15 of 52 (28.84%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;scrimba.com&#x2F;learn&#x2F;learnreact&quot;&gt;Watch React course&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I continued watching the React course.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;Today I learned about &lt;code&gt;localStorage&lt;&#x2F;code&gt; and continued to work on the markdown notes state.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-04-09</title>
        <published>2024-04-09T00:00:00+00:00</published>
        <updated>2024-04-09T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-04-09/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-04-09/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Tuesday, day 100 of 366 (27.32%). We&#x27;re in week 15 of 52 (28.84%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;scrimba.com&#x2F;learn&#x2F;learnreact&quot;&gt;Watch React course&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I continued watching the React course.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;Today I started the last chapter of the course. I started applying all the new knowledge in improving a markdown notes app.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-04-08</title>
        <published>2024-04-08T00:00:00+00:00</published>
        <updated>2024-04-08T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-04-08/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-04-08/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Monday, day 099 of 366 (27.04%). We&#x27;re in week 15 of 52 (28.84%).&lt;&#x2F;p&gt;
&lt;p&gt;Sick day&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-04-05</title>
        <published>2024-04-05T00:00:00+00:00</published>
        <updated>2024-04-05T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-04-05/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-04-05/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Friday, day 096 of 366 (26.22%). We&#x27;re in week 14 of 52 (26.92%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;scrimba.com&#x2F;learn&#x2F;learnreact&quot;&gt;Watch React course&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I continued watching the React course.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;Today I finished chapter 3 of the course. I learned about the &lt;code&gt;useEffect&lt;&#x2F;code&gt; function and how to handle side effects when accessing things outside React (APIs, websockets, etc.)&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-04-04</title>
        <published>2024-04-04T00:00:00+00:00</published>
        <updated>2024-04-04T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-04-04/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-04-04/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Thursday, day 095 of 366 (25.95%). We&#x27;re in week 14 of 52 (26.92%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=bMknfKXIFA8&quot;&gt;Watch React course&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I continued watching the React course.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;Today I learned about forms: how to access, update and submit the fields information.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-04-03</title>
        <published>2024-04-03T00:00:00+00:00</published>
        <updated>2024-04-03T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-04-03/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-04-03/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Wednesday, day 094 of 366 (25.68%). We&#x27;re in week 14 of 52 (26.92%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=bMknfKXIFA8&quot;&gt;Watch React course&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I continued watching the React course.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;Today I finished the states section of the course and started learning baout forms in React.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-04-02</title>
        <published>2024-04-02T00:00:00+00:00</published>
        <updated>2024-04-02T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-04-02/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-04-02/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Tuesday, day 093 of 366 (25.40%). We&#x27;re in week 14 of 52 (26.92%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=bMknfKXIFA8&quot;&gt;Watch React course&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I continued watching the React course.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;Today I learned more about states and how to pass data around the app.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-04-01</title>
        <published>2024-04-01T00:00:00+00:00</published>
        <updated>2024-04-01T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-04-01/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-04-01/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Monday, day 092 of 366 (25.13%). We&#x27;re in week 14 of 52 (26.92%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=bMknfKXIFA8&quot;&gt;Watch React course&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I continued watching the React course.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;Today I learned about states and how to update them to make the app dynamic.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-03-28</title>
        <published>2024-03-28T00:00:00+00:00</published>
        <updated>2024-03-28T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-03-28/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-03-28/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Thursday, day 088 of 366 (24.04%). We&#x27;re in week 13 of 52 (25.00%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
Learn React&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I continued the &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=bMknfKXIFA8&quot;&gt;React course&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;I also &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;blog&#x2F;issues&#x2F;147&quot;&gt;updated the blog&#x27;s title&lt;&#x2F;a&gt; because it was still with Adidoks default.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;Today the course covered a lot of CSS and atyling and I learned about props and how to make my functions acctually reusable in the components.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-03-27</title>
        <published>2024-03-27T00:00:00+00:00</published>
        <updated>2024-03-27T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-03-27/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-03-27/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Wednesday, day 087 of 366 (23.77%). We&#x27;re in week 13 of 52 (25.00%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;website&#x2F;issues&#x2F;119&quot;&gt;Add link to Blog on Omnicode&#x27;s website&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
Start learning React&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I checked out &lt;a href=&quot;https:&#x2F;&#x2F;omnicode.solutions&#x2F;&quot;&gt;Omnicode&#x27;s website&lt;&#x2F;a&gt; with Mauricio, and we decided it would be good for me to learn some React and work on it a little bit. Today, I just added a new item to the navbar that will lead to the &lt;a href=&quot;https:&#x2F;&#x2F;omnicode.com.br&#x2F;blog&#x2F;&quot;&gt;blog&lt;&#x2F;a&gt; and started watching some videos on Gatsby and React.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;Today I learned about &lt;a href=&quot;https:&#x2F;&#x2F;nodejs.org&#x2F;en&quot;&gt;Node&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;deno.com&#x2F;&quot;&gt;Deno&lt;&#x2F;a&gt;, and &lt;a href=&quot;https:&#x2F;&#x2F;bun.sh&#x2F;&quot;&gt;Bun&lt;&#x2F;a&gt;, which are all JavaScript runtimes. I also learned about &lt;a href=&quot;https:&#x2F;&#x2F;www.npmjs.com&#x2F;&quot;&gt;npm&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;yarnpkg.com&#x2F;&quot;&gt;yarn&lt;&#x2F;a&gt;, which are package and dependency managers for JavaScript (like pip for Python).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;readings&quot;&gt;Readings&lt;&#x2F;h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.alura.com.br&#x2F;artigos&#x2F;npm-vs-yarn?utm_term=&amp;amp;utm_campaign=%5BSearch%5D+%5BPerformance%5D+-+Dynamic+Search+Ads+-+Artigos+e+Conte%C3%BAdos&amp;amp;utm_source=adwords&amp;amp;utm_medium=ppc&amp;amp;hsa_acc=7964138385&amp;amp;hsa_cam=11384329873&amp;amp;hsa_grp=111087461203&amp;amp;hsa_ad=687448474447&amp;amp;hsa_src=g&amp;amp;hsa_tgt=dsa-2273097816642&amp;amp;hsa_kw=&amp;amp;hsa_mt=&amp;amp;hsa_net=adwords&amp;amp;hsa_ver=3&amp;amp;gad_source=1&amp;amp;gclid=CjwKCAjwh4-wBhB3EiwAeJsppE4f3g43yUdEgfywxrtKglhsSzqyVDBXNp1wjjFa4qHews6doZCKdxoCSNkQAvD_BwE&quot;&gt;NPM vs Yarn&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=wr8rbaHUM6Q&quot;&gt;Livestream | Megans Coding Corner — Gatsby Tutorial, Part 1: Focus on Creating &amp;amp; Deploying&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=bMknfKXIFA8&quot;&gt;React Course - Beginner&#x27;s Tutorial for React JavaScript Library [2022]&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-03-26</title>
        <published>2024-03-26T00:00:00+00:00</published>
        <updated>2024-03-26T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-03-26/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-03-26/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Tuesday, day 086 of 366 (23.49%). We&#x27;re in week 13 of 52 (25.00%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;blog&#x2F;issues&#x2F;137&quot;&gt;Add button to toggle langauges&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;blog&#x2F;issues&#x2F;141&quot;&gt;Rename blog section&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I was able to get the toggle language button to work on all pages. I used Tera&#x27;s &lt;code&gt;join&lt;&#x2F;code&gt; function to set the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;blog&#x2F;blob&#x2F;fdcd5359380aea28c9c7da89af2c6aef2418e8ae&#x2F;themes&#x2F;adidoks&#x2F;templates&#x2F;blog&#x2F;page.html#L7C1-L7C76&quot;&gt;&lt;code&gt;current_section&lt;&#x2F;code&gt; variable in the blog&#x27;s pages template&lt;&#x2F;a&gt; and in the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;blog&#x2F;blob&#x2F;fdcd5359380aea28c9c7da89af2c6aef2418e8ae&#x2F;themes&#x2F;adidoks&#x2F;templates&#x2F;authors&#x2F;single.html#L5C1-L5C87&quot;&gt;authors&#x27; single template&lt;&#x2F;a&gt; so that I can get the URL from the same section, but in another language. &lt;&#x2F;p&gt;
&lt;p&gt;I also renamed the blog section to posts so that the blog URL would be &lt;code&gt;https:&#x2F;&#x2F;omnicode.com.br&#x2F;blog&#x2F;posts&#x2F;&lt;&#x2F;code&gt; instead of &lt;code&gt;https:&#x2F;&#x2F;omnicode.com.br&#x2F;blog&#x2F;blog&#x2F;&lt;&#x2F;code&gt; and removed the Docs section and the &#x27;Get started&#x27; button from the home page, since they were not being used.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;Today I learned about &lt;a href=&quot;https:&#x2F;&#x2F;keats.github.io&#x2F;tera&#x2F;docs&#x2F;#join&quot;&gt;Tera&#x27;s &lt;code&gt;join&lt;&#x2F;code&gt; function&lt;&#x2F;a&gt; that joins an array with a string:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;tera&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-tera &quot;&gt;&lt;code class=&quot;language-tera&quot; data-lang=&quot;tera&quot;&gt;&lt;span&gt;{{ [&amp;#39;a&amp;#39;, &amp;#39;b&amp;#39; ] | join(sep=&amp;quot;, &amp;quot;) }} {# output = &amp;quot;a, b&amp;quot; #}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-03-25</title>
        <published>2024-03-25T00:00:00+00:00</published>
        <updated>2024-03-25T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-03-25/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-03-25/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Monday, day 085 of 366 (23.22%). We&#x27;re in week 13 of 52 (25.00%).&lt;&#x2F;p&gt;
&lt;p&gt;Sick day&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-03-22</title>
        <published>2024-03-22T00:00:00+00:00</published>
        <updated>2024-03-22T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-03-22/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-03-22/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Friday, day 082 of 366 (22.40%). We&#x27;re in week 12 of 52 (23.07%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;blog&#x2F;issues&#x2F;136&quot;&gt;Fix author redirection&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;blog&#x2F;issues&#x2F;137&quot;&gt;Add button to toggle languages&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I fixed the redirection to the author page: when you clicked on the name in the blog page, it was always leading to the English version of the author page. I immediately thought it probably had something to do with that &lt;code&gt;lang&lt;&#x2F;code&gt; parameter from &lt;code&gt;get_taxonomy&lt;&#x2F;code&gt; since here we are using &lt;code&gt;get_taxonomy_url&lt;&#x2F;code&gt;. I did a quick research to make sure the function had that parameter, and all I had to do was add &lt;code&gt;lang=lang&lt;&#x2F;code&gt; in the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;blog&#x2F;blob&#x2F;main&#x2F;themes&#x2F;adidoks&#x2F;templates&#x2F;macros&#x2F;page-publish-metadata.html&quot;&gt;publish metadata macro&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;I started making the toggle button and got it to work for the home page and the blog section, but I got stuck while trying to make it work for the blog&#x27;s pages.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-03-21</title>
        <published>2024-03-21T00:00:00+00:00</published>
        <updated>2024-03-21T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-03-21/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-03-21/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Thursday, day 081 of 366 (22.13%). We&#x27;re in week 12 of 52 (23.07%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;blog&#x2F;issues&#x2F;123&quot;&gt;Powered by GitHub Pages instead of Netlify&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;blog&#x2F;issues&#x2F;121&quot;&gt;Redo all links&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;blog&#x2F;issues&#x2F;129&quot;&gt;Change social media links&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;blog&#x2F;issues&#x2F;130&quot;&gt;Fix blog redirection in the home page&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I made PRs for all the remaining issues: changing Netlify to GitHub Pages and redoing all the links was really easy. For the first one, all it took was changing the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;blog&#x2F;blob&#x2F;598b7c6514c7302629cc2c30aa5f753763be3595&#x2F;config.toml#L128C1-L131C1&quot;&gt;footer info&lt;&#x2F;a&gt; in &lt;code&gt;config.toml&lt;&#x2F;code&gt;, and for the second, I just had to run a &lt;code&gt;sed&lt;&#x2F;code&gt; command:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sed -i &lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;s&#x2F;worklog-luisa&#x2F;blog&#x2F;g&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39; content&#x2F;blog&#x2F;*.md
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;It replaced all occurrences of &amp;quot;worklog-luisa&amp;quot; in the &lt;code&gt;content&#x2F;blog&lt;&#x2F;code&gt; directory with &amp;quot;blog&amp;quot;. I added this to the project as a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;blog&#x2F;blob&#x2F;redo_links&#x2F;redo_links.sh&quot;&gt;script&lt;&#x2F;a&gt; in case I need to run it again later.&lt;&#x2F;p&gt;
&lt;p&gt;Fixing the blog redirection in the home page was the most time-consuming out of the four. I wasn&#x27;t sure what I was going to do, so I tried changing the index markdown files in the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;blog&#x2F;tree&#x2F;home_links&#x2F;content&quot;&gt;&lt;code&gt;content&lt;&#x2F;code&gt; directory&lt;&#x2F;a&gt; so that they would somehow know the current URL and proceed accordingly. After a while, I realized there was no way to do that, and I had to use the template to get the correct URL. In the end, I added a path variable to the index files and used that in the template with a &lt;code&gt;get_url()&lt;&#x2F;code&gt; function.&lt;&#x2F;p&gt;
&lt;p&gt;Lastly, I changed all the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;blog&#x2F;blob&#x2F;c18bd50b76f6c4af032e206a311ed7e5da480973&#x2F;config.toml#L91C1-L133C12&quot;&gt;social media links in the &lt;code&gt;config.toml&lt;&#x2F;code&gt; file&lt;&#x2F;a&gt; to Omnicode&#x27;s socials. I also added LinkedIn and changed Twitter&#x27;s logo to the new one. It took me a while to find the paths - I eventually found them in Bootstrap docs - but other than that, it was quite a simple fix.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;readings&quot;&gt;Readings&lt;&#x2F;h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;icons.getbootstrap.com&#x2F;icons&#x2F;twitter-x&#x2F;&quot;&gt;Path for the X (former Twitter) logo&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;icons.getbootstrap.com&#x2F;icons&#x2F;linkedin&#x2F;&quot;&gt;Path for the LinkedIn logo&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-03-20</title>
        <published>2024-03-20T00:00:00+00:00</published>
        <updated>2024-03-20T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-03-20/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-03-20/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Wednesday, day 080 of 366 (21.85%). We&#x27;re in week 12 of 52 (23.07%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;blog&#x2F;issues&#x2F;122&quot;&gt;Fix blog CSS&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;blog&#x2F;issues&#x2F;124&quot;&gt;Fix new blog script&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;blog&#x2F;issues&#x2F;119&quot;&gt;Add Google analytics code&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I was able to make PRs for all the issues from the planning plus the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;blog&#x2F;issues&#x2F;120&quot;&gt;translate month and search issue&lt;&#x2F;a&gt;. The issues from the planning I already had an idea on how to fix, so they went by quite fast. &lt;&#x2F;p&gt;
&lt;p&gt;Fixing the CSS was just a matter of changing the necessary links from &lt;code&gt;worklog-luisa&lt;&#x2F;code&gt; to &lt;code&gt;blog&lt;&#x2F;code&gt;. &lt;&#x2F;p&gt;
&lt;p&gt;Fixing the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;blog&#x2F;blob&#x2F;main&#x2F;new-blog.sh&quot;&gt;new blog script&lt;&#x2F;a&gt; was just changing one line; instead of creating a new &lt;code&gt;.md&lt;&#x2F;code&gt; file in the &lt;code&gt;blog_pr_br&lt;&#x2F;code&gt; directory (which no longer exists), it now creates a &lt;code&gt;.pt.md&lt;&#x2F;code&gt; file in the &lt;code&gt;blog&lt;&#x2F;code&gt; directory. &lt;&#x2F;p&gt;
&lt;p&gt;Adding Google Analytics was just copying a code into &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;blog&#x2F;blob&#x2F;main&#x2F;themes&#x2F;adidoks&#x2F;templates&#x2F;base.html&quot;&gt;&lt;code&gt;base.html&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;, but I don&#x27;t know if it&#x27;s working yet, so this issue may not be ready to close yet.&lt;&#x2F;p&gt;
&lt;p&gt;Lastly, I went back to trying to figure out a way to translate the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;blog&#x2F;blob&#x2F;main&#x2F;themes&#x2F;adidoks&#x2F;templates&#x2F;macros&#x2F;header.html&quot;&gt;header macro&lt;&#x2F;a&gt; without having access to a page so that I could use &lt;code&gt;page.lang&lt;&#x2F;code&gt; to select the correct data file like I did for the other macros. After a lot of researching and not finding anything, I noticed that &lt;a href=&quot;https:&#x2F;&#x2F;www.getzola.org&#x2F;documentation&#x2F;content&#x2F;shortcodes&#x2F;&quot;&gt;Zola&#x27;s shortcodes documentation&lt;&#x2F;a&gt; was popping out a lot. I knew it wasn&#x27;t what I was looking for, but I decided to take a look anyway, and right at the end of the website, it was talking about the &lt;code&gt;lang&lt;&#x2F;code&gt; variable:&lt;&#x2F;p&gt;
&lt;p&gt;&amp;quot;Every shortcode can access the current language in the &lt;code&gt;lang&lt;&#x2F;code&gt; variable in the context.&amp;quot;&lt;&#x2F;p&gt;
&lt;p&gt;Which means I don&#x27;t need a page so that I can access that page&#x27;s language; I just use &lt;code&gt;lang&lt;&#x2F;code&gt; and get the context&#x27;s language, so I used that for the header and all other macros, and it works perfectly.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;Today I learned that I can use the &lt;code&gt;lang&lt;&#x2F;code&gt; variable in any template&#x27;s shortcode to access the context&#x27;s language.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-03-19</title>
        <published>2024-03-19T00:00:00+00:00</published>
        <updated>2024-03-19T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-03-19/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-03-19/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Tuesday, day 079 of 366 (21.58%). We&#x27;re in week 12 of 52 (23.07%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;blog&#x2F;issues&#x2F;4&quot;&gt;Translate all elements of the pages in portuguese&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;blog&#x2F;issues&#x2F;4&quot;&gt;Change script so that it also renames and moves blog_pt_br&#x27;s files&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I tried finding a way to translate the search bar&#x27;s label in the header, but couldn&#x27;t find a way to get the page&#x27;s language. Because &lt;code&gt;base.html&lt;&#x2F;code&gt; is a custom template (unlike &lt;code&gt;page.html&lt;&#x2F;code&gt; that is recognized by Zola and already has the &lt;code&gt;page&lt;&#x2F;code&gt; variable), I can&#x27;t seem to find a way to know which page I&#x27;m at and get that language code. I might have to go back to the old method with this one and make a macro for the entries in Portuguese. I also realized that the month&lt;&#x2F;p&gt;
&lt;p&gt;After a while stuck on this, I moved on to the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;blog&#x2F;blob&#x2F;feat&#x2F;install_theme&#x2F;format-content.sh&quot;&gt;script&lt;&#x2F;a&gt;. It was quite simple; all I need to do was use the &lt;code&gt;mv&lt;&#x2F;code&gt; command to change all files from &lt;code&gt;.md&lt;&#x2F;code&gt; to &lt;code&gt;.pt.md&lt;&#x2F;code&gt; and then move them to the &lt;code&gt;blog&lt;&#x2F;code&gt; directory so that the part I already had can add the author to all of them.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;readings&quot;&gt;Readings&lt;&#x2F;h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;askubuntu.com&#x2F;questions&#x2F;214560&#x2F;how-to-move-multiple-files-at-once-to-a-specific-destination-directory&quot;&gt;How to move multiple files at once to a specific destination directory?&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;getzola&#x2F;zola&#x2F;issues&#x2F;687&quot;&gt;Templates need a variable that could be “section” or “page”&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;getzola&#x2F;zola&#x2F;pull&#x2F;484&#x2F;commits&#x2F;957c6bed9ded71166851aefbb48c3be1420f068e&quot;&gt;section.subsections is now an array of paths&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-03-18</title>
        <published>2024-03-18T00:00:00+00:00</published>
        <updated>2024-03-18T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-03-18/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-03-18/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Monday, day 078 of 366 (21.31%). We&#x27;re in week 12 of 52 (23.07%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;blog&#x2F;issues&#x2F;4&quot;&gt;Translate all elements of the pages in portuguese&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I wasn&#x27;t able to translate every single element on all pages, but I made really good progress on it. I found a way to not hard code anything and use the same macros and templates for entries in both English and Portuguese. Basically, all I did was create files with the translations I need &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;blog&#x2F;blob&#x2F;feat&#x2F;install_theme&#x2F;data&#x2F;en-translations.toml&quot;&gt;for English&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;blog&#x2F;blob&#x2F;feat&#x2F;install_theme&#x2F;data&#x2F;pt-translations.toml&quot;&gt;for Portuguese&lt;&#x2F;a&gt; and import what I need in each &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;blog&#x2F;tree&#x2F;feat&#x2F;install_theme&#x2F;themes&#x2F;adidoks&#x2F;templates&#x2F;macros&quot;&gt;macro&lt;&#x2F;a&gt;. I use the page&#x27;s &lt;code&gt;lang&lt;&#x2F;code&gt; variable to set what file I want to get using:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;html&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-html &quot;&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span&gt;load_data(path=&amp;#39;data&#x2F;&amp;#39; ~ page.lang ~ &amp;#39;-translations.toml&amp;#39;)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;which is easy when you already have the page (like in the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;blog&#x2F;blob&#x2F;feat&#x2F;install_theme&#x2F;themes&#x2F;adidoks&#x2F;templates&#x2F;macros&#x2F;page-publish-metadata.html&quot;&gt;page publish metadata macro&lt;&#x2F;a&gt;), but becomes a bit more tricky in other macros. With the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;blog&#x2F;blob&#x2F;feat&#x2F;install_theme&#x2F;themes&#x2F;adidoks&#x2F;templates&#x2F;macros&#x2F;section-navigation.html&quot;&gt;section navigation macro&lt;&#x2F;a&gt; I was able to add the page as a parameter and I just pass the first page from the paginator to it, but with the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;blog&#x2F;blob&#x2F;feat&#x2F;install_theme&#x2F;themes&#x2F;adidoks&#x2F;templates&#x2F;macros&#x2F;header.html&quot;&gt;header macro&lt;&#x2F;a&gt; I&#x27;m not sure what to do yet. One way or another, I believe I can finish this tomorrow and then add Google Analytics and do any minor adjustments.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;Today I learned that Git does not track empty directories; it only tracks files, which means that when I pushed the empty templates folder, it just ignored it which caused Zola to fail building the website. To fix that I just added a &lt;code&gt;.gitkeep&lt;&#x2F;code&gt; file; you can give the file any other name, &lt;code&gt;.gitkeep&lt;&#x2F;code&gt; is just a convention. I read that some people like to add a &lt;code&gt;README&lt;&#x2F;code&gt; file explaining why the directory is empty and why it needs to be there.&lt;&#x2F;p&gt;
&lt;p&gt;I also learned a little more about &lt;a href=&quot;https:&#x2F;&#x2F;www.getzola.org&#x2F;documentation&#x2F;templates&#x2F;pagination&#x2F;&quot;&gt;pagination with Zola&lt;&#x2F;a&gt; and how you can use the &lt;code&gt;pages&lt;&#x2F;code&gt; variable to access an array of all pages for the current pager.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-03-15</title>
        <published>2024-03-15T00:00:00+00:00</published>
        <updated>2024-03-15T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-03-15/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-03-15/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Friday, day 075 of 366 (20.49%). We&#x27;re in week 11 of 52 (21.15%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;blog&#x2F;issues&#x2F;4&quot;&gt;Stop using Adidoks as submodule&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;blog&#x2F;issues&#x2F;4&quot;&gt;Configure authors for the entries in portuguese&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I started by taking my mind off the author for a little bit. I decided to try and fully remove Adidoks as a submodule so that I could get the remote branch to a working state again, so I decided to reinstall it and get rid of it again. I tried running the command from the &lt;a href=&quot;https:&#x2F;&#x2F;www.getzola.org&#x2F;themes&#x2F;adidoks&#x2F;&quot;&gt;installation step in the documentation&lt;&#x2F;a&gt;, but it gave me an error saying that &lt;code&gt;themes&#x2F;adidoks&lt;&#x2F;code&gt; already existed in the index. I didn&#x27;t know what the index was, so I went back to the &lt;a href=&quot;https:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;1260748&#x2F;how-do-i-remove-a-submodule#:~:text=Older%20community%20wiki,rm%20%2Drf%20path_to_submodule&quot;&gt;steps I followed&lt;&#x2F;a&gt; last week and the forth step says: &#x27;Remove the submodule files from the working tree and index: &lt;code&gt;git rm --cached path_to_submodule&lt;&#x2F;code&gt; (no trailing slash).&#x27; so I ran it and it worked! After that I just cloned Adidoks into a different local repository and copied the files I needed into the worklog. I pushed it to the remote repo and got it back to a working state.&lt;&#x2F;p&gt;
&lt;p&gt;After that I came back to the authors in the entries in Portuguese. Yesterday I thought I would have to do everything manually, but today I decided to give using the same taxonomy (authors) one last shot before scrapping everything. I moved the &#x27;autores&#x27; files to the authors folder and renamed them as &lt;code&gt;.pt.md&lt;&#x2F;code&gt; and went back to where I was two days ago: the page for the author exists, but the author is not listed on the authors page and doesn&#x27;t show on the blog entries. First things first, I know I was missing something in the &lt;code&gt;config.toml&lt;&#x2F;code&gt; file, so I started testing different things to see what worked and settled on declaring the taxonomies like this:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;toml&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-toml &quot;&gt;&lt;code class=&quot;language-toml&quot; data-lang=&quot;toml&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;taxonomies &lt;&#x2F;span&gt;&lt;span&gt;= [
&lt;&#x2F;span&gt;&lt;span&gt;  {&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name &lt;&#x2F;span&gt;&lt;span&gt;= &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;authors&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;lang &lt;&#x2F;span&gt;&lt;span&gt;= &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;en&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;},
&lt;&#x2F;span&gt;&lt;span&gt;  {&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name &lt;&#x2F;span&gt;&lt;span&gt;= &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;authors&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;lang &lt;&#x2F;span&gt;&lt;span&gt;= &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;pt&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;}, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Basic definition: no feed or pagination
&lt;&#x2F;span&gt;&lt;span&gt;]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;both inside and outside of the &lt;code&gt;[languages.pt]&lt;&#x2F;code&gt; tag.&lt;&#x2F;p&gt;
&lt;p&gt;With that I made some progress: the author was now showing in the authors list for the entries in Portuguese. I just had to figure out why it wasn&#x27;t showing in the entries themselves. At first I thought the problem was with the templates, so I used the &lt;code&gt;lang&lt;&#x2F;code&gt; variable in the &lt;code&gt;list.html&lt;&#x2F;code&gt; and &lt;code&gt;single.html&lt;&#x2F;code&gt; that I learned about yesterday to make some if conditions about the section and macro that would be used by each template. That made everything the language it should be, but didn&#x27;t solve the problem. I did some more research and found that page again about the &lt;code&gt;lang&lt;&#x2F;code&gt; parameter for the &lt;code&gt;get_taxonomy_url&lt;&#x2F;code&gt; function, so I added it and it worked! &lt;&#x2F;p&gt;
&lt;p&gt;Finally, all that was left to do was add the author to all existing pages, so I got started on the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;blog&#x2F;blob&#x2F;feat&#x2F;install_theme&#x2F;add-author.sh&quot;&gt;script to add the author to all files&lt;&#x2F;a&gt;. I already knew I was going to use the &lt;code&gt;sed&lt;&#x2F;code&gt; command, from that research I did on &lt;a href=&quot;https:&#x2F;&#x2F;omnicode.com.br&#x2F;blog&#x2F;blog&#x2F;2024-03-07&#x2F;&quot;&gt;the 7th&lt;&#x2F;a&gt;, so I went straight to it. I knew all I had to do was replace the fourth line in all the files, so I did some tests to make sure everything was working the right way and after I was confident enough I ran the script. It didn&#x27;t come out right the first time, I wrote:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;md&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-md &quot;&gt;&lt;code class=&quot;language-md&quot; data-lang=&quot;md&quot;&gt;&lt;span&gt;[taxonomies]
&lt;&#x2F;span&gt;&lt;span&gt;authors = [Luísa Coelho]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;instead of:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;md&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-md &quot;&gt;&lt;code class=&quot;language-md&quot; data-lang=&quot;md&quot;&gt;&lt;span&gt;[taxonomies]
&lt;&#x2F;span&gt;&lt;span&gt;authors = [&amp;quot;Luísa Coelho&amp;quot;]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;But all I had to do was delete the lines I added (which I also did using &lt;code&gt;sed&lt;&#x2F;code&gt;), fix the script, and run it again.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;Today I learned a couple things about the &lt;code&gt;sed&lt;&#x2F;code&gt; command:&lt;&#x2F;p&gt;
&lt;h3 id=&quot;1-how-to-edit-a-line&quot;&gt;1. How to edit a line:&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sed &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;{line-num}s&#x2F;{current-content}&#x2F;{new-content}&#x2F;{n-times}&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; file_name
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;If you want to change the line no matter the current content is you can use &lt;code&gt;.*&lt;&#x2F;code&gt; in its place.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;2-how-to-delete-a-line&quot;&gt;2. How to delete a line:&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sed &lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;{line-num}d&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39; file_name
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;You can also delete a range of lines by simply separating the first and the last lines with a comma:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sed &lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;{first-line},{last-line}d&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39; file_name
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;There are a lot more uses for &lt;code&gt;sed&lt;&#x2F;code&gt;, these are just the ones I used today.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;readings&quot;&gt;Readings&lt;&#x2F;h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;tecadmin.net&#x2F;sed-command-to-delete-line-in-file&#x2F;&quot;&gt;Sed Command to Delete Lines in a File&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.ibm.com&#x2F;support&#x2F;pages&#x2F;how-change-line-using-sed-command&quot;&gt;How to Change Line Using SED Command&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-03-14</title>
        <published>2024-03-14T00:00:00+00:00</published>
        <updated>2024-03-14T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-03-14/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-03-14/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Thursday, day 074 of 366 (20.21%). We&#x27;re in week 11 of 52 (21.15%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;blog&#x2F;issues&#x2F;4&quot;&gt;Configure authors for the entries in portuguese&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I discovered I spent the whole day trying to understand why the author was not working in the entries in Portuguese. I even tried to go back to using the same taxonomy for both languages to see if maybe I missed something and it was possible, but couldn&#x27;t make it work. Just a couple of minutes ago, I found this &lt;a href=&quot;https:&#x2F;&#x2F;zola.discourse.group&#x2F;t&#x2F;different-page-languages-without-multilingual-site&#x2F;1958&#x2F;5&quot;&gt;feature request&lt;&#x2F;a&gt; on Zola&#x27;s website and realized that there is no way to do what I want with Zola by using &lt;code&gt;.pt.md&lt;&#x2F;code&gt; files, and I have to manually set a language parameter in the extra section of &lt;code&gt;config.toml&lt;&#x2F;code&gt; and use that on the pages to check for what I want to do.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;Today I learned more about the taxonomies and its templates. The &lt;code&gt;list.html&lt;&#x2F;code&gt; template comes with the following variables:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;ts&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-ts &quot;&gt;&lt;code class=&quot;language-ts&quot; data-lang=&quot;ts&quot;&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; The site config
&lt;&#x2F;span&gt;&lt;span&gt;config: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Config&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; The data of the taxonomy, from the config
&lt;&#x2F;span&gt;&lt;span&gt;taxonomy: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;TaxonomyConfig&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; The current full permalink for that page
&lt;&#x2F;span&gt;&lt;span&gt;current_url: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;String&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; The current path for that page
&lt;&#x2F;span&gt;&lt;span&gt;current_path: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;String&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; All terms for that taxonomy
&lt;&#x2F;span&gt;&lt;span&gt;terms: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;Array&lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;TaxonomyTerm&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; The lang of the current page
&lt;&#x2F;span&gt;&lt;span&gt;lang: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;String&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;And I believe the last one can be quite useful for doing what I want, since I&#x27;m going to have to do it manually. The &lt;code&gt;single.html&lt;&#x2F;code&gt; template gets similar variables:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;ts&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-ts &quot;&gt;&lt;code class=&quot;language-ts&quot; data-lang=&quot;ts&quot;&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; The site config
&lt;&#x2F;span&gt;&lt;span&gt;config: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Config&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; The data of the taxonomy, from the config
&lt;&#x2F;span&gt;&lt;span&gt;taxonomy: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;TaxonomyConfig&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; The current full permalink for that page
&lt;&#x2F;span&gt;&lt;span&gt;current_url: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;String&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; The current path for that page
&lt;&#x2F;span&gt;&lt;span&gt;current_path: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;String&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; The current term being rendered
&lt;&#x2F;span&gt;&lt;span&gt;term: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;TaxonomyTerm&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; The lang of the current page
&lt;&#x2F;span&gt;&lt;span&gt;lang: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;String&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Again, the &lt;code&gt;lang&lt;&#x2F;code&gt; variable may come in handy.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-03-13</title>
        <published>2024-03-13T00:00:00+00:00</published>
        <updated>2024-03-13T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-03-13/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-03-13/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Wednesday, day 073 of 366 (19.94%). We&#x27;re in week 11 of 52 (21.15%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;blog&#x2F;issues&#x2F;4&quot;&gt;Configure authors for the entries in portuguese&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I wasn&#x27;t able to finish configuring the authors, but I made some really nice progress, especially when it comes to really understanding where everything is coming from in the theme. To try and fix the issues from yesterday, I decided to use the same taxonomy for both languages, but the &#x27;autores&#x27; page just didn&#x27;t have any authors, even though I had an author declared. This time I immediately looked at the URL and knew I was looking in the wrong place again, so I switched it and there it was! Except... everything was in English because of the English templates from Adidoks. So I thought it would be an easy fix, but as it turns out you can&#x27;t have different templates for the same taxonomy (believe me, I tried). I saw something about &lt;code&gt;get_taxonomy&lt;&#x2F;code&gt; accepting a &lt;code&gt;lang&lt;&#x2F;code&gt; parameter, but this wouldn&#x27;t solve my problem.&lt;&#x2F;p&gt;
&lt;p&gt;So I ended up going back to the &#x27;autores&#x27; taxonomy and ran into the same issue from yesterday: no authors on the main page even though there was supposed to be one there. I tried going to the URL where the author&#x27;s page was supposed to be, and it was there! So the page was being generated, just not being listed on the first one. That&#x27;s when I started really digging into the Adidoks templates to see where everything was coming from, and it all led me to the macros. Looking into them, I saw that when they use the &lt;code&gt;get_taxonomy&lt;&#x2F;code&gt; function, they expect a taxonomy of the type &lt;code&gt;authors&lt;&#x2F;code&gt;, which is not the case for the blog in Portuguese. I had some trouble figuring out how to create a new macro and use it in the code, and by the time I did, there wasn&#x27;t much time left for me to implement them, which led to a lot of rush and a lot of errors. I was able to partially translate the summary in the posts; I just have to figure out a way to translate the date. The author for the post still doesn&#x27;t show, and the &#x27;autores&#x27; page is still empty. But I believe these can be fixed tomorrow with the things I discovered today.&lt;&#x2F;p&gt;
&lt;p&gt;Lastly, unfortunately, I won&#x27;t be done after this. Apparently, the Adidoks is still a submodule in my project even after I followed &lt;a href=&quot;https:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;1260748&#x2F;how-do-i-remove-a-submodule#:~:text=Via%20the%20page,rm%20%2Drf%20path_to_submodule&quot;&gt;these steps&lt;&#x2F;a&gt;, which is causing Git to not be able to deploy the site.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-03-12</title>
        <published>2024-03-12T00:00:00+00:00</published>
        <updated>2024-03-12T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-03-12/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-03-12/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Tuesday, day 072 of 366 (19.67%). We&#x27;re in week 11 of 52 (21.15%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;blog&#x2F;issues&#x2F;4&quot;&gt;Install Adidoks theme to the portuguese pages&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I realized that the pages in portuguese were already working; I just wasn&#x27;t looking in the right place. From &lt;a href=&quot;https:&#x2F;&#x2F;www.getzola.org&#x2F;documentation&#x2F;content&#x2F;multilingual&#x2F;&quot;&gt;Zola&#x27;s documentation&lt;&#x2F;a&gt; yesterday, I assumed that the pages would be at &lt;code&gt;127.0.0.1:1111&#x2F;blog&#x2F;pt&#x2F;&lt;&#x2F;code&gt; since I thought the language code would always come last, but I was wrong: the pages are at &lt;code&gt;127.0.0.1:1111&#x2F;pt&#x2F;blog&#x2F;&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;After I figured that out, I started working on the authors. I made the &lt;code&gt;.pt.md&lt;&#x2F;code&gt; files for the page&#x27;s content and duplicated Adidoks&#x27; templates but changed the files it would look for, but it&#x27;s not working. The &lt;code&gt;&#x2F;pt&#x2F;authors&#x2F;&lt;&#x2F;code&gt; page exists but doesn&#x27;t show the authors I have (which is just me). Maybe I&#x27;m not sure what I&#x27;m missing, but maybe it&#x27;s just something else I have to change in the template.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;Today I learned how to use &lt;code&gt;mv&lt;&#x2F;code&gt; in a for loop to rename multiple files:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span&gt; for i in *.log; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;do &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;mv&lt;&#x2F;span&gt;&lt;span&gt; -- &amp;quot;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;i&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; &amp;quot;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;i&lt;&#x2F;span&gt;&lt;span&gt;%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;.log}.txt&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;done
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-03-11</title>
        <published>2024-03-11T00:00:00+00:00</published>
        <updated>2024-03-11T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-03-11/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-03-11/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Monday, day 071 of 366 (19.39%). We&#x27;re in week 11 of 52 (21.15%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;blog&#x2F;issues&#x2F;4&quot;&gt;Install Adidoks theme to the portuguese pages&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I started trying to figure out how to implement the theme on the portuguese blog entries. At first I thought I&#x27;d just duplicate all the necessary templates, which will most likely work, but seems really rudimentary. I remembered something I saw when I was looking for information in the &lt;code&gt;get_section&lt;&#x2F;code&gt; function about a &lt;a href=&quot;https:&#x2F;&#x2F;www.getzola.org&#x2F;documentation&#x2F;templates&#x2F;overview&#x2F;#trans&quot;&gt;&lt;code&gt;trans&lt;&#x2F;code&gt; function&lt;&#x2F;a&gt;. I tried using it inside the template to simply translate whatever was in english to portuguese, but I kept getting an error saying the language didn&#x27;t exist (even when I tried it with the example language from Zola&#x27;s documentation). I started doing some more research and found this &lt;a href=&quot;https:&#x2F;&#x2F;zola.discourse.group&#x2F;t&#x2F;i18n-theme-translations&#x2F;388&#x2F;3&quot;&gt;feature request&lt;&#x2F;a&gt; from Zola&#x27;s website that sayns &lt;code&gt;tans&lt;&#x2F;code&gt; can&#x27;t be used on templates. Apparently multilingual websites is a common complain and something Zola has been trying to improve for a while.&lt;&#x2F;p&gt;
&lt;p&gt;I came back to the adidoks theme to see if maybe they tried to make things a little bit easier. I found this on the &lt;code&gt;base.html&lt;&#x2F;code&gt; template:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;html&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-html &quot;&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;html &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;lang&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;{{ config.extra.language_code | default(value=&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;en-US&lt;&#x2F;span&gt;&lt;span style=&quot;background-color:#bf616a;color:#2b303b;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;) }}&lt;&#x2F;span&gt;&lt;span style=&quot;background-color:#bf616a;color:#2b303b;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Which means I can set a language code (which won&#x27;t automatically translate the website, but it&#x27;s already more than I had before) so I tried setting it in the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;blog&#x2F;blob&#x2F;feat&#x2F;install_theme&#x2F;content&#x2F;blog_pt_br&#x2F;_index.md&quot;&gt;index for the portuguese entries&lt;&#x2F;a&gt;, but when I inspected the page, the language was still &#x27;en-US&#x27;. Since this was just a detail I moved on and kept researching. &lt;&#x2F;p&gt;
&lt;p&gt;After a while I fount this &lt;a href=&quot;https:&#x2F;&#x2F;www.getzola.org&#x2F;documentation&#x2F;content&#x2F;multilingual&#x2F;&quot;&gt;multilingual websites entry&lt;&#x2F;a&gt; in Zola&#x27;s documentation that shows a way to set a new language in the &lt;code&gt;config.toml&lt;&#x2F;code&gt; file and the you can create content and name them &lt;code&gt;file.{lang_code}.md&lt;&#x2F;code&gt; so that Zola knows it&#x27;s on that language. I think this will look really nice if I can get it to work, because it allows me to make every page in portuguese and it also adds the language code to the url, so all portuguese blog entries for example will be &lt;code&gt;{base_url}&#x2F;blog&#x2F;{date}&#x2F;pt&#x2F;&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;Today I learned that I can add a language to my website by adding it to my &lt;code&gt;config.toml&lt;&#x2F;code&gt; file. I haven&#x27;t figure everything out yet, but here&#x27;s the example from Zola&#x27;s documentation:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;[languages.fr]
&lt;&#x2F;span&gt;&lt;span&gt;generate_feed = true # there will be a feed for French content
&lt;&#x2F;span&gt;&lt;span&gt;build_search_index = true
&lt;&#x2F;span&gt;&lt;span&gt;taxonomies = [
&lt;&#x2F;span&gt;&lt;span&gt;    {name = &amp;quot;auteurs&amp;quot;},
&lt;&#x2F;span&gt;&lt;span&gt;    {name = &amp;quot;tags&amp;quot;},
&lt;&#x2F;span&gt;&lt;span&gt;]
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;[languages.fr.translations]
&lt;&#x2F;span&gt;&lt;span&gt;summary = &amp;quot;Mon blog&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;[languages.it]
&lt;&#x2F;span&gt;&lt;span&gt;# Italian language doesn&amp;#39;t have any taxonomies&#x2F;feed&#x2F;search index
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;[languages.it.translations]
&lt;&#x2F;span&gt;&lt;span&gt;summary = &amp;quot;Mio blog&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;# translations for the default language are not prefixed by languages.code
&lt;&#x2F;span&gt;&lt;span&gt;[translations]
&lt;&#x2F;span&gt;&lt;span&gt;summary = &amp;quot;My blog&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-03-08</title>
        <published>2024-03-08T00:00:00+00:00</published>
        <updated>2024-03-08T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-03-08/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-03-08/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Friday, day 068 of 366 (18.57%). We&#x27;re in week 10 of 52 (19.23%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;blog&#x2F;issues&#x2F;4&quot;&gt;Configure authors for the blog&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I finished configuring the authors. I tried searching for another way to fix the error from yesterday, but I read dozens of GitHub issues and online discussions and nothing helped me, so I decided to just move the authors files to the main content folder and leave it as a permanent fix (at least for now). &lt;&#x2F;p&gt;
&lt;p&gt;I updated the templates for the daily entries, both in &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;blog&#x2F;blob&#x2F;main&#x2F;daily-template.md&quot;&gt;english&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;blog&#x2F;blob&#x2F;main&#x2F;template-diario.md&quot;&gt;portuguese&lt;&#x2F;a&gt; so that the new entries are created with the taxonomies tag and the authors field. I also updated the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;blog&#x2F;blob&#x2F;main&#x2F;new-blog.sh&quot;&gt;new blog script&lt;&#x2F;a&gt; so that the author is me by default but can be passed as an argument from the command line.&lt;&#x2F;p&gt;
&lt;p&gt;I also started planning for the script that will add me as the author to all existing blog entries and me and Mauricio agree that the strategy I presented yesterday is the best: copy the first lines to a new document, add the author, copy the rest of the old file and then replace it with the new one.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;Today I learned that the &lt;code&gt;get_section&lt;&#x2F;code&gt; has the content folder in the root of the project as it&#x27;s base path accondingly to this &lt;a href=&quot;https:&#x2F;&#x2F;www.getzola.org&#x2F;documentation&#x2F;templates&#x2F;overview&#x2F;#get-section&quot;&gt;Zola templates documentation&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-03-07</title>
        <published>2024-03-07T00:00:00+00:00</published>
        <updated>2024-03-07T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-03-07/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-03-07/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Thursday, day 067 of 366 (18.30%). We&#x27;re in week 10 of 52 (19.23%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;blog&#x2F;issues&#x2F;4&quot;&gt;Configure authors for the blog&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I figured out what was wrong with the authors. When I tried adding &lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;[taxonomies] authors = [&amp;quot;Luísa Coelho&amp;quot;]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;to a blog entry, I got this error:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Error:&lt;&#x2F;span&gt;&lt;span&gt; Failed to build the site
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Error:&lt;&#x2F;span&gt;&lt;span&gt; Failed to render a list of authors page.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Error:&lt;&#x2F;span&gt;&lt;span&gt; Reason: Failed to render &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;authors&#x2F;list.html&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Error:&lt;&#x2F;span&gt;&lt;span&gt; Reason: Function call &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;get_section&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39; failed
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Error:&lt;&#x2F;span&gt;&lt;span&gt; Reason: Section `&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;authors&#x2F;_index.md&lt;&#x2F;span&gt;&lt;span&gt;` not found.
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Which made no sense to me because the &lt;code&gt;_index.md&lt;&#x2F;code&gt; file exists in this path. After a while of researching, it occurred to me that maybe something similar to what happened to the templates was happening to the content; the files outside the theme were overriding the ones inside the theme. So I tried just adding the authors folder to my content folder, and it worked, which means that Zola is just not searching for the content inside the theme. I do not think that is the right way to do this; there is probably a way to just use what is inside the theme, I just haven&#x27;t figured it out yet.&lt;&#x2F;p&gt;
&lt;p&gt;After a while stuck on this, I decided to just leave it as a temporary fix and get started on the script to add the author to all files. I&#x27;m not sure how to do this; I couldn&#x27;t find anything that would allow me to write on a certain line of the file, so I think I&#x27;ll have to make a new file, copy the first part of the file, write the author, copy the rest, and replace the old one.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;Today I learned how to write multiple lines in a file by setting a &amp;quot;stop word&amp;quot;:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;cat &lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;&amp;lt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;EOF &lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; file.txt
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;All this
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;lines
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;will be written
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;in the
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;file
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;EOF
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;I also learned about the &lt;code&gt;tee&lt;&#x2F;code&gt; command, which allows you to write in multiple files, which can be very useful to me:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;echo &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;this is a line&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; | &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;tee&lt;&#x2F;span&gt;&lt;span&gt; file_1.txt file_2.txt file_3.txt
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-03-06</title>
        <published>2024-03-06T00:00:00+00:00</published>
        <updated>2024-03-06T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-03-06/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-03-06/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Wednesday, day 066 of 366 (18.03%). We&#x27;re in week 10 of 52 (19.23%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;blog&#x2F;issues&#x2F;4&quot;&gt;Continue installing adidoks theme to this blog&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I continued applying the Adidoks theme to the blog, and I was able to get the CSS to work, so it looks much better now. The problem was that when importing &lt;code&gt;base.html&lt;&#x2F;code&gt;, the Adidoks files were importing my old &lt;code&gt;base.html&lt;&#x2F;code&gt; because of what I said yesterday about the templates outside the themes overriding the templates inside the themes. That is also why the macros weren&#x27;t getting imported, and I had to copy them to other HTML files. I discovered that after inspecting the page and realizing that the &lt;code&gt;head&lt;&#x2F;code&gt; tag was the same from my &lt;code&gt;base.html&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;I still have to create new authors and make a script to update all the files for me so that I don&#x27;t have to, besides updating the current script to create new blog posts so that they have the author as well. I also need to apply the theme to the Portuguese pages, for which I believe I&#x27;ll still have to use my own templates, but import Adidoks&#x27; &lt;code&gt;base.html&lt;&#x2F;code&gt; and &lt;code&gt;section.html&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-03-05</title>
        <published>2024-03-05T00:00:00+00:00</published>
        <updated>2024-03-05T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-03-05/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-03-05/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Tuesday, day 065 of 366 (17.75%). We&#x27;re in week 10 of 52 (19.23%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;blog&#x2F;issues&#x2F;4&quot;&gt;Install adidocks theme to this blog&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I forgot about Flutter and went back to the blog to try and install the &lt;a href=&quot;https:&#x2F;&#x2F;www.getzola.org&#x2F;themes&#x2F;adidoks&#x2F;&quot;&gt;adidoks theme&lt;&#x2F;a&gt;. I cloned the repository but was having a hard time figuring out how to apply the theme to the content I already have. After reading &lt;a href=&quot;https:&#x2F;&#x2F;www.getzola.org&#x2F;documentation&#x2F;themes&#x2F;installing-and-using-themes&#x2F;#:~:text=%F0%9F%94%97Using%20a%20theme,you%20cloned%20the%20theme%20in.&quot;&gt;this Zola page&lt;&#x2F;a&gt;, I realized that using the templates was a lot easier than I thought; you literally just have to assume you are already inside the templates file, even if you are using a theme. However, when I did that, I got this weird error:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Error:&lt;&#x2F;span&gt;&lt;span&gt; Failed to build the site
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Error:&lt;&#x2F;span&gt;&lt;span&gt; Failed to render pager 10
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Error:&lt;&#x2F;span&gt;&lt;span&gt; Reason: Failed to render &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;blog&#x2F;section.html&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Error:&lt;&#x2F;span&gt;&lt;span&gt; Reason: Macro namespace `&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;macros_publish&lt;&#x2F;span&gt;&lt;span&gt;` was not found in the template `&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;blog&#x2F;section.html&lt;&#x2F;span&gt;&lt;span&gt;`. Have you maybe forgotten to import it, or misspelled it?
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Which is complaining about something missing in the template from the theme. When I investigated, I realized that &lt;code&gt;blog&#x2F;section.html&lt;&#x2F;code&gt; extends &lt;code&gt;section.html&lt;&#x2F;code&gt;, which extends &lt;code&gt;base.html&lt;&#x2F;code&gt;. In &lt;code&gt;base.html&lt;&#x2F;code&gt;, all these macros are imported, and that&#x27;s what Zola wasn&#x27;t finding in the template I was using in the blog&#x27;s index, so I copied all of them to &lt;code&gt;blog&#x2F;section.html&lt;&#x2F;code&gt;. That didn&#x27;t do anything, but it also didn&#x27;t fix everything: some of the configuration was applied, but apparently, the CSS was not loaded.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;Today I learned that you can create a template with the same name as a template from a theme to override it. For example:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;templates&#x2F;pages&#x2F;post.html&lt;&#x2F;span&gt;&lt;span&gt; -&amp;gt; replace themes&#x2F;simple-blog&#x2F;templates&#x2F;pages&#x2F;post.html
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;templates&#x2F;macros.html&lt;&#x2F;span&gt;&lt;span&gt; -&amp;gt; replace themes&#x2F;simple-blog&#x2F;templates&#x2F;macros.html
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;static&#x2F;js&#x2F;site.js&lt;&#x2F;span&gt;&lt;span&gt; -&amp;gt; replace themes&#x2F;simple-blog&#x2F;static&#x2F;js&#x2F;site.js
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-03-04</title>
        <published>2024-03-04T00:00:00+00:00</published>
        <updated>2024-03-04T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-03-04/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-03-04/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Monday, day 064 of 366 (17.48%). We&#x27;re in week 10 of 52 (19.23%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
create tests for all buttons&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I finished reading the Navigation class but still was not able to get the last test to pass. I replaced all of the remaining navigation calls with the new routing logic thinking maybe that would do it, but it didn&#x27;t.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-03-01</title>
        <published>2024-03-01T00:00:00+00:00</published>
        <updated>2024-03-01T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-03-01/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-03-01/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Friday, day 061 of 366 (16.66%). We&#x27;re in week 09 of 52 (17.30%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
create tests for all buttons&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I read most of the Navigation class, but nothing in there helped me solve the problem so far. I&#x27;ll finish it tomorrow, and if it still doesn&#x27;t work, I&#x27;ll either try testing this specific route in another way or go all the way back and use mockito instead of the stubbing method.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-02-29</title>
        <published>2024-02-29T00:00:00+00:00</published>
        <updated>2024-02-29T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-02-29/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-02-29/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Thursday, day 060 of 366 (16.39%). We&#x27;re in week 09 of 52 (17.30%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
create tests for all buttons&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I continued to try and fix the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;3903e1a7c6567808555c08c0a3ede2c9b97fffb2&#x2F;test&#x2F;login_test.dart#L156C3-L181C6&quot;&gt;login -&amp;gt; view test&lt;&#x2F;a&gt;, but I was not successful. I&#x27;m reading the entire Navigation class file; I only went through half of it today.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-02-28</title>
        <published>2024-02-28T00:00:00+00:00</published>
        <updated>2024-02-28T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-02-28/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-02-28/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Wednesday, day 059 of 366 (16.12%). We&#x27;re in week 09 of 52 (17.30%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
create tests for all buttons&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I realized that by fixing the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;3903e1a7c6567808555c08c0a3ede2c9b97fffb2&#x2F;test&#x2F;view_snippets_test.dart#L113C3-L128C6&quot;&gt;view -&amp;gt; login test&lt;&#x2F;a&gt;, I broke the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;3903e1a7c6567808555c08c0a3ede2c9b97fffb2&#x2F;test&#x2F;login_test.dart#L156C3-L181C6&quot;&gt;login -&amp;gt; view test&lt;&#x2F;a&gt;. I think this has something to do with going back on a route. I didn&#x27;t find any other articles talking about stubbing, so I guess I&#x27;m on my own.&lt;&#x2F;p&gt;
&lt;p&gt;I also discovered that the logout is not being done. When I do the GET request from the app, it returns a 500 status code and a huge error message when I try doing it from the terminal. I&#x27;m getting really stuck in all this, and maybe stubbing instead of mockito was just a bad idea.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-02-27</title>
        <published>2024-02-27T00:00:00+00:00</published>
        <updated>2024-02-27T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-02-27/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-02-27/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Tuesday, day 058 of 366 (15.84%). We&#x27;re in week 09 of 52 (17.30%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
create tests for all buttons&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I was abel to get the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;c8e37070e3e7c3c1702ae3e086b1e4d54a91bfd2&#x2F;test&#x2F;view_snippets_test.dart#L113C3-L129C6&quot;&gt;&#x27;logout button leads to login page&#x27; test&lt;&#x2F;a&gt; to pass. I&#x27;m not sure why, but when I changed the login route to &amp;quot;&#x2F;login&amp;quot; and the view route to &amp;quot;&#x2F;&amp;quot; it passes. Maybe there&#x27;s something about this in the Navigator file.&lt;&#x2F;p&gt;
&lt;p&gt;I tested to see if that also solved the redirection after saving a new snippet problem and something funny is going on: the page does not change but there is no error message.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;readings&quot;&gt;Readings&lt;&#x2F;h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.flutterando.com.br&#x2F;oficial-gemini-google-ai-dart-flutter-sdk-integrando-flutter-com-o-gemini-90c46f8c2f7a&quot;&gt;Oficial! Gemini Google AI Dart&#x2F;Flutter SDK— Integrando Flutter com o GEMINI&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-02-26</title>
        <published>2024-02-26T00:00:00+00:00</published>
        <updated>2024-02-26T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-02-26/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-02-26/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Monday, day 057 of 366 (15.57%). We&#x27;re in week 09 of 52 (17.30%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
create tests for all buttons&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I started the day determined to fix the failing tests, but nothing worked AGAIN. I tried moving things around, changed the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;c8e37070e3e7c3c1702ae3e086b1e4d54a91bfd2&#x2F;lib&#x2F;routing.dart#L9C2-L12C48&quot;&gt;paths in the Routing class&lt;&#x2F;a&gt;, changed the order I declared&#x2F;called some things, but nothing worked. I can&#x27;t for the life of me figure out why the navigation works from the login page to the view snippets page but doesn&#x27;t work from the add snippet page to the view snippet page.&lt;&#x2F;p&gt;
&lt;p&gt;I did figure out that the routing is the only problem with the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;c8e37070e3e7c3c1702ae3e086b1e4d54a91bfd2&#x2F;lib&#x2F;add_snippet.dart#L194C25-L209C23&quot;&gt;save button&lt;&#x2F;a&gt;, it posts the new snippet correctly; it just fails to go back to the view snippets page.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-02-23</title>
        <published>2024-02-23T00:00:00+00:00</published>
        <updated>2024-02-23T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-02-23/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-02-23/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Friday, day 054 of 366 (14.75%). We&#x27;re in week 08 of 52 (15.38%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
create tests for all buttons&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I tried to fix he failing tests, but I couldn&#x27;t do it. I started with the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;b29aafc2feaa43358ce274b268e9346578bf5ff9&#x2F;test&#x2F;login_test.dart#L135C3-L155C1&quot;&gt;&#x27;loads next page if username and password are correct&#x27; test&lt;&#x2F;a&gt;, but nothing seemed to work and I&#x27;m not even sure exactly what is wrong with. After a couple hours I got really frustrated and moved on to the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;c8e37070e3e7c3c1702ae3e086b1e4d54a91bfd2&#x2F;test&#x2F;view_snippets_test.dart#L113C3-L129C6&quot;&gt;&#x27;logout button leads to login page&#x27; test&lt;&#x2F;a&gt; to see if I could work that one out, but I couldn&#x27;t do it either. I think I gonna focus on something else tomorrow, I&#x27;ll probably start with the new tests for checking if the snippet displayed once we click in the details button is the right one to get that out of the way.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-02-22</title>
        <published>2024-02-22T00:00:00+00:00</published>
        <updated>2024-02-22T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-02-22/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-02-22/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Thursday, day 053 of 366 (14.48%). We&#x27;re in week 08 of 52 (15.38%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
create tests for all buttons&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I started making tests for all the other buttons on the app, but I ran into a few bumps along the way and wasn&#x27;t able to finish. Something&#x27;s off with the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;b29aafc2feaa43358ce274b268e9346578bf5ff9&#x2F;lib&#x2F;add_snippet.dart#L194C25-L209C23&quot;&gt;save button on the add snippet page&lt;&#x2F;a&gt;, and it&#x27;s not working when I try to use the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;b29aafc2feaa43358ce274b268e9346578bf5ff9&#x2F;lib&#x2F;add_snippet.dart#L29C2-L32C4&quot;&gt;Routing class logic&lt;&#x2F;a&gt; to redirect the user back to the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;snippets_CRUD&#x2F;lib&#x2F;view_snippets.dart&quot;&gt;view snippets page&lt;&#x2F;a&gt; once the new snippet is posted.&lt;&#x2F;p&gt;
&lt;p&gt;I also realized that I need to make more tests; I&#x27;m just not sure if they are for the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;snippets_CRUD&#x2F;lib&#x2F;edit_snippet.dart&quot;&gt;edit snippet page&lt;&#x2F;a&gt; or the view snippets page. But right now, there is no test to assert that if there are more than one snippet in the view snippets page, each one leads to the edit snippet page with the correct information (id, owner, title, code, linenos, language, and style).&lt;&#x2F;p&gt;
&lt;p&gt;There is also something wrong with the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;b29aafc2feaa43358ce274b268e9346578bf5ff9&#x2F;test&#x2F;login_test.dart#L135C3-L155C1&quot;&gt;&#x27;loads next page if username and password are correct&#x27; test&lt;&#x2F;a&gt;. I honestly don&#x27;t even remember changing it at all, so maybe it&#x27;s the new navigation logic that&#x27;s throwing it off, and I have to change how I check that.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-02-21</title>
        <published>2024-02-21T00:00:00+00:00</published>
        <updated>2024-02-21T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-02-21/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-02-21/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Wednesday, day 052 of 366 (14.20%). We&#x27;re in week 08 of 52 (15.38%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
finish view snippets new test&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
create tests for all buttons&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I was able to test if the navigation is correct by using the method I&#x27;ve been mentioning for the past couple of days. I found a link to the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Ahmad-Hamwi&#x2F;testing-with-route-stubs-flutter&#x2F;blob&#x2F;main&#x2F;lib&#x2F;presentation&#x2F;app&#x2F;app.dart&quot;&gt;article&#x27;s GitHub repository&lt;&#x2F;a&gt; and realized I was missing a few things on my pages. First, I had to add an initial route to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;snippets_CRUD&#x2F;lib&#x2F;main.dart&quot;&gt;main.dart&lt;&#x2F;a&gt; and tell it to use the logic in the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;snippets_CRUD&#x2F;lib&#x2F;routing.dart&quot;&gt;Routing class&lt;&#x2F;a&gt; whenever a new route was created, which was quite easy:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;dart&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-dart &quot;&gt;&lt;code class=&quot;language-dart&quot; data-lang=&quot;dart&quot;&gt;&lt;span&gt;initialRoute: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;Routing&lt;&#x2F;span&gt;&lt;span&gt;.loginRoute,
&lt;&#x2F;span&gt;&lt;span&gt;onGenerateRoute: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;Routing&lt;&#x2F;span&gt;&lt;span&gt;.onGenerateRoute,
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Using these takes out the need for the &lt;code&gt;home&lt;&#x2F;code&gt; parameter to be set, so the code will look something like this:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;dart&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-dart &quot;&gt;&lt;code class=&quot;language-dart&quot; data-lang=&quot;dart&quot;&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;runApp&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;MaterialApp&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;    title: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&amp;#39;Login page&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    initialRoute: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;Routing&lt;&#x2F;span&gt;&lt;span&gt;.loginRoute,
&lt;&#x2F;span&gt;&lt;span&gt;    onGenerateRoute: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;Routing&lt;&#x2F;span&gt;&lt;span&gt;.onGenerateRoute,
&lt;&#x2F;span&gt;&lt;span&gt;));
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;I do intend to use the &lt;code&gt;theme&lt;&#x2F;code&gt; parameter here, but that will go in another PR.&lt;&#x2F;p&gt;
&lt;p&gt;Another thing I had to change was the way I was navigating to other pages. Instead of just using:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;dart&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-dart &quot;&gt;&lt;code class=&quot;language-dart&quot; data-lang=&quot;dart&quot;&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;Navigator&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;push&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;I had to make sure the new routing logic was being used:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;dart&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-dart &quot;&gt;&lt;code class=&quot;language-dart&quot; data-lang=&quot;dart&quot;&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;Navigator&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;of&lt;&#x2F;span&gt;&lt;span&gt;(context).&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;pushNamedAndRemoveUntil&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;Routing&lt;&#x2F;span&gt;&lt;span&gt;.exampleRoute, (route) =&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;false&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    arguments: {});
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Lastly, for the view snippets page to know that the initial route was the one I declared in the main file, I just had to make it return only the &lt;code&gt;Scaffold&lt;&#x2F;code&gt; widget instead of &lt;code&gt;MaterialApp&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;After I got the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;338645779693472a281c1fc3244aab80e03206fe&#x2F;test&#x2F;view_snippets_test.dart#L95C1-L111C6&quot;&gt;add button route test&lt;&#x2F;a&gt; to work, I started changing other pages and testing other buttons, but I only had time to finish the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;338645779693472a281c1fc3244aab80e03206fe&#x2F;test&#x2F;view_snippets_test.dart#L75C1-L93C6&quot;&gt;details button route test&lt;&#x2F;a&gt;, so I&#x27;ll do all the others tomorrow.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;Today I learned how to run a single test from a dart file using the &lt;code&gt;--plain-name&lt;&#x2F;code&gt; flag:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;flutter&lt;&#x2F;span&gt;&lt;span&gt; test test&#x2F;view_snippets_test.dart&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; --plain-name &lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Add button leads to add snippet page&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-02-20</title>
        <published>2024-02-20T00:00:00+00:00</published>
        <updated>2024-02-20T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-02-20/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-02-20/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Tuesday, day 051 of 366 (13.93%). We&#x27;re in week 08 of 52 (15.38%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
finish view snippets new test&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
create tests for all buttons&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I tried to figure out where to put the Routing class, but nothing seemed to work. I&#x27;m not sure if I have to run some command first or if I&#x27;m just putting it in the wrong place, but as I was trying to figure that out, I ended up reading the &lt;a href=&quot;https:&#x2F;&#x2F;api.flutter.dev&#x2F;flutter&#x2F;material&#x2F;MaterialApp-class.html&quot;&gt;MaterialApp&lt;&#x2F;a&gt; class and I found this:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;dart&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-dart &quot;&gt;&lt;code class=&quot;language-dart&quot; data-lang=&quot;dart&quot;&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;&#x2F; This example shows how to create a [MaterialApp] that uses the [routes]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;&#x2F; `Map` to define the &amp;quot;home&amp;quot; route and an &amp;quot;about&amp;quot; route.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;&#x2F; ```dart
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;&#x2F; MaterialApp(
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;&#x2F;   routes: &amp;lt;String, WidgetBuilder&amp;gt;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;&#x2F;     &amp;#39;&#x2F;&amp;#39;: (BuildContext context) {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;&#x2F;       return Scaffold(
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;&#x2F;         appBar: AppBar(
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;&#x2F;           title: const Text(&amp;#39;Home Route&amp;#39;),
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;&#x2F;         ),
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;&#x2F;       );
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;&#x2F;     },
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;&#x2F;     &amp;#39;&#x2F;about&amp;#39;: (BuildContext context) {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;&#x2F;       return Scaffold(
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;&#x2F;         appBar: AppBar(
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;&#x2F;           title: const Text(&amp;#39;About Route&amp;#39;),
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;&#x2F;         ),
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;&#x2F;       );
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;&#x2F;      }
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;&#x2F;    },
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;&#x2F; )
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;&#x2F; ```
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;I believe I have to apply this on my Widgets so that the test method I&#x27;m trying works, but I&#x27;m not sure yet. Tomorrow I&#x27;ll finish reading everything to see if something else in there can help me.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-02-19</title>
        <published>2024-02-19T00:00:00+00:00</published>
        <updated>2024-02-19T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-02-19/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-02-19/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Monday, day 050 of 366 (13.66%). We&#x27;re in week 08 of 52 (15.38%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
finish view snippets new test&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
create tests for all buttons&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I reread the article with the solutions I tried on &lt;a href=&quot;https:&#x2F;&#x2F;omnicode.com.br&#x2F;blog&#x2F;blog&#x2F;2024-02-16&#x2F;&quot;&gt;friday&lt;&#x2F;a&gt; multiple times to try and figure out why it&#x27;s not working. I tried changing a few things to make it look more like what the author is doing, but it wasn&#x27;t changing anything. When I was almost giving up, I found this: &amp;quot;&lt;em&gt;[...]the route-generating logic that I’ve provided to my MaterialApp at the &lt;strong&gt;root of my app&lt;&#x2F;strong&gt;&lt;&#x2F;em&gt;&amp;quot;. I was not sure what he means by that, so I did a little research, and apparently I have to put the Routing class in a very specific place in the project so that it works. I saw a few different ways on how to get the path to the project root, but I&#x27;m sure it&#x27;s just a tiny thing I&#x27;m missing, and I really hope I can get this done tomorrow.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;readings&quot;&gt;Readings&lt;&#x2F;h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.appsloveworld.com&#x2F;flutter&#x2F;100&#x2F;8&#x2F;how-to-get-the-root-directory-path-in-flutter&quot;&gt;HOW TO GET THE ROOT DIRECTORY PATH IN FLUTTER-FLUTTER&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-02-16</title>
        <published>2024-02-16T00:00:00+00:00</published>
        <updated>2024-02-16T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-02-16/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-02-16/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Friday, day 047 of 366 (12.84%). We&#x27;re in week 07 of 52 (13.46%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
finish view snippets new test&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
create tests for all buttons&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I tried &lt;a href=&quot;https:&#x2F;&#x2F;ahmad-hamwi.medium.com&#x2F;stubbing-navigation-routes-in-widget-integration-tests-in-your-flutter-app-51f71963d4d0&quot;&gt;this other method&lt;&#x2F;a&gt; I found yesterday, but it doesn&#x27;t seem to be working. I do believe I can stick to it a bit longer to better understand how it works and fix the errors. The difference between this approach and the one I tried yesterday is it doesn&#x27;t use mocks; instead, it stubs the newly pushed route&#x27;s widget, so we can test it by keeping track of the route.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-02-15</title>
        <published>2024-02-15T00:00:00+00:00</published>
        <updated>2024-02-15T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-02-15/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-02-15/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Thursday, day 046 of 366 (12.56%). We&#x27;re in week 07 of 52 (13.46%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
finish view snippets new test&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
create tests for all buttons&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I did a lot of research on how to test Navigation in Flutter and tried a method, but it didn&#x27;t work. Since this is the knowledge I need to make the tests for all the other buttons, I was not able to do that either.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;readings&quot;&gt;Readings&lt;&#x2F;h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;flutter&#x2F;flutter&#x2F;blob&#x2F;master&#x2F;packages&#x2F;flutter&#x2F;test&#x2F;widgets&#x2F;navigator_test.dart&quot;&gt;GitHub example&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ahmad-hamwi.medium.com&#x2F;stubbing-navigation-routes-in-widget-integration-tests-in-your-flutter-app-51f71963d4d0&quot;&gt;Flutter: Isolating navigation tests using route stubs&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;fredgrott.medium.com&#x2F;flutter-navigation-mocking-in-15-minutes-ade58f9c8bc8&quot;&gt;Flutter Navigation Mocking In 15 Minutes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;flutteragency.com&#x2F;test-navigation-in-flutter&#x2F;&quot;&gt;How to Test Navigation Via Navigator In Flutter ??&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-02-14</title>
        <published>2024-02-14T00:00:00+00:00</published>
        <updated>2024-02-14T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-02-14/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-02-14/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Wednesday, day 045 of 366 (12.29%). We&#x27;re in week 07 of 52 (13.46%).&lt;&#x2F;p&gt;
&lt;p&gt;Today is a Brazilian holiday. &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Ash_Wednesday&quot;&gt;Ash Wednesday&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-02-13</title>
        <published>2024-02-13T00:00:00+00:00</published>
        <updated>2024-02-13T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-02-13/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-02-13/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Tuesday, day 044 of 366 (12.02%). We&#x27;re in week 07 of 52 (13.46%).&lt;&#x2F;p&gt;
&lt;p&gt;Today is a Brazilian holiday. &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Brazilian_Carnival&quot;&gt;Carnival&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-02-12</title>
        <published>2024-02-12T00:00:00+00:00</published>
        <updated>2024-02-12T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-02-12/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-02-12/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Monday, day 043 of 366 (11.74%). We&#x27;re in week 07 of 52 (13.46%).&lt;&#x2F;p&gt;
&lt;p&gt;Today is a Brazilian holiday. &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Brazilian_Carnival&quot;&gt;Carnival&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-02-09</title>
        <published>2024-02-09T00:00:00+00:00</published>
        <updated>2024-02-09T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-02-09/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-02-09/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Friday, day 040 of 366 (10.92%). We&#x27;re in week 06 of 52 (11.53%).&lt;&#x2F;p&gt;
&lt;p&gt;Today is a Brazilian holiday. &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Brazilian_Carnival&quot;&gt;Carnival&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-02-08</title>
        <published>2024-02-08T00:00:00+00:00</published>
        <updated>2024-02-08T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-02-08/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-02-08/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Thursday, day 039 of 366 (10.65%). We&#x27;re in week 06 of 52 (11.53%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
finish view snippets new test&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
make tests for the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;snippets_CRUD&#x2F;lib&#x2F;add_snippet.dart&quot;&gt;add snippet page&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today, I wasn&#x27;t able to finish the new test for the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;snippets_CRUD&#x2F;lib&#x2F;view_snippets.dart&quot;&gt;view snippets page&lt;&#x2F;a&gt;. The blog I mentioned yesterday used Mockito, and I tried applying the logic with Nock, but couldn&#x27;t. I attempted to find something using Nock, but nothing helped. I&#x27;m not sure what I&#x27;m going to do yet; I might just use Mockito for this specific test.&lt;&#x2F;p&gt;
&lt;p&gt;When I felt like I wasn&#x27;t getting anywhere with the new view snippets page test, I started making tests for the add snippet page and realized that I haven&#x27;t made any tests for the buttons, which is why I didn&#x27;t run into the Navigator issue earlier, even though I used it on every single page so far. So, once I figure out how to make it, I&#x27;ll do it for all of them.&lt;&#x2F;p&gt;
&lt;p&gt;Lastly, I remembered the &#x27;immutable class error&#x27; and just added &lt;code&gt;const&lt;&#x2F;code&gt; to the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;9834606e616824957f02fc88ce753a70905df3af&#x2F;lib&#x2F;login.dart#L9&quot;&gt;login page constructor&lt;&#x2F;a&gt; and all its calls.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;readings&quot;&gt;Readings&lt;&#x2F;h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=yjsN2Goe_po&quot;&gt;feedback (Package of the Week)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;iiro.dev&#x2F;writing-widget-tests-for-navigation-events&#x2F;&quot;&gt;Writing widget tests for navigation events&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-02-07</title>
        <published>2024-02-07T00:00:00+00:00</published>
        <updated>2024-02-07T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-02-07/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-02-07/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Wednesday, day 038 of 366 (10.38%). We&#x27;re in week 06 of 52 (11.53%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
finish infinite scrolling&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
fix tests&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I replaced the &lt;code&gt;for&lt;&#x2F;code&gt; loop with a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;a01d4722efcbdce0057483de5092d7a93179d8da&#x2F;lib&#x2F;api_service.dart#L26C5-L40C6&quot;&gt;while loop&lt;&#x2F;a&gt; so that the app can load all existing pages from the API.&lt;&#x2F;p&gt;
&lt;p&gt;I was also able to fix all the tests that broke when I removed the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;a01d4722efcbdce0057483de5092d7a93179d8da&#x2F;lib&#x2F;api_service.dart#L57C3-L70C4&quot;&gt;login function&lt;&#x2F;a&gt; from the Login class. I started writing one more test for the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;snippets_CRUD&#x2F;lib&#x2F;view_snippets.dart&quot;&gt;view snippets page&lt;&#x2F;a&gt; that is going to make sure it loads the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;snippets_CRUD&#x2F;lib&#x2F;add_snippet.dart&quot;&gt;add snippet page&lt;&#x2F;a&gt; once the add button is tapped, but something goes wrong with the Navigator, and I think I have to mock something. I found this &lt;a href=&quot;https:&#x2F;&#x2F;iiro.dev&#x2F;writing-widget-tests-for-navigation-events&#x2F;&quot;&gt;blog&lt;&#x2F;a&gt; that may help me fix it.&lt;&#x2F;p&gt;
&lt;p&gt;I had to make the Login constructor not &lt;code&gt;const&lt;&#x2F;code&gt; to pass it the APIService mock when testing, but that raised that warning about immutable classes again, so I&#x27;ll have to look into that.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-02-06</title>
        <published>2024-02-06T00:00:00+00:00</published>
        <updated>2024-02-06T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-02-06/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-02-06/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Tuesday, day 037 of 366 (10.10%). We&#x27;re in week 06 of 52 (11.53%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
use infinite scrolling to load all pages from the API&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I did a lot of research on infinite scrolling, but I wasn&#x27;t really understantding it, so I tried to take the concept and apply it in a simpler way to see if that would help and it did. I was able to load snippets from other pages, but the number of pages is fixed, because I couldn&#x27;t find a way to check how many pages the REST framework has. I think I&#x27;ll just have to use a while loop to keep going to the next page until there is a 404 error.&lt;&#x2F;p&gt;
&lt;p&gt;While working on the infinite scrolling I realized that the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;6b3dea29d764ed095cab2a478331573a23f8a3dd&#x2F;lib&#x2F;login.dart#L15C3-L28C4&quot;&gt;login function&lt;&#x2F;a&gt; was in the Login class and not on the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;snippets_CRUD&#x2F;lib&#x2F;api_service.dart&quot;&gt;APIService class&lt;&#x2F;a&gt;, so I changed that, whiich messed around with the tests, so I&#x27;ll have to redo them tomorrow.&lt;&#x2F;p&gt;
&lt;p&gt;I also added a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;6b3dea29d764ed095cab2a478331573a23f8a3dd&#x2F;lib&#x2F;edit_snippet.dart#L280C29-L292C67&quot;&gt;DELETE button&lt;&#x2F;a&gt; to the edit snippet page.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;Today I learned how to access an specific page on the API using &lt;code&gt;https:&#x2F;&#x2F;exampleapi.com?page=2&amp;amp;limit=50&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;I also learned how to style an &lt;code&gt;ElevatedButton&lt;&#x2F;code&gt;:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;dart&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-dart &quot;&gt;&lt;code class=&quot;language-dart&quot; data-lang=&quot;dart&quot;&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;ElevatedButton&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;    child: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;Text&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&amp;#39;Button&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;),
&lt;&#x2F;span&gt;&lt;span&gt;    onPressed: () {},
&lt;&#x2F;span&gt;&lt;span&gt;    style: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;ElevatedButton&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;styleFrom&lt;&#x2F;span&gt;&lt;span&gt;({
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;Color&lt;&#x2F;span&gt;&lt;span&gt; backgroundColor:, 
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;Color&lt;&#x2F;span&gt;&lt;span&gt; foregroundColor:,
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;Color&lt;&#x2F;span&gt;&lt;span&gt; disabledForegroundColor:,
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;Color&lt;&#x2F;span&gt;&lt;span&gt; shadowColor:,
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;double&lt;&#x2F;span&gt;&lt;span&gt; elevation:,
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;TextStyle&lt;&#x2F;span&gt;&lt;span&gt; textStyle:,
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;EdgeInsetsGeometry&lt;&#x2F;span&gt;&lt;span&gt; padding:,
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;Size&lt;&#x2F;span&gt;&lt;span&gt; minimumSize:,
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;BorderSide&lt;&#x2F;span&gt;&lt;span&gt; side:,
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;OutlinedBorder&lt;&#x2F;span&gt;&lt;span&gt; shape:,
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;MouseCursor&lt;&#x2F;span&gt;&lt;span&gt; enabledMouseCursor:,
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;MouseCursor&lt;&#x2F;span&gt;&lt;span&gt; disabledMouseCursor:,
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;VisualDensity&lt;&#x2F;span&gt;&lt;span&gt; visualDensity:,
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;MaterialTapTargetSize&lt;&#x2F;span&gt;&lt;span&gt; tapTargetSize:,
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;Duration&lt;&#x2F;span&gt;&lt;span&gt; animationDuration:,
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;bool&lt;&#x2F;span&gt;&lt;span&gt; enableFeedback:
&lt;&#x2F;span&gt;&lt;span&gt;     }),
&lt;&#x2F;span&gt;&lt;span&gt;),
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;readings&quot;&gt;Readings&lt;&#x2F;h2&gt;
&lt;ol&gt;
&lt;li&gt;https:&#x2F;&#x2F;pub.dev&#x2F;packages&#x2F;infinite_scroll_pagination&#x2F;example&lt;&#x2F;li&gt;
&lt;li&gt;https:&#x2F;&#x2F;docs.flutter.dev&#x2F;packages-and-plugins&#x2F;favorites&lt;&#x2F;li&gt;
&lt;li&gt;https:&#x2F;&#x2F;blog.logrocket.com&#x2F;implement-infinite-scroll-pagination-flutter&#x2F;&lt;&#x2F;li&gt;
&lt;li&gt;https:&#x2F;&#x2F;www.dhiwise.com&#x2F;post&#x2F;implementing-rest-api-with-pagination-in-flutter-apps&lt;&#x2F;li&gt;
&lt;li&gt;https:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;58681355&#x2F;how-can-i-access-multipage-api-with-flutter&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-02-05</title>
        <published>2024-02-05T00:00:00+00:00</published>
        <updated>2024-02-05T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-02-05/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-02-05/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Monday, day 036 of 366 (9.83%). We&#x27;re in week 06 of 52 (11.53%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
finish &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;snippets_CRUD&#x2F;lib&#x2F;add_snippet.dart&quot;&gt;add snippet page&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
start making tests for add snippet page&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I configured the save button on the add snippet page, and it used the same &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;240a2becb2c0d50e6344a9c141d1677e021ee430&#x2F;lib&#x2F;api_service.dart#L61C3-L108C4&quot;&gt;function&lt;&#x2F;a&gt; as the save button from the edit snippet page. I found a couple of issues in other parts of the code along the way, so I was not able to start making the tests.&lt;&#x2F;p&gt;
&lt;p&gt;First, I found out that titles too large were causing that pixel overflow error, so I had to refactor the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;240a2becb2c0d50e6344a9c141d1677e021ee430&#x2F;lib&#x2F;view_snippets.dart#L76C33-L105C35&quot;&gt;part of the view snippet page with the Text widgets&lt;&#x2F;a&gt; to make sure that didn&#x27;t happen again.&lt;&#x2F;p&gt;
&lt;p&gt;Second, I realized that when there are enough snippets, the API creates a second page, but the app only fetches the snippets from the first one. Mauricio told me about infinite scrolling and how it can solve this problem, so that&#x27;s going to be one of my tasks for tomorrow.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;Today I learned how to specify an optional positional argument in Dart; all you have to do is use brackets:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;dart&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-dart &quot;&gt;&lt;code class=&quot;language-dart&quot; data-lang=&quot;dart&quot;&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;function_name&lt;&#x2F;span&gt;&lt;span&gt;(argument1, [argument2]) {
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; statements
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;I also learned how to deal with text overflow: first, I wrapped the text in a container and specified its width to half of the device&#x27;s width, then I set the &lt;code&gt;softWrap&lt;&#x2F;code&gt; parameter from the &lt;code&gt;Text()&lt;&#x2F;code&gt; widget to false so that the whole text would be in one line, and lastly, I used the &lt;code&gt;overflow&lt;&#x2F;code&gt; parameter from the same widget to customize. It looks like this:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;dart&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-dart &quot;&gt;&lt;code class=&quot;language-dart&quot; data-lang=&quot;dart&quot;&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;Container&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;    width: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;MediaQuery&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;of&lt;&#x2F;span&gt;&lt;span&gt;(context).size.width &#x2F; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    child: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;Text&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&amp;#39;Example text&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;        overflow: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;TextOverflow&lt;&#x2F;span&gt;&lt;span&gt;.ellipsis,
&lt;&#x2F;span&gt;&lt;span&gt;        softWrap: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;false&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    ),
&lt;&#x2F;span&gt;&lt;span&gt;),
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-02-02</title>
        <published>2024-02-02T00:00:00+00:00</published>
        <updated>2024-02-02T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-02-02/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-02-02/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Friday, day 033 of 366 (9.01%). We&#x27;re in week 05 of 52 (9.61%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
fix &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;18bb9918660dda017b6cde2fa53c1a430571113c&#x2F;lib&#x2F;edit_snippet.dart#L198C25-L251C27&quot;&gt;dropdown menus&lt;&#x2F;a&gt;&#x27;s initial values&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I fixed the dropdown menus&#x27; initial values, and now they show the real value from the API. The fix was a bit tricky, but not hard. I created another list with the other values from the options&#x27; pairs and used that to get the index of the snippet&#x27;s language in the API and accessed that index in the dropdown options.&lt;&#x2F;p&gt;
&lt;p&gt;After I got that done, I had some time left, so I started and finished the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;snippets_CRUD&#x2F;lib&#x2F;add_snippet.dart&quot;&gt;add snippet page&lt;&#x2F;a&gt;. Tomorrow, I&#x27;ll just have to see if I can use the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;aaeb61b8bf9c1d89766afe732834c8e02b2d197a&#x2F;lib&#x2F;api_service.dart#L61C3-L84C4&quot;&gt;save snippet function&lt;&#x2F;a&gt; or if I have to make a new one.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;Today, I learned about the &lt;a href=&quot;https:&#x2F;&#x2F;api.flutter.dev&#x2F;flutter&#x2F;material&#x2F;FloatingActionButton-class.html&quot;&gt;&lt;code&gt;FloatingActionButton&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; class and the &lt;code&gt;floatingActionButton&lt;&#x2F;code&gt; parameter that can be passed to the page&#x27;s &lt;code&gt;body&lt;&#x2F;code&gt;:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;dart&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-dart &quot;&gt;&lt;code class=&quot;language-dart&quot; data-lang=&quot;dart&quot;&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;...
&lt;&#x2F;span&gt;&lt;span&gt;body: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;Center&lt;&#x2F;span&gt;&lt;span&gt;(child: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;Text&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&amp;#39;Press the button below!&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)),
&lt;&#x2F;span&gt;&lt;span&gt;    floatingActionButton: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;FloatingActionButton&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;        onPressed: () {},
&lt;&#x2F;span&gt;&lt;span&gt;        child: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;Icon&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;Icons&lt;&#x2F;span&gt;&lt;span&gt;.navigation),
&lt;&#x2F;span&gt;&lt;span&gt;    ),
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;...
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;You can do a lot of customization, like background or foreground color, shape, or elevation. There are also a few variants:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;FloatingActionButton.small(onPressed: , child: )&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;FloatingActionButton.large(onPressed: , child: )&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;FloatingActionButton.extended(onPressed: , label: , icon:)&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-02-01</title>
        <published>2024-02-01T00:00:00+00:00</published>
        <updated>2024-02-01T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-02-01/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-02-01/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Thursday, day 032 of 366 (8.74%). We&#x27;re in week 05 of 52 (9.61%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
finish tests for the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;cea58173b6fb599882896675da9f05dd0f3a30af&#x2F;lib&#x2F;edit_snippet.dart#L9C1-L9C43&quot;&gt;edit snippet page&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I had a lot less time, since I&#x27;m going to CIEE to leave them a printed copy of the internship contract so I only had time to finish the tests. After some more reaserch I gave up on trying to find a way to check is the inputs are read only&#x2F;disabled instead I just try to type&#x2F;tap them and check that nothing has changed. I also check if the &amp;quot;can&#x27;t edit snippet&amp;quot; message only appears when the user is not the owner.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-01-31</title>
        <published>2024-01-31T00:00:00+00:00</published>
        <updated>2024-01-31T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-01-31/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-01-31/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Wednesday, day 031 of 366 (8.46%). We&#x27;re in week 05 of 52 (9.61%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
fix failing tests&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
create tests for the rest of the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;cea58173b6fb599882896675da9f05dd0f3a30af&#x2F;lib&#x2F;edit_snippet.dart#L9C1-L9C43&quot;&gt;edit snippet page&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I was able to fix the tests that were failing and wrote some more, but there are still a few missing.&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;64b9edcbbd362a307c3c2a9f143e18e164cf9765&#x2F;test&#x2F;login_test.dart#L48C3-L63C6&quot;&gt;empty username test&lt;&#x2F;a&gt; was failing only when I ran all tests together because the text fields don&#x27;t get cleared once each test has ended. So, all I had to do was write an empty string in the username field. I also changed the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;64b9edcbbd362a307c3c2a9f143e18e164cf9765&#x2F;test&#x2F;login_test.dart#L31C2-L46C6&quot;&gt;empty password test&lt;&#x2F;a&gt; to write an empty string in the password field, just to make the tests cohesive.&lt;&#x2F;p&gt;
&lt;p&gt;As for the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;64b9edcbbd362a307c3c2a9f143e18e164cf9765&#x2F;test&#x2F;edit_snippet_test.dart#L65C3-L96C6&quot;&gt;dropdown menus populated with data from API test&lt;&#x2F;a&gt;, it wasn&#x27;t finding the dropdowns because of the Visibility widget, which was always returning false. So, I had to mock &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;64b9edcbbd362a307c3c2a9f143e18e164cf9765&#x2F;lib&#x2F;edit_snippet.dart#L23C7-L23C23&quot;&gt;EditSnippetState()&lt;&#x2F;a&gt; and add the mock as a parameter for the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;64b9edcbbd362a307c3c2a9f143e18e164cf9765&#x2F;lib&#x2F;edit_snippet.dart#L13C3-L17C33&quot;&gt;EditSnippet class&lt;&#x2F;a&gt; so that &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;64b9edcbbd362a307c3c2a9f143e18e164cf9765&#x2F;lib&#x2F;edit_snippet.dart#L42C3-L50C4&quot;&gt;isOwner()&lt;&#x2F;a&gt; could use the mock&#x27;s function if the parameter is different than null. A very similar fix to what I did with the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;64b9edcbbd362a307c3c2a9f143e18e164cf9765&#x2F;lib&#x2F;login.dart#L9C7-L9C12&quot;&gt;Login class&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The tests that are still missing are the ones that check if the fields are read-only&#x2F;disabled when the user is not the owner, but I couldn&#x27;t figure out how to test if a text field is read-only, so I&#x27;ll have to do that tomorrow.&lt;&#x2F;p&gt;
&lt;p&gt;As a bonus, I added a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;64b9edcbbd362a307c3c2a9f143e18e164cf9765&#x2F;lib&#x2F;edit_snippet.dart#L135C25-L146C27&quot;&gt;little message&lt;&#x2F;a&gt; that tells the user they can&#x27;t edit another user&#x27;s snippet when they are not the owner.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;Today I learned that you can use:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;dart&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-dart &quot;&gt;&lt;code class=&quot;language-dart&quot; data-lang=&quot;dart&quot;&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;MediaQuery&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;of&lt;&#x2F;span&gt;&lt;span&gt;(context).size.width
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;to get the device&#x27;s width. You can also get the height and other device-dependent information with &lt;a href=&quot;https:&#x2F;&#x2F;api.flutter.dev&#x2F;flutter&#x2F;widgets&#x2F;MediaQuery-class.html&quot;&gt;&lt;code&gt;MediaQuery&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-01-30</title>
        <published>2024-01-30T00:00:00+00:00</published>
        <updated>2024-01-30T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-01-30/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-01-30/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Tuesday, day 030 of 366 (8.19%). We&#x27;re in week 05 of 52 (9.61%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
finish &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;main&#x2F;lib&#x2F;edit_snippet.dart&quot;&gt;edit snippet page&lt;&#x2F;a&gt;&#x27;s save button&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I was finally able to figure out what was going on with the save button. After some more research and trying different things, I was trying to figure out a way to get more information on the error, so I decided to print the response&#x27;s body. The first few tries gave me nothing new, but I eventually got this:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;I&#x2F;flutter&lt;&#x2F;span&gt;&lt;span&gt; (11411)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt; BODY: {&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;language&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;\&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;ABAP&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;\&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt; is not a valid choice.&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Which didn&#x27;t make a lot of sense to me at first because there is, in fact, an &#x27;ABAP&#x27; option in the dropdown menu. But then I remembered that the options endpoint has two instances of each option, one is the original and the other is lowercase, like this:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;languages&amp;quot;: [
&lt;&#x2F;span&gt;&lt;span&gt;        [&amp;quot;Python&amp;quot;, &amp;quot;py&amp;quot;],
&lt;&#x2F;span&gt;&lt;span&gt;        [&amp;quot;Dart&amp;quot;, &amp;quot;dart&amp;quot;]
&lt;&#x2F;span&gt;&lt;span&gt;    ],
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;styles&amp;quot;: [
&lt;&#x2F;span&gt;&lt;span&gt;        [&amp;quot;Formal&amp;quot;, &amp;quot;formal&amp;quot;],
&lt;&#x2F;span&gt;&lt;span&gt;        [&amp;quot;Casual&amp;quot;, &amp;quot;casual&amp;quot;]
&lt;&#x2F;span&gt;&lt;span&gt;    ]
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;I had bumped into this problem earlier when making the values list for the dropdowns because I only wanted the original name to be in the menu, but in this case, I had to go for the lowercase one. So all I had to do was use the &lt;code&gt;toLowerCase()&lt;&#x2F;code&gt; method, and it worked!&lt;&#x2F;p&gt;
&lt;p&gt;There are still some issues with the tests, and I also noticed that &lt;code&gt;flutter analyze&lt;&#x2F;code&gt; is picking up something in the CI that doesn&#x27;t show in the command line, so tomorrow I&#x27;ll be working on that and making new tests for the full edit snippet page.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-01-29</title>
        <published>2024-01-29T00:00:00+00:00</published>
        <updated>2024-01-29T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-01-29/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-01-29/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Monday, day 029 of 366 (7.92%). We&#x27;re in week 05 of 52 (9.61%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
finish &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;main&#x2F;lib&#x2F;edit_snippet.dart&quot;&gt;edit snippet page&lt;&#x2F;a&gt;&#x27;s save button&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
make &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;ab2e876bc3079127b01983f32ff9eb557de71c3b&#x2F;lib&#x2F;edit_snippet.dart#L192C21-L234C23&quot;&gt;dropdowns&lt;&#x2F;a&gt; read only if the user is not the snippet&#x27;s owner&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I was able to make the dropdowns &amp;quot;read only&amp;quot; if the user is not the snippet&#x27;s owner. In reality, I had to add a new widget to replace the dropdown button. I also disabled the save button in the same case, but I was not able to make the PUT request work.&lt;&#x2F;p&gt;
&lt;p&gt;There is something weird going on with the tests. The &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;15f4b7f494e16db93940d156ffc2f269ed7e4e55&#x2F;test&#x2F;login_test.dart#L46C3-L59C6&quot;&gt;empty username test&lt;&#x2F;a&gt; passes on VSCode but fails in the command line, so I&#x27;ll have to look into that.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;Today I learned about the &lt;a href=&quot;https:&#x2F;&#x2F;api.flutter.dev&#x2F;flutter&#x2F;widgets&#x2F;Visibility-class.html&quot;&gt;Visibility widget&lt;&#x2F;a&gt;, which offers you a way to set a condition for a widget to be visible, as well as a replacement widget in case it is not:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;dart&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-dart &quot;&gt;&lt;code class=&quot;language-dart&quot; data-lang=&quot;dart&quot;&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;Visibility&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;    replacement: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; widget to be shown if visibility is false
&lt;&#x2F;span&gt;&lt;span&gt;    visible: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; boolean function to determine whether the child widget is visible,
&lt;&#x2F;span&gt;&lt;span&gt;    child: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;...
&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;I also learned that to disable a button in Flutter, you can set the &lt;code&gt;onPressed&lt;&#x2F;code&gt; parameter to &lt;code&gt;null&lt;&#x2F;code&gt;. To make it easier to read, you can do something like this:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;dart&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-dart &quot;&gt;&lt;code class=&quot;language-dart&quot; data-lang=&quot;dart&quot;&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;ElevatedButton&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;    onPressed: !&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;boolFunction&lt;&#x2F;span&gt;&lt;span&gt;() ? &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;null &lt;&#x2F;span&gt;&lt;span&gt;: () {}
&lt;&#x2F;span&gt;&lt;span&gt;    child: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;...
&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-01-26</title>
        <published>2024-01-26T00:00:00+00:00</published>
        <updated>2024-01-26T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-01-26/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-01-26/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Friday, day 026 of 366 (7.10%). We&#x27;re in week 04 of 52 (7.69%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
finish &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;main&#x2F;lib&#x2F;edit_snippet.dart&quot;&gt;edit snippet page&lt;&#x2F;a&gt;&#x27;s save button&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
make text fields read only if the user is not the snippet&#x27;s owner&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I was not able to finish the save button, I figured out how to make the PUT request from the command line with HTTPie to see if that would help me undestand better what I&#x27;m doing wrong, but it didn&#x27;t. I read the Flutter documentation on &lt;a href=&quot;https:&#x2F;&#x2F;docs.flutter.dev&#x2F;cookbook&#x2F;networking&#x2F;update-data&quot;&gt;updating data over the internet&lt;&#x2F;a&gt;, and mine seems correct. Tomorrow, I&#x27;l try using pudb to debug the API and see if that helps.&lt;&#x2F;p&gt;
&lt;p&gt;I got really tired of the save button, so I moved on to disabling the text boxes and buttons if the user is not the snippet owner. I was not able to finish it because, apprently, Flutter does not provide a way to simply disable the dropdowns as it does for other widgets so I&#x27;ll have to use a &amp;quot;replace widget&amp;quot; and Flutter will toggle wich one is loaded based on the user&#x27;s ownership over the snippet, but I was able to make all the other work (I still have to write tests for them) by simply writing some functions to compare the user&#x27;s username with the snippet&#x27;s owner.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;Today I learned how to make a PUT request using HTTPie in the command line:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;http&lt;&#x2F;span&gt;&lt;span&gt; PUT :8000&#x2F;snippets&#x2F;1&#x2F; &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Authorization:Token &amp;lt;token&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; title=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;title&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;I&#x27;m only using an Authorization header, but there are many others, and you can also PUT multiple key&#x2F;value pairs separeting them with a blank space.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-01-25</title>
        <published>2024-01-25T00:00:00+00:00</published>
        <updated>2024-01-25T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-01-25/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-01-25/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Thursday, day 025 of 366 (6.83%). We&#x27;re in week 04 of 52 (7.69%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
configure &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;main&#x2F;lib&#x2F;edit_snippet.dart&quot;&gt;edit snippet page&lt;&#x2F;a&gt;&#x27;s save button&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
make text fields read only if the user is not the snippet&#x27;s owner&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I made some progress on the button. I figured out how to get all the information that I need to make the PUT request, but for some reason, it doesn&#x27;t work. I tried it a few different ways, and I either get a 400 error, a 415 error, or a Flutter error (in this last case, the PUT request is not made).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;Today I learned that you can access the text in a text field by simply using the &lt;code&gt;text&lt;&#x2F;code&gt; getter in the controller (&lt;code&gt;myController.text&lt;&#x2F;code&gt;). I didn&#x27;t have a controller in the text fields, so I had to adapt the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;4e5e3069ca240723071599011e4a95e702f9116b&#x2F;lib&#x2F;edit_snippet.dart#L103C25-L122C27&quot;&gt;code&lt;&#x2F;a&gt; a bit. I also learned that you can&#x27;t have a controller and an initial value in the same text field (one of them has to be null), but you can give the controller an initial value by giving it the named parameter &lt;code&gt;text: &amp;quot;Initial value&amp;quot;&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-01-24</title>
        <published>2024-01-24T00:00:00+00:00</published>
        <updated>2024-01-24T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-01-24/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-01-24/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Wednesday, day 024 of 366 (6.55%). We&#x27;re in week 04 of 52 (7.69%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
configure &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;main&#x2F;lib&#x2F;edit_snippet.dart&quot;&gt;edit snippet page&lt;&#x2F;a&gt;&#x27;s save button&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
make text fields read only if the user is not the snippet&#x27;s owner&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I was able to get the API running normally. The problem was linked to the static files not loading, an issue that I had been ignoring for a while because I thought static files did not interfere with the API functions. It turns out that when the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_tutorial&#x2F;blob&#x2F;25db6e9e99a32a6d26f65dddc1d938344dbe8f3f&#x2F;tutorial&#x2F;tutorial&#x2F;settings.py#L26C1-L26C13&quot;&gt;&lt;code&gt;DEBUG&lt;&#x2F;code&gt; option in the settings.py&lt;&#x2F;a&gt; file is set to false, Django REST won&#x27;t handle static files for you anymore, and you&#x27;ll need a production web server.&lt;&#x2F;p&gt;
&lt;p&gt;I tried finishing the save button, but I ran into some troubles. I have to access what is in the editable fields, and I&#x27;m not sure how to do that. Maybe I&#x27;ll have to move the button inside the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;4e5e3069ca240723071599011e4a95e702f9116b&#x2F;lib&#x2F;edit_snippet.dart#L84C15-L146C17&quot;&gt;first FutureBuilder&lt;&#x2F;a&gt;, and find a way to make it stay at the end of the page, but I&#x27;ll check on that tomorrow.&lt;&#x2F;p&gt;
&lt;p&gt;As for checking if the user is the owner of the snippet, I&#x27;m going to see if I can recover the username using the token. If not, I&#x27;ll have to save it when the user logs in.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-01-23</title>
        <published>2024-01-23T00:00:00+00:00</published>
        <updated>2024-01-23T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-01-23/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-01-23/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Tuesday, day 023 of 366 (6.28%). We&#x27;re in week 04 of 52 (7.69%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
configure &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;main&#x2F;lib&#x2F;edit_snippet.dart&quot;&gt;edit snippet page&lt;&#x2F;a&gt;&#x27;s save button&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I did a lot of research but didn&#x27;t find anything that helped me fixing the API. When I try to make a PUT or DELETE request the API makes a GET request to a new weird URL.&lt;&#x2F;p&gt;
&lt;p&gt;When I try the PUT method:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;GET&lt;&#x2F;span&gt;&lt;span&gt; &#x2F;snippets&#x2F;1&#x2F;?title=test&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;code&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;28&lt;&#x2F;span&gt;&lt;span&gt;%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;27&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;hello+world&lt;&#x2F;span&gt;&lt;span&gt;%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;21&lt;&#x2F;span&gt;&lt;span&gt;%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;27&lt;&#x2F;span&gt;&lt;span&gt;%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;29&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&amp;amp;linenos=true&amp;amp;language=python&amp;amp;style=vs &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;HTTP&#x2F;1.1&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt; 200 70673
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;When I try the DELETE method:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;GET&lt;&#x2F;span&gt;&lt;span&gt; &#x2F;snippets&#x2F;1&#x2F;? HTTP&#x2F;1.1&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt; 200 69849
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;I spent the whole morning on this and still have no ideia what the problem is, I opened a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_tutorial&#x2F;issues&#x2F;22&quot;&gt;new issue&lt;&#x2F;a&gt; on GitHub and will probably need some help.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;readings&quot;&gt;Readings&lt;&#x2F;h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;encode&#x2F;django-rest-framework&#x2F;issues&#x2F;4190&quot;&gt;PUT method not updating nested serializer due to &#x27;unique&#x27; field restriction #4190&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.django-rest-framework.org&#x2F;api-guide&#x2F;settings&#x2F;&quot;&gt;Django REST framework - Settings&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;studygyaan.com&#x2F;django&#x2F;delete-method-in-django-rest-framework&quot;&gt;DELETE Method Request In Django REST Framework (DRF) – Example&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.appsloveworld.com&#x2F;django&#x2F;100&#x2F;159&#x2F;put-method-is-not-working-in-django-rest?expand_article=1&quot;&gt;PUT METHOD IS NOT WORKING IN DJANGO REST?-DJANGO&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-01-22</title>
        <published>2024-01-22T00:00:00+00:00</published>
        <updated>2024-01-22T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-01-22/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-01-22/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Monday, day 022 of 366 (6.01%). We&#x27;re in week 04 of 52 (7.69%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
configure &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;main&#x2F;lib&#x2F;edit_snippet.dart&quot;&gt;edit snippet page&lt;&#x2F;a&gt;&#x27;s save button&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
fix logout button&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I fixed the logout button, I believe the env file just needed some time to load, because when I ran the app today it didn&#x27;t give that same error, but there was a new issue: the route that was leading to the login page after logout was allowing the user to go back to the previous state. I looked for a way to disable flutter&#x27;s back button, and found &lt;a href=&quot;https:&#x2F;&#x2F;flutterdesk.com&#x2F;disable-or-override-back-button-in-flutter&#x2F;&quot;&gt;this&lt;&#x2F;a&gt;, which took me some time to be able to implement in the project, but in the end what I wanted was way more simple: all I had to do was set the &lt;code&gt;automaticallyImplyLeading&lt;&#x2F;code&gt; property from the &lt;a href=&quot;https:&#x2F;&#x2F;api.flutter.dev&#x2F;flutter&#x2F;material&#x2F;AppBar-class.html&quot;&gt;AppBar&lt;&#x2F;a&gt; to false. &lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;Today I learned about the &lt;a href=&quot;https:&#x2F;&#x2F;api.flutter.dev&#x2F;flutter&#x2F;widgets&#x2F;PopScope-class.html?gclid=EAIaIQobChMI7vLnoYzxgwMVAEJIAB1E5godEAAYASAAEgKnifD_BwE&amp;amp;gclsrc=aw.ds&quot;&gt;PopScope class&lt;&#x2F;a&gt; that can be used to disable flutter&#x27;s back button by setting &lt;code&gt;canPop&lt;&#x2F;code&gt; to false or execute some code on back press using the &lt;code&gt;onPopInvoked&lt;&#x2F;code&gt; parameter, keep in mind that the disabled button still shows on the page.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;readings&quot;&gt;Readings&lt;&#x2F;h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;flutterdesk.com&#x2F;disable-or-override-back-button-in-flutter&#x2F;&quot;&gt;How to Disable or Override Back Button in Flutter?&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.flutterbeads.com&#x2F;disable-override-back-button-in-flutter&#x2F;&quot;&gt;Disable&#x2F;Override Back Button in Flutter – The Right Way&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-01-19</title>
        <published>2024-01-19T00:00:00+00:00</published>
        <updated>2024-01-19T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-01-19/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-01-19/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Friday, day 019 of 366 (5.19%). We&#x27;re in week 03 of 52 (5.76%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
configure &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;main&#x2F;lib&#x2F;edit_snippet.dart&quot;&gt;edit snippet page&lt;&#x2F;a&gt;&#x27;s save button&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
fix edit snippet page overflow error&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
fix logout button&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I did some research on how to fix the logout button, but I couldn&#x27;t find anything that really helped, so a switched to fixing the overflow. I had to go throght some different possible answers until I found &lt;a href=&quot;https:&#x2F;&#x2F;stackoverflow.com&#x2F;a&#x2F;70612950&#x2F;6618622&quot;&gt;this on StackOverflow&lt;&#x2F;a&gt; and turns out all I had to do was follow it.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;Today I learned about the &lt;code&gt;resizeToAvoidBottomInset&lt;&#x2F;code&gt; property from &lt;a href=&quot;https:&#x2F;&#x2F;api.flutter.dev&#x2F;flutter&#x2F;material&#x2F;Scaffold-class.html&quot;&gt;Scaffold&lt;&#x2F;a&gt;, that basically tells Flutter if it should resize the page to fit the keyboard (or something else that takes over the bottom of the page) or just let the later cover it, it&#x27;s default is true, but it couldn&#x27;t shrink the elements, so they ended up bigger than the screen space availabel.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-01-18</title>
        <published>2024-01-18T00:00:00+00:00</published>
        <updated>2024-01-18T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-01-18/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-01-18/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Thursday, day 018 of 366 (4.91%). We&#x27;re in week 03 of 52 (5.76%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
configure &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;main&#x2F;lib&#x2F;edit_snippet.dart&quot;&gt;edit snippet page&lt;&#x2F;a&gt;&#x27;s save button&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I was not able to finish the edit snippet page&#x27;s button, because I don&#x27;t know what&#x27;s wrong with the API. When I change something and click PUT it doesn&#x27;t edit the snippet and I have no idea why. Instead I tried adding a logout button, but Flutter keeps saying the endpoint is not on the .env file:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;I&#x2F;flutter&lt;&#x2F;span&gt;&lt;span&gt; (28186)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt; FlutterConfig Value for Key(LOGOUT_ENDPOINT) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;not&lt;&#x2F;span&gt;&lt;span&gt; found
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;I&#x2F;flutter&lt;&#x2F;span&gt;&lt;span&gt; (28186)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt; Ensure you have it in .env file
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;I changed the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;a9cdc90bc3dce679613fb526ee0492d48b56392a&#x2F;lib&#x2F;edit_snippet.dart#L47C11-L55C15&quot;&gt;back button&lt;&#x2F;a&gt; in the edit snippet page and now it&#x27;s on the app bar, instead of the page&#x27;s body.&lt;&#x2F;p&gt;
&lt;p&gt;I also discovered the page has the same overflow error from before, but only when the keyboard opens, so I&#x27;ll have to look into that.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;Today I learned a lot about the &lt;a href=&quot;https:&#x2F;&#x2F;api.flutter.dev&#x2F;flutter&#x2F;material&#x2F;AppBar-class.html&quot;&gt;AppBar&lt;&#x2F;a&gt; and how you can add and rearenge objects in it. For example, I added the back button before the app&#x27;s name, and for that I had to set the &lt;code&gt;automaticallyImplyLeading&lt;&#x2F;code&gt; property to false and add a &lt;a href=&quot;https:&#x2F;&#x2F;api.flutter.dev&#x2F;flutter&#x2F;widgets&#x2F;GestureDetector-class.html&quot;&gt;GestureDetector&lt;&#x2F;a&gt; to the &lt;code&gt;leading&lt;&#x2F;code&gt; property, it looks something like this:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;dart&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-dart &quot;&gt;&lt;code class=&quot;language-dart&quot; data-lang=&quot;dart&quot;&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;AppBar&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;    title: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;Text&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&amp;#39;AppBar&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;),
&lt;&#x2F;span&gt;&lt;span&gt;    automaticallyImplyLeading: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;false&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    leading: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;GestureDetector&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;    onTap: () {
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;Navigator&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;push&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;            context,
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;MaterialPageRoute&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;                builder: (context) =&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;OtherPage&lt;&#x2F;span&gt;&lt;span&gt;()));
&lt;&#x2F;span&gt;&lt;span&gt;    },
&lt;&#x2F;span&gt;&lt;span&gt;    child: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;Icon&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;Icons&lt;&#x2F;span&gt;&lt;span&gt;.arrow_back),
&lt;&#x2F;span&gt;&lt;span&gt;    ),
&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;You can also add more GestureDetectors using the &lt;code&gt;actions&lt;&#x2F;code&gt; property, that accepts a list of widgets. You can use Row, Padding, Container, or anything else to arrenge them however you want.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-01-17</title>
        <published>2024-01-17T00:00:00+00:00</published>
        <updated>2024-01-17T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-01-17/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-01-17/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Wednesday, day 017 of 366 (4.64%). We&#x27;re in week 03 of 52 (5.76%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
work on the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;main&#x2F;lib&#x2F;edit_snippet.dart&quot;&gt;edit snippet page&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I finished all the inputs on the edit snippet page and added the button that will send the PUT request to the API. I tried to finish the button today, but there seems to be something wrong with the API that I&#x27;ll have to figure out tomorrow. Also, the current &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;actions&#x2F;runs&#x2F;7556718221&#x2F;job&#x2F;20574358659&quot;&gt;test for the edit snippet page seems to be broken&lt;&#x2F;a&gt;, but everything seems to work fine, so it&#x27;s probably because of something I changed on the page.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;Today I learned about the &lt;a href=&quot;https:&#x2F;&#x2F;api.flutter.dev&#x2F;flutter&#x2F;material&#x2F;CheckboxListTile-class.html&quot;&gt;CheckboxListTile widget&lt;&#x2F;a&gt;, which is a lot better than the Checkbox widget I was using, since it allows you to add a title, define active, hover, fill, check, and overlay colors, and a lot more options not offered by the second one.&lt;&#x2F;p&gt;
&lt;p&gt;I also learned that I can set the maxLines property from the &lt;a href=&quot;https:&#x2F;&#x2F;api.flutter.dev&#x2F;flutter&#x2F;material&#x2F;TextFormField-class.html&quot;&gt;TextFormField widget&lt;&#x2F;a&gt; to null so that the box will vertically grow to show the whole text inside.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-01-16</title>
        <published>2024-01-16T00:00:00+00:00</published>
        <updated>2024-01-16T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-01-16/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-01-16/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Tuesday, day 016 of 366 (4.37%). We&#x27;re in week 03 of 52 (5.76%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
work on the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;main&#x2F;lib&#x2F;edit_snippet.dart&quot;&gt;edit snippet page&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I was able to fix the problem from yesterday. The issue was that I had rows that were too big inside columns that were trying to fit the rows. So, I rearranged the code. After fixing that, I added the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;f17d92b65b81a078b6de92deb6775a4f62bb56ec&#x2F;lib&#x2F;edit_snippet.dart#L93C25-L110C27&quot;&gt;text inputs for the title and code&lt;&#x2F;a&gt;, and I&#x27;m trying to add the linenos checkbox. However, I&#x27;m having trouble with it since the &lt;a href=&quot;https:&#x2F;&#x2F;api.flutter.dev&#x2F;flutter&#x2F;material&#x2F;Checkbox-class.html&quot;&gt;Checkbox class&lt;&#x2F;a&gt; doesn&#x27;t have an initial value property, and there is no way to check if a late variable (which is how I initially thought about treating the linenos value) has been initialized. I&#x27;m trying to make the checkbox work, and I will search for other solutions tomorrow, but I&#x27;m leaning toward using another class, like a button.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;Today I learned about the Checkbox class, whose name is pretty self-explanatory, and about the &lt;a href=&quot;https:&#x2F;&#x2F;docs.flutter.dev&#x2F;testing&#x2F;common-errors#a-renderflex-overflowed&quot;&gt;RenderFlex overflow error&lt;&#x2F;a&gt;, which is pretty common and mostly happens when there are too long items inside columns. The parent tries to accommodate it but ends up getting bigger than the screen. Fixing it can be as simple as wrapping the item with &lt;code&gt;Expanded()&lt;&#x2F;code&gt; or refactoring your code. The error looks something like this:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Another&lt;&#x2F;span&gt;&lt;span&gt; exception was thrown: RenderBox was not laid out:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;_RenderDecoration#9a7f2&lt;&#x2F;span&gt;&lt;span&gt; relayoutBoundary=up10 NEEDS-PAINT
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;NEEDS-COMPOSITING-BITS-UPDATE
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-01-15</title>
        <published>2024-01-15T00:00:00+00:00</published>
        <updated>2024-01-15T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-01-15/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-01-15/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Monday, day 015 of 366 (4.09%). We&#x27;re in week 03 of 52 (5.76%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
work on the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;main&#x2F;lib&#x2F;edit_snippet.dart&quot;&gt;edit snippet page&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I progressed a bit in the eddit snippet page, but there is something wrong with the new &lt;a href=&quot;https:&#x2F;&#x2F;api.flutter.dev&#x2F;flutter&#x2F;widgets&#x2F;FutureBuilder-class.html&quot;&gt;FutureBuidler&lt;&#x2F;a&gt; I created to handle the snippet&#x27;s data, I keep getting an overflow error:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;Another exception was thrown: A RenderFlex overflowed by 99607 pixels on the
&lt;&#x2F;span&gt;&lt;span&gt;right.
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;At first I thought it has something to do with the fact that I was using two future builders in the same widget, but when I comment one the error still appears, so it is most likely something in this new one.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;Today I learned about the &lt;code&gt;obscureText&lt;&#x2F;code&gt; property from the &lt;a href=&quot;https:&#x2F;&#x2F;api.flutter.dev&#x2F;flutter&#x2F;material&#x2F;TextFormField-class.html?gclid=CjwKCAiAzJOtBhALEiwAtwj8tq6jtgEzDnoNaigpXJBHKhCQPJ8vhltU22yAokPM9lo7AcPMqCzHehoCINEQAvD_BwE&amp;amp;gclsrc=aw.ds&quot;&gt;TextFormField widget&lt;&#x2F;a&gt; that can be set to true to hide what the user enters.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-01-12</title>
        <published>2024-01-12T00:00:00+00:00</published>
        <updated>2024-01-12T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-01-12/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-01-12/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Friday, day 012 of 366 (3.27%). We&#x27;re in week 02 of 52 (3.84%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
start making tests for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;snippets_CRUD&#x2F;lib&#x2F;view_snippets.dart&quot;&gt;snippets view page&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I started and finished the tests for the snippets view page. After that, I began working more on the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;main&#x2F;lib&#x2F;edit_snippet.dart&quot;&gt;edit snippet page&lt;&#x2F;a&gt; since it needs to cover a lot more functionality. For now, I changed it to require one more argument, which is the snippet ID, so that I can use it to retrieve the correct information from the API. I created the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;2801bff5aa92c5e0bcdacfef137bee21266065cc&#x2F;lib&#x2F;api_service.dart#L35C3-L47C4&quot;&gt;function for that in the APIService class&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-01-11</title>
        <published>2024-01-11T00:00:00+00:00</published>
        <updated>2024-01-11T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-01-11/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-01-11/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Thursday, day 011 of 366 (3.00%). We&#x27;re in week 02 of 52 (3.84%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
continue &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;snippets_CRUD&#x2F;lib&#x2F;view_snippets.dart&quot;&gt;snippets visualization page&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I was able to make the list with all the snippets work. I added a detail button that will lead to the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;main&#x2F;lib&#x2F;edit_snippet.dart&quot;&gt;edit snippet page&lt;&#x2F;a&gt;, but I have to make the tests for the snippets view first, which I&#x27;ll be starting tomorrow. &lt;&#x2F;p&gt;
&lt;p&gt;I still don&#x27;t truly understand what was going wrong and why what I was trying was not working, but in the end I just used a &lt;a href=&quot;https:&#x2F;&#x2F;docs.flutter.dev&#x2F;cookbook&#x2F;lists&#x2F;long-lists&quot;&gt;ListView builder&lt;&#x2F;a&gt; and customized what I wanted to be shown in the &lt;a href=&quot;https:&#x2F;&#x2F;api.flutter.dev&#x2F;flutter&#x2F;material&#x2F;ListTile-class.html?gclid=Cj0KCQiAwP6sBhDAARIsAPfK_wYYr-DXW66prUfVCn3mB1tonis77J3tBevWLCF_4VVrpGVqHKfVpH0aApYjEALw_wcB&amp;amp;gclsrc=aw.ds&quot;&gt;ListTile&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;Today I learned more about how to use the ListView builder and the ListTile widget, I also learned that you can use the &lt;code&gt;mainAxisAlignment&lt;&#x2F;code&gt; property from the Row widget to space out the children in different ways.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-01-10</title>
        <published>2024-01-10T00:00:00+00:00</published>
        <updated>2024-01-10T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-01-10/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-01-10/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Wednesday, day 010 of 366 (2.73%). We&#x27;re in week 02 of 52 (3.84%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
fix warnings on &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;issues&#x2F;1&quot;&gt;Flutter Client&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
start the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;issues&#x2F;2&quot;&gt;snippets CRUD&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I fixed the warning about immutable classes on the Flutter Client, but the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;actions&#x2F;runs&#x2F;7474000014&#x2F;job&#x2F;20339271872&quot;&gt;CI was still broken&lt;&#x2F;a&gt; only on gh-actions. Luckly, it was an easy fix. All I had to do was change &lt;code&gt;findsOne&lt;&#x2F;code&gt; to &lt;code&gt;FindsOneWidget&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;I also created a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;17d2d31a1081dbab95d469fa90b0631212a0d6ff&#x2F;lib&#x2F;api_service.dart#L22C1-L34C2&quot;&gt;new function in the API Service class&lt;&#x2F;a&gt; to fetch the snippets from the API and started the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;snippets_CRUD&#x2F;lib&#x2F;view_snippets.dart&quot;&gt;snippets page&lt;&#x2F;a&gt;, but I&#x27;m having some trouble with displaying the items.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;Today I learned that you can add:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;dart&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-dart &quot;&gt;&lt;code class=&quot;language-dart&quot; data-lang=&quot;dart&quot;&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;&#x2F;ignore: must_be_immutable
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;above a class declaration so &lt;code&gt;flutter analyze&lt;&#x2F;code&gt; will not warn you if that class is not immutable.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-01-09</title>
        <published>2024-01-09T00:00:00+00:00</published>
        <updated>2024-01-09T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-01-09/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-01-09/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Tuesday, day 009 of 366 (2.45%). We&#x27;re in week 02 of 52 (3.84%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
finish the tests for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;issues&#x2F;1&quot;&gt;Flutter Client&lt;&#x2F;a&gt;&#x27;s login page&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
start the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;issues&#x2F;2&quot;&gt;snippets CRUD&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I was able to finish the login page&#x27;s last test, as it turns out the problem was not the static variable but the fact that I was not using the mock, so I changed the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;login&#x2F;lib&#x2F;login.dart&quot;&gt;Login class&lt;&#x2F;a&gt; and now it takes the mock as a parameter and uses it, if the mock&#x27;s null, then it&#x27;ll just use the original &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;5c499c0f942b4887aa7ef9236fea0f174886e65f&#x2F;lib&#x2F;login.dart#L14C3-L27C4&quot;&gt;login function&lt;&#x2F;a&gt; instead of the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;5c499c0f942b4887aa7ef9236fea0f174886e65f&#x2F;test&#x2F;login_test.dart#L14C1-L16C8&quot;&gt;mocked one&lt;&#x2F;a&gt;. The code is definetly not perfect, but I don&#x27;t have the knowledge to make it better right now so I will revisit it in the future.&lt;&#x2F;p&gt;
&lt;p&gt;The only thing left to do is correct a warning that&#x27;s &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;actions&#x2F;runs&#x2F;7462142184&#x2F;job&#x2F;20303790041&quot;&gt;breaking the CI&lt;&#x2F;a&gt;, but that is connected to Mock so I don&#x27;t know if I&#x27;m gonna be able to do it.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;readings&quot;&gt;Readings&lt;&#x2F;h2&gt;
&lt;p&gt;Before I realized what the real problem was, I did some readings:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;https:&#x2F;&#x2F;docs.flutter.dev&#x2F;testing&#x2F;debugging&lt;&#x2F;li&gt;
&lt;li&gt;https:&#x2F;&#x2F;docs.flutter.dev&#x2F;testing&#x2F;native-debugging&lt;&#x2F;li&gt;
&lt;li&gt;https:&#x2F;&#x2F;medium.com&#x2F;apparence&#x2F;mvp-flutter-complete-unit-testing-for-a-login-component-e466b4743da0&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2024-01-08</title>
        <published>2024-01-08T00:00:00+00:00</published>
        <updated>2024-01-08T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2024-01-08/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2024-01-08/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Monday, day 008 of 366 (2.18%). We&#x27;re in week 02 of 52 (3.84%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
work on the tests for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;issues&#x2F;1&quot;&gt;Flutter Client&lt;&#x2F;a&gt;&#x27;s login page&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
start the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;issues&#x2F;2&quot;&gt;snippets CRUD&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I was able to make two of the last three tests work. I realized that for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;edbb9c734c720be903ef7a6de39d0d90a70bb5a9&#x2F;test&#x2F;login_test.dart#L61C2-L99C6&quot;&gt;these two&lt;&#x2F;a&gt;, I don&#x27;t need to check the token itself; I just have to verify if the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;edbb9c734c720be903ef7a6de39d0d90a70bb5a9&#x2F;lib&#x2F;login.dart#L83C17-L91C21&quot;&gt;failed login message&lt;&#x2F;a&gt; appears.&lt;&#x2F;p&gt;
&lt;p&gt;The third test is a bit trickier, and I&#x27;m still having trouble trying to get around the static token. I did make a little progress since I am now able to mock the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;edbb9c734c720be903ef7a6de39d0d90a70bb5a9&#x2F;lib&#x2F;login.dart#L13C3-L26C4&quot;&gt;login function&lt;&#x2F;a&gt;. I just had to move it to the Login class instead of its state. To get the test working, I tried adding another non-static variable to use, but it didn&#x27;t solve the issue. So maybe I&#x27;m looking at it the wrong way and the static variable is not even the real problem. I also tried mocking the login function in the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;edbb9c734c720be903ef7a6de39d0d90a70bb5a9&#x2F;test&#x2F;login_test.dart#L13C3-L17C6&quot;&gt;setup&lt;&#x2F;a&gt;, as I did in the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;edbb9c734c720be903ef7a6de39d0d90a70bb5a9&#x2F;test&#x2F;edit_snippet_test.dart#L16C3-L28C6&quot;&gt;edit snippets test&lt;&#x2F;a&gt;, but that didn&#x27;t seem to change anything.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;Today I learned about a new widget that I believe will be very useful in the future. The &lt;a href=&quot;https:&#x2F;&#x2F;api.flutter.dev&#x2F;flutter&#x2F;widgets&#x2F;OverlayPortal-class.html&quot;&gt;OverlayPortal&lt;&#x2F;a&gt; widget can be used to create an overlay without breaking inheritance, which means it can be very handy for popups and menus.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;readings&quot;&gt;Readings&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=S0Ylpa44OAQ&quot;&gt;OverlayPortal (Widget of the Week)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2023-12-23</title>
        <published>2023-12-23T00:00:00+00:00</published>
        <updated>2023-12-23T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2023-12-23/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2023-12-23/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Saturday, day 357 of 365 (97.80%). We&#x27;re in week 51 of 52 (98.07%).&lt;&#x2F;p&gt;
&lt;p&gt;PTO - Start&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2023-12-22</title>
        <published>2023-12-22T00:00:00+00:00</published>
        <updated>2023-12-22T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2023-12-22/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2023-12-22/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Friday, day 356 of 365 (97.53%). We&#x27;re in week 51 of 52 (98.07%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
work on the tests for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;issues&#x2F;1&quot;&gt;Flutter Client&lt;&#x2F;a&gt;&#x27;s login page&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
start the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;issues&#x2F;2&quot;&gt;snippets CRUD&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I did some more research on how to make the test work, but I couldn&#x27;t find anything. I tried making something similar to what it says &lt;a href=&quot;https:&#x2F;&#x2F;dev.to&#x2F;manuelvargastapia&#x2F;how-to-test-static-members-with-mockito-in-flutter-2139&quot;&gt;here&lt;&#x2F;a&gt; but it didn&#x27;t work. I was getting really frustrated and felt like I wasn&#x27;t going anywhere so I decided to do something else for a while, so I updated the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;login&#x2F;lib&#x2F;login.dart&quot;&gt;Login page&lt;&#x2F;a&gt; to not change pages when the login is unseccessful, instead it shows a login error message.&lt;&#x2F;p&gt;
&lt;p&gt;After I finished that update, I did some clean up and saw that the &lt;code&gt;flutter analyze&lt;&#x2F;code&gt; is catching some errors in github actions that don&#x27;t show when I run it localy, but I didn&#x27;t have time to look into it. There is also a warning from the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;login&#x2F;test&#x2F;login_test.mocks.dart&quot;&gt;login mock&lt;&#x2F;a&gt; file that I don&#x27;t know what it means.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;Today I learned that &lt;code&gt;setState(() {})&lt;&#x2F;code&gt; reloads the page and you can pass it local variables to update them. You can use this to have a variable to hide or not hide a Widget, all you have to do is make your class a stateful widget (if it&#x27;s not one already), declare your variable, and use an &lt;code&gt;if(condition)&lt;&#x2F;code&gt; clause with the widget you want to hade&#x2F;show. It will look something like this:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;dart&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-dart &quot;&gt;&lt;code class=&quot;language-dart&quot; data-lang=&quot;dart&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;MyHomePage &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;extends &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;StatefulWidget&lt;&#x2F;span&gt;&lt;span&gt; {
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;MyHomePage&lt;&#x2F;span&gt;&lt;span&gt;({&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;Key&lt;&#x2F;span&gt;&lt;span&gt; key}) : &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;super&lt;&#x2F;span&gt;&lt;span&gt;(key: key);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;@override
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;_MyHomePageState &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;createState&lt;&#x2F;span&gt;&lt;span&gt;() =&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;_MyHomePageState&lt;&#x2F;span&gt;&lt;span&gt;();
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;_MyHomePageState &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;extends &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;State&lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;MyHomePage&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; {
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;bool&lt;&#x2F;span&gt;&lt;span&gt; _clicked = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;false&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;@override
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;Widget &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;build&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;BuildContext&lt;&#x2F;span&gt;&lt;span&gt; context) {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;Scaffold&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;      body: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;Center&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;        child: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;Column&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;          children: &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;Widget&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;[
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if&lt;&#x2F;span&gt;&lt;span&gt; (_clicked) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;Text&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&amp;#39;Button is clicked&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;), &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; If _clicked is true, the Text widget will be shown
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;FlatButton&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;              onPressed: () {
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;setState&lt;&#x2F;span&gt;&lt;span&gt;(() {
&lt;&#x2F;span&gt;&lt;span&gt;                  _clicked = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;true&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;                });
&lt;&#x2F;span&gt;&lt;span&gt;              },
&lt;&#x2F;span&gt;&lt;span&gt;              child: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;Text&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&amp;#39;Click me&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;            ),
&lt;&#x2F;span&gt;&lt;span&gt;          ],
&lt;&#x2F;span&gt;&lt;span&gt;        ),
&lt;&#x2F;span&gt;&lt;span&gt;      ),
&lt;&#x2F;span&gt;&lt;span&gt;    );
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;If you want to toggle the state and not just set it to false&#x2F;true, you can just use if&#x2F;else:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;dart&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-dart &quot;&gt;&lt;code class=&quot;language-dart&quot; data-lang=&quot;dart&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;MyHomePage &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;extends &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;StatefulWidget&lt;&#x2F;span&gt;&lt;span&gt; {
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;MyHomePage&lt;&#x2F;span&gt;&lt;span&gt;({&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;Key&lt;&#x2F;span&gt;&lt;span&gt; key}) : &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;super&lt;&#x2F;span&gt;&lt;span&gt;(key: key);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;@override
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;_MyHomePageState &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;createState&lt;&#x2F;span&gt;&lt;span&gt;() =&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;_MyHomePageState&lt;&#x2F;span&gt;&lt;span&gt;();
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;_MyHomePageState &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;extends &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;State&lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;MyHomePage&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; {
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;bool&lt;&#x2F;span&gt;&lt;span&gt; _clicked = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;false&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;@override
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;Widget &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;build&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;BuildContext&lt;&#x2F;span&gt;&lt;span&gt; context) {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;Scaffold&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;      body: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;Center&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;        child: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;Column&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;          children: &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;Widget&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;[
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if&lt;&#x2F;span&gt;&lt;span&gt; (_clicked) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;Text&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&amp;#39;Botão foi clicado&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;),
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;FlatButton&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;              onPressed: () {
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if&lt;&#x2F;span&gt;&lt;span&gt; (_clicked) {
&lt;&#x2F;span&gt;&lt;span&gt;                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;setState&lt;&#x2F;span&gt;&lt;span&gt;(() {
&lt;&#x2F;span&gt;&lt;span&gt;                        _clicked = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;false
&lt;&#x2F;span&gt;&lt;span&gt;                    })
&lt;&#x2F;span&gt;&lt;span&gt;                } &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span&gt; {
&lt;&#x2F;span&gt;&lt;span&gt;                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;setState&lt;&#x2F;span&gt;&lt;span&gt;(() {
&lt;&#x2F;span&gt;&lt;span&gt;                        _clicked = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;true
&lt;&#x2F;span&gt;&lt;span&gt;                    })
&lt;&#x2F;span&gt;&lt;span&gt;                }
&lt;&#x2F;span&gt;&lt;span&gt;              },
&lt;&#x2F;span&gt;&lt;span&gt;              child: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;Text&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&amp;#39;Clique em mim&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;            ),
&lt;&#x2F;span&gt;&lt;span&gt;          ],
&lt;&#x2F;span&gt;&lt;span&gt;        ),
&lt;&#x2F;span&gt;&lt;span&gt;      ),
&lt;&#x2F;span&gt;&lt;span&gt;    );
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2023-12-21</title>
        <published>2023-12-21T00:00:00+00:00</published>
        <updated>2023-12-21T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2023-12-21/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2023-12-21/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Thursday, day 355 of 365 (97.26%). We&#x27;re in week 51 of 52 (98.07%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
work on the tests for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;issues&#x2F;1&quot;&gt;Flutter Client&lt;&#x2F;a&gt;&#x27;s login page&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
start the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;issues&#x2F;2&quot;&gt;snippets CRUD&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I thought I could finish the tests for the login page, but I&#x27;m having some trouble with them. I believe that when I &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;603222cf1a5e269cdf8ffbfeaaf95dd7b85d172e&#x2F;test&#x2F;login_test.dart#L130C4-L130C37&quot;&gt;check if the token is correct&lt;&#x2F;a&gt; the code looks to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;603222cf1a5e269cdf8ffbfeaaf95dd7b85d172e&#x2F;lib&#x2F;login.dart#L10&quot;&gt;Login&#x27;s class static token variable&lt;&#x2F;a&gt;, but I couldn&#x27;t figure out how to solve that. Analyzing the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;login&#x2F;test&#x2F;login_test.mocks.dart&quot;&gt;mock&lt;&#x2F;a&gt;, I couldn&#x27;t find the token variable, and I think that confirms my suspicious. I tried researching and found some things on static methods, but not static variables.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2023-12-20</title>
        <published>2023-12-20T00:00:00+00:00</published>
        <updated>2023-12-20T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2023-12-20/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2023-12-20/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Wednesday, day 354 of 365 (96.98%). We&#x27;re in week 51 of 52 (98.07%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
continue working on &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;issues&#x2F;1&quot;&gt;Flutter Client&lt;&#x2F;a&gt;&#x27;s login page&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I did some nice progress in the Flutter Client login situation. The login page works just fine, it correctly saves the token in a static variable that can be accessed from any other class. &lt;&#x2F;p&gt;
&lt;p&gt;I changed the project so that &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;login&#x2F;lib&#x2F;constants.dart&quot;&gt;&lt;code&gt;constants.dart&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; uses the variables from the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;login&#x2F;.env&quot;&gt;&lt;code&gt;.env&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; file and the rest of the code uses the constants from &lt;code&gt;constants.dart&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;I cleaned up the code: removed &lt;code&gt;print()&lt;&#x2F;code&gt; methods and unnecessary comments.&lt;&#x2F;p&gt;
&lt;p&gt;Lastly, I started making the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;login&#x2F;test&#x2F;login_test.dart&quot;&gt;tests for the login&lt;&#x2F;a&gt;, the first ones were quite easy, they test for empty username, password and both, the forth one is going to test that the token is an empty string if the username and password are not valid, but I coundn&#x27;t finish it today, since I had some trouble with the Dart SDK version, which I was only able to fix at the very end of the morning: when I ran &lt;code&gt;dart run build_runner build&lt;&#x2F;code&gt; to create the mock for the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;d24b453d881fa1177a5d5dc119a745058abbb0a4&#x2F;lib&#x2F;login.dart#L16C3-L29C4&quot;&gt;&lt;code&gt;login(username, password)&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; method it wouldn&#x27;t work, this is what is said:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Resolving&lt;&#x2F;span&gt;&lt;span&gt; dependencies...
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;The&lt;&#x2F;span&gt;&lt;span&gt; current Dart SDK version is 3.1.5.
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Because&lt;&#x2F;span&gt;&lt;span&gt; luisa_drf_flutter_client depends on flutter_test from sdk which
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;requires&lt;&#x2F;span&gt;&lt;span&gt; SDK version &amp;gt;=3.2.0-0 &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;4&lt;&#x2F;span&gt;&lt;span&gt;.0.0, version solving failed.
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;You&lt;&#x2F;span&gt;&lt;span&gt; can try the following suggestion to make the pubspec resolve:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt; Try using the Dart SDK version: 3.2.3. See https:&#x2F;&#x2F;dart.dev&#x2F;get-dart.
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;At first I thought there was something wrong with Dart and I had somehow messed up the PATH again, but I solved it by just installing a later version of Dart in asdf. I&#x27;m not sure why the required minimum version changed, the only thing I can think of is upgrading flutter did it.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;Today I learned how to fill text fields using &lt;code&gt;enterText()&lt;&#x2F;code&gt; method:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;dart&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-dart &quot;&gt;&lt;code class=&quot;language-dart&quot; data-lang=&quot;dart&quot;&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;await&lt;&#x2F;span&gt;&lt;span&gt; tester.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;enterText&lt;&#x2F;span&gt;&lt;span&gt;(find.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;byType&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;TextField&lt;&#x2F;span&gt;&lt;span&gt;), &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&amp;#39;hi&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2023-12-19</title>
        <published>2023-12-19T00:00:00+00:00</published>
        <updated>2023-12-19T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2023-12-19/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2023-12-19/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Tuesday, day 353 of 365 (96.71%). We&#x27;re in week 51 of 52 (98.07%).&lt;&#x2F;p&gt;
&lt;p&gt;Sick day&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2023-12-18</title>
        <published>2023-12-18T00:00:00+00:00</published>
        <updated>2023-12-18T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2023-12-18/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2023-12-18/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Monday, day 352 of 365 (96.43%). We&#x27;re in week 51 of 52 (98.07%).&lt;&#x2F;p&gt;
&lt;p&gt;Sick day&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2023-12-15</title>
        <published>2023-12-15T00:00:00+00:00</published>
        <updated>2023-12-15T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2023-12-15/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2023-12-15/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Friday, day 349 of 365 (95.61%). We&#x27;re in week 50 of 52 (96.15%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
create tests for GET requests in the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_tutorial&quot;&gt;API&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I created the tests for GET requests in both &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_tutorial&#x2F;blob&#x2F;a24871884614fb0e5edf43319e2212dfbaff8599&#x2F;tutorial&#x2F;snippets&#x2F;tests&#x2F;test_views.py#L137C1-L152C67&quot;&gt;User view set&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_tutorial&#x2F;blob&#x2F;a24871884614fb0e5edf43319e2212dfbaff8599&#x2F;tutorial&#x2F;snippets&#x2F;tests&#x2F;test_views.py#L155C1-L170C67&quot;&gt;Options view set&lt;&#x2F;a&gt; in the API and continued to work on the login for the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;tree&#x2F;login&quot;&gt;Flutter Client&lt;&#x2F;a&gt;. I&#x27;m having some troubles adapting the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;login&#x2F;lib&#x2F;api_service.dart&quot;&gt;ApiService class&lt;&#x2F;a&gt; now that all endpoints are closed, the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;89bc061fa5fab5cdfcb0fb17db468cc2e2e2d848&#x2F;lib&#x2F;login.dart#L16C3-L34C4&quot;&gt;login function&lt;&#x2F;a&gt; is returning the token correctly but it doesn&#x27;t seem to be saving it in the static token variable, I&#x27;ll look more into it on Monday.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;Today I learned how to pass a token to authorize a request in Flutter:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;dart&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-dart &quot;&gt;&lt;code class=&quot;language-dart&quot; data-lang=&quot;dart&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;await&lt;&#x2F;span&gt;&lt;span&gt; http.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;get&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;Uri&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;parse&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&amp;#39;http:&#x2F;&#x2F;your.url&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;),
&lt;&#x2F;span&gt;&lt;span&gt;    headers: {&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&amp;#39;Authorization&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&amp;#39;Bearer $&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;token&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2023-12-14</title>
        <published>2023-12-14T00:00:00+00:00</published>
        <updated>2023-12-14T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2023-12-14/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2023-12-14/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Thursday, day 348 of 365 (95.34%). We&#x27;re in week 50 of 52 (96.15%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
continue working on &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&quot;&gt;Flutter Client&lt;&#x2F;a&gt;&#x27;s login page&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I finished the login page, it now has a static variable to keep the user&#x27;s token. To get the token I just post the username and password given to the &lt;code&gt;auth-token&lt;&#x2F;code&gt; endpoint:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;dart&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-dart &quot;&gt;&lt;code class=&quot;language-dart&quot; data-lang=&quot;dart&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;final&lt;&#x2F;span&gt;&lt;span&gt; response = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;await&lt;&#x2F;span&gt;&lt;span&gt; http.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;post&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;          &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;Uri&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;parse&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&amp;#39;http:&#x2F;&#x2F;your.url&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;),
&lt;&#x2F;span&gt;&lt;span&gt;          body: {&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&amp;#39;username&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;: username, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&amp;#39;password&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;: password});
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;and return the token:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;dart&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-dart &quot;&gt;&lt;code class=&quot;language-dart&quot; data-lang=&quot;dart&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;var&lt;&#x2F;span&gt;&lt;span&gt; data = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;jsonDecode&lt;&#x2F;span&gt;&lt;span&gt;(response.body.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;toString&lt;&#x2F;span&gt;&lt;span&gt;());
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return&lt;&#x2F;span&gt;&lt;span&gt; data[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&amp;#39;token&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;];
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;I also &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_tutorial&#x2F;tree&#x2F;close_endpoints&quot;&gt;closed all endpoints&lt;&#x2F;a&gt;, so now even the GET requests require authorization.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;Today I learned how to close the endpoints from an API by simply removing the request you want to request authorization for from SAFE_METHODS in &lt;code&gt;&#x2F;env&#x2F;lib&#x2F;python3.11&#x2F;site-packages&#x2F;rest_framework&#x2F;permissions.py&lt;&#x2F;code&gt; and adding &lt;code&gt;permission_classes&lt;&#x2F;code&gt; array to the views. The permission class looks top the safe methods to check if the current method needs authentication. This is the default permission (in permissions.py):&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span&gt;&#x2F;&#x2F; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;...
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;IsAuthenticatedOrReadOnly&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;BasePermission&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&amp;quot;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;    The request is authenticated as a user, or is a read-only request.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;has_permission&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;request&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;view&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;bool&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;            request.method in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;SAFE_METHODS &lt;&#x2F;span&gt;&lt;span&gt;or
&lt;&#x2F;span&gt;&lt;span&gt;            request.user and
&lt;&#x2F;span&gt;&lt;span&gt;            request.user.is_authenticated
&lt;&#x2F;span&gt;&lt;span&gt;        )
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;&#x2F; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;...
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;to use it in the view you just have import it and define the &lt;code&gt;permission_classes&lt;&#x2F;code&gt; array:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;rest_framework &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;permissions
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;&#x2F; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;...
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;ExampleView&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;APIView&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;): &lt;&#x2F;span&gt;&lt;span&gt;&#x2F;&#x2F; I used it &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;with &lt;&#x2F;span&gt;&lt;span&gt;APIView, ReadOnlyModelViewSet and ModelViewSet
&lt;&#x2F;span&gt;&lt;span&gt;    permission_classes = [permissions.IsAuthenticatedOrReadOnly]
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2023-12-13</title>
        <published>2023-12-13T00:00:00+00:00</published>
        <updated>2023-12-13T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2023-12-13/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2023-12-13/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Wednesday, day 347 of 365 (95.06%). We&#x27;re in week 50 of 52 (96.15%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
differentiate development and production constants for the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&quot;&gt;Flutter Client&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I was able to run the Flutter Client using an emulator, after testing it a got a couple exceptions, but I was able to fix them and everything works fine now.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;Today I learned:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;How to use an emulator with flutter:&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;flutter&lt;&#x2F;span&gt;&lt;span&gt; emulators &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# to check if there are any emulators
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;flutter&lt;&#x2F;span&gt;&lt;span&gt; emulators&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; --launch&lt;&#x2F;span&gt;&lt;span&gt; emulatorID &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# to start the emulator
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;flutter&lt;&#x2F;span&gt;&lt;span&gt; run &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# the emulator should appear as a device option or flutter will automatically use it
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;That the localhost to Android devices is &lt;code&gt;10.0.2.2&lt;&#x2F;code&gt; instead of &lt;code&gt;127.0.0.1&lt;&#x2F;code&gt;, which caused the first exception I mentioned in the previous section:&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ClientException&lt;&#x2F;span&gt;&lt;span&gt; with SocketException: Connection refused (OS Error: Connection refused, errno = 111)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; address = 127.0.0.1, port = 41370, uri=http:&#x2F;&#x2F;127.0.0.1:8000.
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;Devices that use Android 12 or later have a new feature called &#x27;back button handling&#x27; and it needs to be enabled in the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;login&#x2F;android&#x2F;app&#x2F;src&#x2F;main&#x2F;AndroidManifest.xml&quot;&gt;Android Manifest&lt;&#x2F;a&gt; by adding &lt;code&gt;android:enableOnBackInvokedCallback&lt;&#x2F;code&gt; to the &lt;code&gt;&amp;lt;application&amp;gt;&lt;&#x2F;code&gt; tag, it will look something like this:&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;pre data-lang=&quot;xml&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-xml &quot;&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;application
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;android:name&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;io.flutter.app.FlutterApplication&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;android:label&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;YourAppName&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;android:icon&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;@mipmap&#x2F;ic_launcher&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;android:enableOnBackInvokedCallback&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;true&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&amp;lt;!-- ... --&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;application&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;This missing line was what caused this warning:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;W&#x2F;WindowOnBackDispatcher&lt;&#x2F;span&gt;&lt;span&gt;( 9971)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt; OnBackInvokedCallback is not enabled for the application.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;W&#x2F;WindowOnBackDispatcher&lt;&#x2F;span&gt;&lt;span&gt;( 9971)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt; Set &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;android:enableOnBackInvokedCallback=&amp;quot;true&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39; in the application manifest.
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Keep in mind that the app worked perfectly without this configuration, but when I ooked into it and discovered what it was I thought it was better to keep the app up to date.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2023-12-12</title>
        <published>2023-12-12T00:00:00+00:00</published>
        <updated>2023-12-12T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2023-12-12/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2023-12-12/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Tuesday, day 346 of 365 (94.79%). We&#x27;re in week 50 of 52 (96.15%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
differentiate development and production constants for the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&quot;&gt;Flutter Client&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I sarted trying to use the Dart plugin &lt;a href=&quot;https:&#x2F;&#x2F;pub.dev&#x2F;packages&#x2F;flutter_config&quot;&gt;flutter_config&lt;&#x2F;a&gt; to differentiate development and production constants, but I couldn&#x27;t test it. The plugin only supports Android&#x2F;iOS platofrms, which shouln&#x27;t be a problem, since I ran other apps on my phone before, but for some reason this time the notification to authorize access was not showing up. I tried restarting my phone, changing the notification settings, desabeling the USB Debugging option and enabling it again, shutting off developer mode completly and then activating it again, I also tried all the USB ports and two different cables, but none of it worked. After all this trouble, I decided to try running the app with Android Studio, but I got some weird errors that are nor appearing in VSCode.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;Today I learned about the flutter_config plugin from Dart, to use it you have to &lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;Install the plugin:&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;flutter&lt;&#x2F;span&gt;&lt;span&gt; pub add flutter_config
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;Create a &lt;code&gt;.env&lt;&#x2F;code&gt; file in root of the app and write your constants using the syntax:&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;CONST_NAME=sometext
&lt;&#x2F;span&gt;&lt;span&gt;OTHER_CONST=someothertext
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;Import the package and load the constants in &lt;code&gt;main.dart&lt;&#x2F;code&gt;:&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;pre data-lang=&quot;dart&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-dart &quot;&gt;&lt;code class=&quot;language-dart&quot; data-lang=&quot;dart&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&amp;#39;package:flutter_config&#x2F;flutter_config.dart&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;void &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;main&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;async&lt;&#x2F;span&gt;&lt;span&gt; {
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;WidgetsFlutterBinding&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;ensureInitialized&lt;&#x2F;span&gt;&lt;span&gt;();
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;await &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;FlutterConfig&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;loadEnvVariables&lt;&#x2F;span&gt;&lt;span&gt;();
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;runApp&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;MyApp&lt;&#x2F;span&gt;&lt;span&gt;());
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ol start=&quot;4&quot;&gt;
&lt;li&gt;Use the &lt;code&gt;get()&lt;&#x2F;code&gt; method to access your constants anywhere in the app (don&#x27;t forget to import the plugin if it&#x27;s in another file):&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;pre data-lang=&quot;dart&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-dart &quot;&gt;&lt;code class=&quot;language-dart&quot; data-lang=&quot;dart&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&amp;#39;package:flutter_config&#x2F;flutter_config.dart&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;FlutterConfig&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;get&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&amp;#39;CONST_NAME&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; returns &amp;#39;sometext&amp;#39;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;I didn&#x27;t get to this part yet, but to use &lt;code&gt;FlutterConfig&lt;&#x2F;code&gt; in the tests you have to load the values, this is the example in the &lt;a href=&quot;https:&#x2F;&#x2F;pub.dev&#x2F;packages&#x2F;flutter_config#:~:text=iOS%20Setup%20Guide-,Testing,-%23&quot;&gt;documentation&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;dart&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-dart &quot;&gt;&lt;code class=&quot;language-dart&quot; data-lang=&quot;dart&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&amp;#39;package:flutter_config&#x2F;flutter_config.dart&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;void &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;main&lt;&#x2F;span&gt;&lt;span&gt;() {
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;FlutterConfig&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;loadValueForTesting&lt;&#x2F;span&gt;&lt;span&gt;({&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&amp;#39;BASE_URL&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&amp;#39;https:&#x2F;&#x2F;www.mockurl.com&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;});
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;test&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&amp;#39;mock http client test&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;, () {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;final&lt;&#x2F;span&gt;&lt;span&gt; client = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;HttpClient&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;      baseUrl: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;FlutterConfig&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;get&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&amp;#39;BASE_URL&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;    );
&lt;&#x2F;span&gt;&lt;span&gt;  });
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2023-12-11</title>
        <published>2023-12-11T00:00:00+00:00</published>
        <updated>2023-12-11T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2023-12-11/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2023-12-11/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Monday, day 345 of 365 (94.52%). We&#x27;re in week 50 of 52 (96.15%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
finish &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_tutorial&quot;&gt;API&lt;&#x2F;a&gt;&#x27;s tests&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I finished the tests for the API, I wasn&#x27;t completely right when I said the problem was the POST request was not being sent correctly, it was, the problem wa I was not &#x27;saving&#x27; it before checking for the objects count. I also did some research on differentiating development and production constants for the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&quot;&gt;Flutter Client&lt;&#x2F;a&gt;, but I&#x27;m still a bit lost and will read more tomorrow.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;Today I learned to use:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span&gt;view = SnippetViewSet.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;as_view&lt;&#x2F;span&gt;&lt;span&gt;({&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&amp;lt;request&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&amp;lt;view set method&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;})
&lt;&#x2F;span&gt;&lt;span&gt;response = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;view&lt;&#x2F;span&gt;&lt;span&gt;(request)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;in my tests to save POST requests before checking anything. In DELETE and PUT requests I has to use:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span&gt;view = SnippetViewSet.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;as_view&lt;&#x2F;span&gt;&lt;span&gt;({&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&amp;lt;request&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&amp;lt;view set method&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;})
&lt;&#x2F;span&gt;&lt;span&gt;response = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;view&lt;&#x2F;span&gt;&lt;span&gt;(request, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;pk&lt;&#x2F;span&gt;&lt;span&gt;=&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;id&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;I also learned how to change multiple commit messages with:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;git&lt;&#x2F;span&gt;&lt;span&gt; rebase&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -i&lt;&#x2F;span&gt;&lt;span&gt; HEAD&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span&gt;n
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;This will show you the last &lt;code&gt;n&lt;&#x2F;code&gt; commits in the terminal, it will look something like this:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;pick&lt;&#x2F;span&gt;&lt;span&gt; f7f3f6d feat: some commit message
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;pick&lt;&#x2F;span&gt;&lt;span&gt; 310154e chore: anoter commit
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;pick&lt;&#x2F;span&gt;&lt;span&gt; a5f4a0d fix: yet another commit
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Rebase 710f0f8..a5f4a0d onto 710f0f8
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;#
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Commands:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# p, pick &amp;lt;commit&amp;gt; = use commit
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# r, reword &amp;lt;commit&amp;gt; = use commit, but edit the commit message
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# e, edit &amp;lt;commit&amp;gt; = use commit, but stop for amending
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# s, squash &amp;lt;commit&amp;gt; = use commit, but meld into previous commit
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# f, fixup &amp;lt;commit&amp;gt; = like &amp;quot;squash&amp;quot;, but discard this commit&amp;#39;s log message
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# x, exec &amp;lt;command&amp;gt; = run command (the rest of the line) using shell
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# b, break = stop here (continue rebase later with &amp;#39;git rebase --continue&amp;#39;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# d, drop &amp;lt;commit&amp;gt; = remove commit
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# l, label &amp;lt;label&amp;gt; = label current HEAD with a name
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# t, reset &amp;lt;label&amp;gt; = reset HEAD to a label
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# m, merge [-C &amp;lt;commit&amp;gt; | -c &amp;lt;commit&amp;gt;] &amp;lt;label&amp;gt; [# &amp;lt;oneline&amp;gt;]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# .       create a merge commit using the original merge commit&amp;#39;s
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# .       message (or the oneline, if no original merge commit was
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# .       specified). Use -c &amp;lt;commit&amp;gt; to reword the commit message.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;#
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# These lines can be re-ordered; they are executed from top to bottom.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;#
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# If you remove a line here THAT COMMIT WILL BE LOST.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;#
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# However, if you remove everything, the rebase will be aborted.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;#
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Note that empty commits are commented out
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Here you can go ahead and change &lt;code&gt;pick&lt;&#x2F;code&gt; to &lt;code&gt;edit&lt;&#x2F;code&gt; in the commits you want to change, then save it and exit. After that you can use:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;git&lt;&#x2F;span&gt;&lt;span&gt; commit&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; --amend
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;to edit a commit and then&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;git&lt;&#x2F;span&gt;&lt;span&gt; rebase&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; --continue
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;to go to next one masked as &lt;code&gt;edit&lt;&#x2F;code&gt;. After editiing all the commits, just use &lt;code&gt;git push --force&lt;&#x2F;code&gt; (or the alias &lt;code&gt;gpf&lt;&#x2F;code&gt;) to update the remote repository if you has already pushed them.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2023-12-08</title>
        <published>2023-12-08T00:00:00+00:00</published>
        <updated>2023-12-08T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2023-12-08/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2023-12-08/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Friday, day 342 of 365 (93.69%). We&#x27;re in week 49 of 52 (94.23%).&lt;&#x2F;p&gt;
&lt;p&gt;Today is a holiday in Bahia. &lt;a href=&quot;https:&#x2F;&#x2F;pt.wikipedia.org&#x2F;wiki&#x2F;Festa_da_Concei%C3%A7%C3%A3o_da_Praia&quot;&gt;Day of Our Lady of the Conception of the Beach&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2023-12-07</title>
        <published>2023-12-07T00:00:00+00:00</published>
        <updated>2023-12-07T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2023-12-07/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2023-12-07/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Thursday, day 341 of 365 (93.42%). We&#x27;re in week 49 of 52 (94.23%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
write tests for the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_tutorial&quot;&gt;API&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I started writing tests for the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_tutorial&#x2F;blob&#x2F;main&#x2F;tutorial&#x2F;snippets&#x2F;views.py&quot;&gt;API views&lt;&#x2F;a&gt;. I was not able to finish the tests, apparently the POST request is not geing sent correctly, but I couldn&#x27;t figure out how to check that, so I&#x27;ll finish it tomorrow.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;Today I learned about &lt;a href=&quot;https:&#x2F;&#x2F;www.django-rest-framework.org&#x2F;api-guide&#x2F;testing&#x2F;&quot;&gt;testing with Django Rest Framework&lt;&#x2F;a&gt;. I learned about the APIRequestFactory class, it has all the &lt;code&gt;.get()&lt;&#x2F;code&gt;, &lt;code&gt;.post()&lt;&#x2F;code&gt;, &lt;code&gt;.delete()&lt;&#x2F;code&gt; methods, amongst others. I also used pudb to hep debug the code.&lt;&#x2F;p&gt;
&lt;p&gt;From now on I will be pushing everythin I do to the remote repository in the end of the day, even if does not work&#x2F;ins not finished. T do that I can just add the files and commit them as &amp;quot;wip&amp;quot;, then, the next day, I undo that commit and update the remote repository like so:&lt;&#x2F;p&gt;
&lt;p&gt;To commit the files:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;git&lt;&#x2F;span&gt;&lt;span&gt; add &amp;lt;files&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;gcmsg &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;wip&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;gp
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;To undo the commit and update remote repository:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;git&lt;&#x2F;span&gt;&lt;span&gt; reset &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span&gt;HEAD
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;gpf
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Note that, &lt;code&gt;gp&lt;&#x2F;code&gt;, &lt;code&gt;gcmsg&lt;&#x2F;code&gt; and &lt;code&gt;gpf&lt;&#x2F;code&gt; are aliases of oh-my-zsh&#x27;s git plugin.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2023-12-06</title>
        <published>2023-12-06T00:00:00+00:00</published>
        <updated>2023-12-06T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2023-12-06/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2023-12-06/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Wednesday, day 340 of 365 (93.15%). We&#x27;re in week 49 of 52 (94.23%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
continue working on &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&quot;&gt;Flutter Client&lt;&#x2F;a&gt;&#x27;s login page&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I continued working on the login topic by trying to make the token authentication work on the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_tutorial&quot;&gt;API&lt;&#x2F;a&gt;, but I had a hard time making progress. When I tried to make the post request:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;http&lt;&#x2F;span&gt;&lt;span&gt; POST :8000&#x2F;snippets&#x2F; &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Authorization: Token &amp;lt;token&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; code=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;print(123)&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;I got:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;HTTP&#x2F;1.1&lt;&#x2F;span&gt;&lt;span&gt; 403 Forbidden
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Allow:&lt;&#x2F;span&gt;&lt;span&gt; GET, POST, HEAD, OPTIONS
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Content-Length:&lt;&#x2F;span&gt;&lt;span&gt; 58
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Content-Type:&lt;&#x2F;span&gt;&lt;span&gt; application&#x2F;json
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Cross-Origin-Opener-Policy:&lt;&#x2F;span&gt;&lt;span&gt; same-origin
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Date:&lt;&#x2F;span&gt;&lt;span&gt; Wed, 06 Dec 2023 14:14:53 GMT
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Referrer-Policy:&lt;&#x2F;span&gt;&lt;span&gt; same-origin
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Server:&lt;&#x2F;span&gt;&lt;span&gt; WSGIServer&#x2F;0.2 CPython&#x2F;3.11.5
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Vary:&lt;&#x2F;span&gt;&lt;span&gt; Accept, Cookie
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;X-Content-Type-Options:&lt;&#x2F;span&gt;&lt;span&gt; nosniff
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;X-Frame-Options:&lt;&#x2F;span&gt;&lt;span&gt; DENY
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;detail&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Authentication credentials were not provided.&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;So it looked like httpie was not recognizing the authentication header, and I didn&#x27;t know why yet. I asked Mauricio for help and he found that, besides &lt;code&gt;INSTALLED_APPS&lt;&#x2F;code&gt;, we should also update the &lt;code&gt;REST_FRAMEWORK&lt;&#x2F;code&gt; in the settings file, so they now look like this:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;INSTALLED_APPS &lt;&#x2F;span&gt;&lt;span&gt;= [
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;...
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;rest_framework.authtoken&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;...
&lt;&#x2F;span&gt;&lt;span&gt;]
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;REST_FRAMEWORK &lt;&#x2F;span&gt;&lt;span&gt;= {
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;DEFAULT_AUTHENTICATION_CLASSES&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;: [
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;rest_framework.authentication.TokenAuthentication&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;,
&lt;&#x2F;span&gt;&lt;span&gt;    ],
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;...
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2023-12-05</title>
        <published>2023-12-05T00:00:00+00:00</published>
        <updated>2023-12-05T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2023-12-05/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2023-12-05/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Tuesday, day 339 of 365 (92.87%). We&#x27;re in week 49 of 52 (94.23%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
differentiate development and production constants in &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&quot;&gt;Flutter Client&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
continue working on &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&quot;&gt;Flutter Client&lt;&#x2F;a&gt;&#x27;s login page&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I worked I didn&#x27;t work on the login page itself, but I progressed on the topic by working on the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_tutorial&quot;&gt;API&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;Today I learned about authentication with the the &lt;a href=&quot;https:&#x2F;&#x2F;www.django-rest-framework.org&#x2F;&quot;&gt;Django Rest Framework&lt;&#x2F;a&gt; and added a token authentication endpoint to the API using the &lt;a href=&quot;https:&#x2F;&#x2F;www.django-rest-framework.org&#x2F;api-guide&#x2F;authentication&#x2F;#by-exposing-an-api-endpoint&quot;&gt;&lt;code&gt;obtain_auth_token&lt;&#x2F;code&gt; view&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;I&#x27;m using &lt;a href=&quot;https:&#x2F;&#x2F;httpie.io&#x2F;&quot;&gt;httpie&lt;&#x2F;a&gt; and to generate a token you just have to post to the endpoint, in my case &lt;code&gt;auth-token&#x2F;&lt;&#x2F;code&gt;, with the username and password of the user like so:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;http&lt;&#x2F;span&gt;&lt;span&gt; POST :8000&#x2F;auth-token&#x2F; password=&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;password&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39; username=&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;username&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;I am still having some trouble figuring out how to really use the token as an authenticator, but accordingly to the &lt;a href=&quot;https:&#x2F;&#x2F;httpie.io&#x2F;docs&#x2F;cli&#x2F;authentication&quot;&gt;httpie documentation&lt;&#x2F;a&gt; it should look something like this:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;http -A&lt;&#x2F;span&gt;&lt;span&gt; bearer&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -a&lt;&#x2F;span&gt;&lt;span&gt; 448b01551721565eaa5f0aff2e33c206ce571c5a :8000&#x2F;snippets&#x2F; code=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;print(123)&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;I also found a few websites (like &lt;a href=&quot;https:&#x2F;&#x2F;simpleisbetterthancomplex.com&#x2F;tutorial&#x2F;2018&#x2F;11&#x2F;22&#x2F;how-to-implement-token-authentication-using-django-rest-framework.html&quot;&gt;this one&lt;&#x2F;a&gt;) saying that I should use something like this:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;http&lt;&#x2F;span&gt;&lt;span&gt; :8000&#x2F;endpoint&#x2F; &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Authorization: Token 9054f7aa9305e012b3c2300408c3dfdf390fcddf&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;but I couldn&#x27;t make it work for POST requests.&lt;&#x2F;p&gt;
&lt;p&gt;To authenticate with the username and password (&lt;a href=&quot;https:&#x2F;&#x2F;httpie.io&#x2F;docs&#x2F;cli&#x2F;basic-auth&quot;&gt;basic authetication&lt;&#x2F;a&gt;) we use this:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;http -a&lt;&#x2F;span&gt;&lt;span&gt; username:password :8000&#x2F;snippets&#x2F; code=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;print(123)&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2023-12-04</title>
        <published>2023-12-04T00:00:00+00:00</published>
        <updated>2023-12-04T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2023-12-04/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2023-12-04/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Monday, day 338 of 365 (92.60%). We&#x27;re in week 49 of 52 (94.23%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
fix PATH with &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;ansible-debian&quot;&gt;ansible-debian&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
learn about google login in Flutter and implement login to the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&quot;&gt;Flutter Client&lt;&#x2F;a&gt; using &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Test-driven_development#:~:text=Test%2Ddriven%20development%20(TDD),software%20against%20all%20test%20cases.&quot;&gt;TDD&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I fixed PATH with ansible-debian, at some point in the past I accidentaly removed &lt;code&gt;bin&lt;&#x2F;code&gt; from it, so I tried to update &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;ansible-debian&#x2F;blob&#x2F;main&#x2F;playbooks&#x2F;dotfiles&#x2F;.zshrc&quot;&gt;.zshrc&lt;&#x2F;a&gt; and run the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;ansible-debian&#x2F;blob&#x2F;main&#x2F;playbooks&#x2F;shell.yaml&quot;&gt;shell playbook&lt;&#x2F;a&gt; but it was not updating the &lt;code&gt;~&#x2F;.zshrc&lt;&#x2F;code&gt; file. Me and Mauricio digured out it was because of the script used &lt;code&gt;sudo&lt;&#x2F;code&gt;, so it was in the root and not the user. To fix it I &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;ansible-debian&#x2F;commit&#x2F;312c6ca5fa525c1d3bee2cffc4010a0e808206f4&quot;&gt;moved the &lt;code&gt;become: true&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; so that it is not used when installing dotfiles.&lt;&#x2F;p&gt;
&lt;p&gt;After fixing ansible-debian, I started taking a look at login with Flutter. Using google to login seemed to advanced, so Mauricio and I agreed that it&#x27;s better to take a look at the basics first, and then move on to that later. We also gave up on using TDD for now, maybe when I am more familiar with testing and Flutter itself I can go back to trying it. As for the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;login&#x2F;lib&#x2F;login.dart&quot;&gt;login page&lt;&#x2F;a&gt; it only does some form validation for now, I&#x27;ll start on the username&#x2F;password authentication tomorrow.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;After running &lt;code&gt;make dotfile&lt;&#x2F;code&gt; and &lt;code&gt;source ~&#x2F;.zshrc&lt;&#x2F;code&gt; to update the PATH I got an error message from oh-my-zsh:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;error: cannot open .git&#x2F;FETCH_HEAD: Permission denied
&lt;&#x2F;span&gt;&lt;span&gt;There was an error updating. Try again later?
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Taking a better look at the &lt;code&gt;.git&#x2F;FETCH_HEAD&lt;&#x2F;code&gt; file in the &lt;code&gt;.oh-my-zsh&lt;&#x2F;code&gt; repository we saw that the owner was marked as root:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;➜  .oh-my-zsh git:(master) ll .git&#x2F;FETCH_HEAD
&lt;&#x2F;span&gt;&lt;span&gt;-rw-r--r-- 1 root root 103 Oct  4 08:12 .git&#x2F;FETCH_HEAD
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;So we used the following to change that:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;➜  .oh-my-zsh git:(master) sudo chown -R omnicoder.omnicoder .git&#x2F;*
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2023-12-01</title>
        <published>2023-12-01T00:00:00+00:00</published>
        <updated>2023-12-01T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2023-12-01/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2023-12-01/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Friday, day 335 of 365 (91.78%). We&#x27;re in week 48 of 52 (92.30%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
finish unit tests for the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&quot;&gt;Flutter Client&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I was finally able to finish the tests. I didn&#x27;t have to switch back to nock. I just had to implement a few more things from &lt;a href=&quot;https:&#x2F;&#x2F;pub.dev&#x2F;packages&#x2F;mockito&quot;&gt;mockito&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;I also did some rearranging in the project&#x27;s structure and renamed a few things based on Clean Code.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;Today I learned that to make mockito work I had to use the &lt;code&gt;@GenerateNiceMocks&lt;&#x2F;code&gt; annotation to tell mockito which classes to mock and Dart&#x27;s &lt;a href=&quot;https:&#x2F;&#x2F;pub.dev&#x2F;packages&#x2F;build_runner&quot;&gt;build runner&lt;&#x2F;a&gt; to generate a .mock.dart file. In the end, the code looks kinda like this:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;dart&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-dart &quot;&gt;&lt;code class=&quot;language-dart&quot; data-lang=&quot;dart&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;@GenerateNiceMocks&lt;&#x2F;span&gt;&lt;span&gt;([&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;MockSpec&lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;ClassName&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;()])
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&amp;#39;file_name_test.mocks.dart&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;and after adding that you have to run:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;dart run build_runner build&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;to generate file_name_test.mocks.dart.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2023-11-30</title>
        <published>2023-11-30T00:00:00+00:00</published>
        <updated>2023-11-30T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2023-11-30/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2023-11-30/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Thursday, day 334 of 365 (91.50%). We&#x27;re in week 48 of 52 (92.30%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
finish unit tests for the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&quot;&gt;Flutter Client&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I worked on the tests all morning, but I am still having issues with &lt;a href=&quot;https:&#x2F;&#x2F;pub.dev&#x2F;packages&#x2F;mockito&quot;&gt;mockito&lt;&#x2F;a&gt;. I even asked Chat GPT for help, but it didn&#x27;t help me, so I&#x27;m going to try to go back to &lt;a href=&quot;https:&#x2F;&#x2F;pub.dev&#x2F;packages&#x2F;nock&quot;&gt;nock&lt;&#x2F;a&gt;, but using what I learned this past couple days.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;Today I learned more about mockito, more specifically about the &lt;code&gt;thenReturn()&lt;&#x2F;code&gt; and &lt;code&gt;thenAnswer()&lt;&#x2F;code&gt; methods and when to use each one. I also read about Dart&#x27;s &lt;a href=&quot;https:&#x2F;&#x2F;pub.dev&#x2F;packages&#x2F;build_runner&quot;&gt;build runner&lt;&#x2F;a&gt;, which I thought would solve the problem, but it did not.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2023-11-29</title>
        <published>2023-11-29T00:00:00+00:00</published>
        <updated>2023-11-29T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2023-11-29/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2023-11-29/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Wednesday, day 333 of 365 (91.23%). We&#x27;re in week 48 of 52 (92.30%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
finish unit tests for the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&quot;&gt;Flutter Client&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I almost finished the unit tests, I was able to rewrite the constructors in &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;test&#x2F;mockito&#x2F;lib&#x2F;main.dart&quot;&gt;main.dart&lt;&#x2F;a&gt;, but now I&#x27;m getting a strange error with mockito. I also did some pair programming with Mauricio.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;Today I learned about &lt;a href=&quot;https:&#x2F;&#x2F;www.docker.com&#x2F;&quot;&gt;Docker&lt;&#x2F;a&gt; and how it helps build and run applications.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2023-11-28</title>
        <published>2023-11-28T00:00:00+00:00</published>
        <updated>2023-11-28T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2023-11-28/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2023-11-28/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Tuesday, day 332 of 365 (90.95%). We&#x27;re in week 48 of 52 (92.30%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
work on unit tests for the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&quot;&gt;Flutter Client&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today Mauricio helped me progress in the unit tests problem, I was not able to finish them, but I did some good progress. We changed from, nock to &lt;a href=&quot;https:&#x2F;&#x2F;pub.dev&#x2F;packages&#x2F;mockito&#x2F;install&quot;&gt;mockito&lt;&#x2F;a&gt; and I am now using &lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;flutter-community&#x2F;dependency-injection-in-flutter-f19fb66a0740&quot;&gt;dependency injection&lt;&#x2F;a&gt; to rewrite the constructor in &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;test&#x2F;mockito&#x2F;lib&#x2F;main.dart&quot;&gt;main.dart&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;Today I learned about mockito, which is another dart mock generator, &lt;a href=&quot;https:&#x2F;&#x2F;flutterbyexample.com&#x2F;lesson&#x2F;function-arguments-default-optional-named&quot;&gt;named parameters&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;dart.dev&#x2F;tools&#x2F;diagnostic-messages?utm_source=dartdev&amp;amp;utm_medium=redir&amp;amp;utm_id=diagcode&amp;amp;utm_content=static_access_to_instance_member#static_access_to_instance_member&quot;&gt;static access&lt;&#x2F;a&gt; and how they work in Flutter.&lt;&#x2F;p&gt;
&lt;p&gt;I also did some readings on classes, methods and variables naming.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;readings&quot;&gt;Readings&lt;&#x2F;h2&gt;
&lt;ol&gt;
&lt;li&gt;https:&#x2F;&#x2F;thecoderoad.blog&#x2F;2020&#x2F;03&#x2F;29&#x2F;clean-code-naming-conventions&#x2F;&lt;&#x2F;li&gt;
&lt;li&gt;https:&#x2F;&#x2F;cleancoders.com&#x2F;episode&#x2F;clean-code-episode-2&lt;&#x2F;li&gt;
&lt;li&gt;https:&#x2F;&#x2F;dzone.com&#x2F;articles&#x2F;naming-conventions-from-uncle-bobs-clean-code-phil&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2023-11-27</title>
        <published>2023-11-27T00:00:00+00:00</published>
        <updated>2023-11-27T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2023-11-27/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2023-11-27/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Monday, day 331 of 365 (90.68%). We&#x27;re in week 48 of 52 (92.30%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
work on unit tests for the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&quot;&gt;Flutter Client&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
do pair programming with Mauricio for a Omnicode client&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I did a little bit of work in the unit tests, but was not able to advance much. &lt;&#x2F;p&gt;
&lt;p&gt;I spent most of the morning helping Mauricio do some end-to-end tests with &lt;a href=&quot;https:&#x2F;&#x2F;playwright.dev&#x2F;docs&#x2F;getting-started-vscode&quot;&gt;VSCode&#x27;s Playwright&lt;&#x2F;a&gt; for an Omnicode&#x27;s project.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;Today I leaned about VSCode&#x27;s Playwright and how it can make writing tests easier by allowing you to record actions on your application, find elements, and much more.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2023-11-24</title>
        <published>2023-11-24T00:00:00+00:00</published>
        <updated>2023-11-24T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2023-11-24/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2023-11-24/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Friday, day 328 of 365 (89.86%). We&#x27;re in week 47 of 52 (90.38%).&lt;&#x2F;p&gt;
&lt;p&gt;Paid time off&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2023-11-23</title>
        <published>2023-11-23T00:00:00+00:00</published>
        <updated>2023-11-23T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2023-11-23/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2023-11-23/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Thursday, day 327 of 365 (89.58%). We&#x27;re in week 47 of 52 (90.38%).&lt;&#x2F;p&gt;
&lt;p&gt;Sick day&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2023-11-22</title>
        <published>2023-11-22T00:00:00+00:00</published>
        <updated>2023-11-22T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2023-11-22/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2023-11-22/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Wednesday, day 326 of 365 (89.31%). We&#x27;re in week 47 of 52 (90.38%).&lt;&#x2F;p&gt;
&lt;p&gt;Sick day&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2023-11-21</title>
        <published>2023-11-21T00:00:00+00:00</published>
        <updated>2023-11-21T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2023-11-21/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2023-11-21/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Tuesday, day 325 of 365 (89.04%). We&#x27;re in week 47 of 52 (90.38%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
work on unit tests for the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&quot;&gt;Flutter Client&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today was a short morning, we had a problem with the internet so I had to come back home to work. I was not able to finish the unit tests, bt I did advance a little.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;Mauricio helped me realize that the problem was probably with &lt;a href=&quot;https:&#x2F;&#x2F;pub.dev&#x2F;packages&#x2F;nock&quot;&gt;nock&lt;&#x2F;a&gt;, so I read a little bit more about that. Now, the mock is apparently being created successfully, but it still does not work. My guess is the requests made from &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;blob&#x2F;main&#x2F;lib&#x2F;main.dart&quot;&gt;main.dart&lt;&#x2F;a&gt; are not actually using the mock, but I haven&#x27;t figured out how to fix that yet.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2023-11-20</title>
        <published>2023-11-20T00:00:00+00:00</published>
        <updated>2023-11-20T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2023-11-20/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2023-11-20/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Monday, day 324 of 365 (88.76%). We&#x27;re in week 47 of 52 (90.38%).&lt;&#x2F;p&gt;
&lt;p&gt;Sick day&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2023-11-17</title>
        <published>2023-11-17T00:00:00+00:00</published>
        <updated>2023-11-17T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2023-11-17/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2023-11-17/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Friday, day 321 of 365 (87.94%). We&#x27;re in week 46 of 52 (88.46%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
finish unit tests for the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&quot;&gt;Flutter Client&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
work on &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;issues&#x2F;1&quot;&gt;issue#1&lt;&#x2F;a&gt; from &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&quot;&gt;Flutter Client&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I still had troubles with the unit tests, I thought the problem had something to do with the &lt;a href=&quot;https:&#x2F;&#x2F;api.flutter.dev&#x2F;flutter&#x2F;widgets&#x2F;FutureBuilder-class.html&quot;&gt;Future Builder&lt;&#x2F;a&gt; so I tried to fix it in that direction. I did find some things, but I was not able to implement them correctly, so the tests are still wrong.&lt;&#x2F;p&gt;
&lt;p&gt;I was not getting anywhere so I stopped for a while and learned a bit of Ruby with Mauricio.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;Today I learned about Flutter&#x27;s &lt;a href=&quot;https:&#x2F;&#x2F;api.flutter.dev&#x2F;flutter&#x2F;dart-async&#x2F;Completer-class.html?gclid=CjwKCAiAu9yqBhBmEiwAHTx5p1ga2pnPKYLDpko9prXWVUporG4RoXFIrDLCm2JAdKNYKPsCxTYaFRoCYfQQAvD_BwE&amp;amp;gclsrc=aw.ds&quot;&gt;Completer class&lt;&#x2F;a&gt; that can be used to create Future objects and resolve (complete) them later.&lt;&#x2F;p&gt;
&lt;p&gt;I laso learned about the SOLID Principles (see &lt;a href=&quot;https:&#x2F;&#x2F;omnicode.com.br&#x2F;blog&#x2F;posts&#x2F;2023-11-17&#x2F;#readings&quot;&gt;Readings&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;readings&quot;&gt;Readings&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.digitalocean.com&#x2F;community&#x2F;conceptual-articles&#x2F;s-o-l-i-d-the-first-five-principles-of-object-oriented-design#interface-segregation-principle&quot;&gt;SOLID: The First 5 Principles of Object Oriented Design&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.topcoder.com&#x2F;thrive&#x2F;articles&#x2F;solid-principles-in-dart&quot;&gt;SOLID PRINCIPLES IN DART&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2023-11-16</title>
        <published>2023-11-16T00:00:00+00:00</published>
        <updated>2023-11-16T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2023-11-16/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2023-11-16/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Thursday, day 320 of 365 (87.67%). We&#x27;re in week 46 of 52 (88.46%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
finish unit tests for the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&quot;&gt;Flutter Client&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
work on &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;issues&#x2F;1&quot;&gt;issue#1&lt;&#x2F;a&gt; from &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&quot;&gt;Flutter Client&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I dedicated the whole morning to try finishing the unit tests but I am still having some trouble with it, however I have found the issue and hope to fix it tomorrow, I believe I am trying to find something that has not yet been created, since the app uses a &lt;a href=&quot;https:&#x2F;&#x2F;api.flutter.dev&#x2F;flutter&#x2F;widgets&#x2F;FutureBuilder-class.html&quot;&gt;Future builder&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;Today I learned Dart&#x27;s library &lt;a href=&quot;https:&#x2F;&#x2F;pub.dev&#x2F;packages&#x2F;nock&quot;&gt;nock&lt;&#x2F;a&gt;, which is used for test modules that perform http requests, since those requests should not actually be made during tests.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2023-11-15</title>
        <published>2023-11-15T00:00:00+00:00</published>
        <updated>2023-11-15T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2023-11-15/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2023-11-15/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Wednesday, day 319 of 365 (87.39%). We&#x27;re in week 46 of 52 (88.46%).&lt;&#x2F;p&gt;
&lt;p&gt;Today is a Brazilian holiday. &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Proclamation_of_the_Republic_(Brazil)&quot;&gt;Proclamation of the Republic day&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2023-11-14</title>
        <published>2023-11-14T00:00:00+00:00</published>
        <updated>2023-11-14T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2023-11-14/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2023-11-14/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Tuesday, day 318 of 365 (87.12%). We&#x27;re in week 46 of 52 (88.46%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
close &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;issues&#x2F;5&quot;&gt;issue#5&lt;&#x2F;a&gt; from &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&quot;&gt;Flutter Client&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
close &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;issues&#x2F;1&quot;&gt;issue#1&lt;&#x2F;a&gt; from &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&quot;&gt;Flutter Client&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I was able to make the gh-actions run properly in the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&quot;&gt;Flutter Client&lt;&#x2F;a&gt;, I did not work on the login page from &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;issues&#x2F;1&quot;&gt;issue#1&lt;&#x2F;a&gt;, instead I decided to make unit tests for the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;pull&#x2F;3&quot;&gt;dropdowns&lt;&#x2F;a&gt;. &lt;&#x2F;p&gt;
&lt;p&gt;I also worked on a page for a Omnicode&#x27;s client.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;Today, while trying to fix the gh-action problem, I learned more about the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;actions&#x2F;checkout&quot;&gt;checkout action&lt;&#x2F;a&gt; and realized that was what I was missing. &lt;&#x2F;p&gt;
&lt;p&gt;I am having some troubles making the unit tests, because I need to access &lt;code&gt;MyApp()&lt;&#x2F;code&gt;&#x27;s state to be able to check the information, but that is turning out to be a bit of a hastle. While trying to figure it out I learned about the &lt;a href=&quot;https:&#x2F;&#x2F;api.flutter.dev&#x2F;flutter&#x2F;flutter_test&#x2F;WidgetTester-class.html&quot;&gt;WidgetTester class&lt;&#x2F;a&gt; that can be used to load a widget tree besides providing quite a few usefull methods. I also read about how to &lt;a href=&quot;https:&#x2F;&#x2F;docs.flutter.dev&#x2F;cookbook&#x2F;testing&#x2F;widget&#x2F;finders?gclid=CjwKCAiA0syqBhBxEiwAeNx9NxjUu3MhK9VXjtqEtKduUQx_UU0Z80fKA7ctsXimzKoSUITd5gPRLxoCp2UQAvD_BwE&amp;amp;gclsrc=aw.ds&quot;&gt;Find widgets&lt;&#x2F;a&gt; using finders.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;readings&quot;&gt;Readings&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;flutter-community&#x2F;dependency-injection-in-flutter-f19fb66a0740&quot;&gt;Dependency Injection In Flutter&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2023-11-13</title>
        <published>2023-11-13T00:00:00+00:00</published>
        <updated>2023-11-13T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2023-11-13/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2023-11-13/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Monday, day 317 of 365 (86.84%). We&#x27;re in week 46 of 52 (88.46%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
close &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;blog&#x2F;issues&#x2F;29&quot;&gt;issue#29&lt;&#x2F;a&gt; from &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;blog&quot;&gt;Worklog&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
close &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;issues&#x2F;5&quot;&gt;issue#5&lt;&#x2F;a&gt; from &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&quot;&gt;Flutter Client&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
close &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_tutorial&#x2F;issues&#x2F;15&quot;&gt;issue#15&lt;&#x2F;a&gt; from &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_tutorial&quot;&gt;DRF Tutorial&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I worked on the three issues from the planning, but was not able to close the last one, I&#x27;m having troubles running flutter commands, I&#x27;ve tried using different flutter versions, stable channer and set a working directory, but nothing worked.&lt;&#x2F;p&gt;
&lt;p&gt;I also did some tidying up in the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&quot;&gt;Flutter Client&lt;&#x2F;a&gt; (see Readings)&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;Today I learned about &lt;code&gt;extra_args&lt;&#x2F;code&gt; argument while making the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_tutorial&#x2F;blob&#x2F;gh-actions&#x2F;.github&#x2F;workflows&#x2F;main.yml&quot;&gt;main.yml&lt;&#x2F;a&gt; to close &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_tutorial&#x2F;issues&#x2F;15&quot;&gt;issue#15&lt;&#x2F;a&gt;, it allowed me to pass &lt;code&gt;black --all-files&lt;&#x2F;code&gt; to pre-commit so that it would use the black linter in the whole project.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;readings&quot;&gt;Readings&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.codemagic.io&#x2F;rest-api-in-flutter&#x2F;&quot;&gt;Working with REST APIs — Flutter&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2023-11-10</title>
        <published>2023-11-10T00:00:00+00:00</published>
        <updated>2023-11-10T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2023-11-10/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2023-11-10/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Friday, day 314 of 365 (86.02%). We&#x27;re in week 45 of 52 (86.53%).&lt;&#x2F;p&gt;
&lt;p&gt;Sick day&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2023-11-09</title>
        <published>2023-11-09T00:00:00+00:00</published>
        <updated>2023-11-09T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2023-11-09/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2023-11-09/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Thursday, day 313 of 365 (85.75%). We&#x27;re in week 45 of 52 (86.53%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;h3 id=&quot;snippets-client&quot;&gt;snippets Client&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
Work on the flutter client&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
Create github actions yaml&lt;&#x2F;li&gt;
&lt;li&gt;[] Implement unit tests&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;snippets-api&quot;&gt;snippets API&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
Create github actions yaml&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
Add pre-commit default actions and black linter to github actions&lt;&#x2F;li&gt;
&lt;li&gt;[] Implement unit tests&lt;&#x2F;li&gt;
&lt;li&gt;[] Add unit tests to github actions&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I I added two dropdowns with the style and language options to the Flutter client and added pre-commit basic configuration and the github-actions folder to it. I also added the gh-actions folder to the API.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;Today I learned about the &lt;a href=&quot;https:&#x2F;&#x2F;api.flutter.dev&#x2F;flutter&#x2F;material&#x2F;DropdownButton-class.html?v=1.0.22&amp;amp;gclid=Cj0KCQiAo7KqBhDhARIsAKhZ4uj_sxFdzwUVYsPfwzXsSkOBewspfYZ8JSd050ACIO-fINXfmvFo1SwaAkkOEALw_wcB&amp;amp;gclsrc=aw.ds&quot;&gt;DropdownButton class&lt;&#x2F;a&gt; which allowed me to create the dropdowns with the language and style options from the API and feel like I&#x27;m getting better at handling Flutter&#x27;s types, when I got any errors about that I was able to fix it easily.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;readings&quot;&gt;Readings&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.section.io&#x2F;engineering-education&#x2F;consuming-apis-in-flutter&#x2F;&quot;&gt;Consuming APIs in Flutter&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.linkedin.com&#x2F;pulse&#x2F;flutter-api-call-best-practices-building-efficient-reliable-saini&quot;&gt;Flutter API Call Best Practices: Building Efficient and Reliable Mobile Apps&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2023-11-08</title>
        <published>2023-11-08T00:00:00+00:00</published>
        <updated>2023-11-08T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2023-11-08/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2023-11-08/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Wednesday, day 312 of 365 (85.47%). We&#x27;re in week 45 of 52 (86.53%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
learn about CSS&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I learned about &lt;a href=&quot;https:&#x2F;&#x2F;tailwindcss.com&#x2F;&quot;&gt;Tailwind CSS framework&lt;&#x2F;a&gt; and worked on a page for a Omnicode&#x27;s client.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;Today I learned about how Tailwind uses the class in html divs to apply css properties. The hardest part was making the background right, so I read about &lt;a href=&quot;https:&#x2F;&#x2F;tailwindcss.com&#x2F;docs&#x2F;background-attachment&quot;&gt;backgound attachment&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;tailwindcss.com&#x2F;docs&#x2F;background-color&quot;&gt;background color&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;tailwindcss.com&#x2F;docs&#x2F;background-position&quot;&gt;background position&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;tailwindcss.com&#x2F;docs&#x2F;background-size&quot;&gt;background size&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;tailwindcss.com&#x2F;docs&#x2F;background-image&quot;&gt;background image&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2023-11-07</title>
        <published>2023-11-07T00:00:00+00:00</published>
        <updated>2023-11-07T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2023-11-07/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2023-11-07/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Tuesday, day 311 of 365 (85.20%). We&#x27;re in week 45 of 52 (86.53%). &lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today: &lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_flutter_client&#x2F;&quot;&gt;start Flutter client&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I started a Flutter client for the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_tutorial&quot;&gt;DRF API&lt;&#x2F;a&gt; I created yesterday. For now, it just returns all the attributes of a snippet. While I was thinking about how to do the rest of the client it occured to me that I didn&#x27;t have access to all of the languages and styles from the API, so I asked Maurício and he said to create an endpoint with that information.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;Making the endpoint I mentioned in the previous section was quite tricky and it took me some time and help to realize it was way more simple than what I was trying because:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;there was no need for a options serializer;&lt;&#x2F;li&gt;
&lt;li&gt;there was no need for a options model.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;In order to finish it I used the &lt;a href=&quot;https:&#x2F;&#x2F;www.django-rest-framework.org&#x2F;api-guide&#x2F;views&#x2F;&quot;&gt;APIView&lt;&#x2F;a&gt; to create a OptionsView class that returns a map of the languages and style choices determined in the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_tutorial&#x2F;blob&#x2F;main&#x2F;tutorial&#x2F;snippets&#x2F;models.py&quot;&gt;models.py&lt;&#x2F;a&gt; file. Lastly, I added a new path to the urlpatterns in &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_tutorial&#x2F;blob&#x2F;main&#x2F;tutorial&#x2F;snippets&#x2F;urls.py&quot;&gt;urls.py&lt;&#x2F;a&gt; that links to the view.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2023-11-06</title>
        <published>2023-11-06T00:00:00+00:00</published>
        <updated>2023-11-06T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2023-11-06/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2023-11-06/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Monday, day 310 of 365 (84.93%). We&#x27;re in week 45 of 52 (86.53%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;encode&#x2F;django-rest-framework&#x2F;tree&#x2F;master&#x2F;docs&#x2F;tutorial&quot;&gt;finish DRF tutorial&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I finished the DRF tutorial and started working a bit more on the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_tutorial&quot;&gt;repository&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;Today I learned about &lt;a href=&quot;https:&#x2F;&#x2F;www.geeksforgeeks.org&#x2F;json-load-in-python&#x2F;&quot;&gt;.json files&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;docs.djangoproject.com&#x2F;en&#x2F;4.2&#x2F;topics&#x2F;db&#x2F;fixtures&#x2F;&quot;&gt;fixtures in Django&lt;&#x2F;a&gt;, in my case I used these concepts to create the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_tutorial&#x2F;blob&#x2F;main&#x2F;tutorial&#x2F;snippets&#x2F;fixtures&#x2F;users.json&quot;&gt;users.json&lt;&#x2F;a&gt; file to create some initial users for the API, I also had to make a &lt;a href=&quot;https:&#x2F;&#x2F;docs.djangoproject.com&#x2F;en&#x2F;4.2&#x2F;topics&#x2F;migrations&#x2F;#data-migrations&quot;&gt;migration&lt;&#x2F;a&gt; to actually save the users previously mentioned to the data base and create and save a superuser (whose details are defined in the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_tutorial&#x2F;blob&#x2F;main&#x2F;tutorial&#x2F;tutorial&#x2F;settings.py&quot;&gt;project settings.py file&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
&lt;p&gt;While trying to make the new migration, I had some issues with reading the users.json file so I used &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;inducer&#x2F;pudb&quot;&gt;pudb&lt;&#x2F;a&gt; to debug it and found out that there were actually 2 users.json files and the second one was useless, so all I had to do was delete it and correct the path for the right one and it worked.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2023-11-03</title>
        <published>2023-11-03T00:00:00+00:00</published>
        <updated>2023-11-03T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2023-11-03/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2023-11-03/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Friday, day 307 of 365 (84.10%). We&#x27;re in week 44 of 52 (84.61%). &lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today: &lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;encode&#x2F;django-rest-framework&#x2F;tree&#x2F;master&#x2F;docs&#x2F;tutorial&quot;&gt;continue DRF tutorial&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I finished the parts 1 through 4 of the DRF tutorial, you can check the code &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;luisa_drf_tutorial&quot;&gt;here&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;Today I learned a lot about DRF, first I learned about &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;encode&#x2F;django-rest-framework&#x2F;blob&#x2F;master&#x2F;docs&#x2F;tutorial&#x2F;1-serialization.md&quot;&gt;serializers&lt;&#x2F;a&gt; and how to use them to create and update snippets. I also saw how to use the ModelSerializer class to keep the code more concise.&lt;&#x2F;p&gt;
&lt;p&gt;In &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;encode&#x2F;django-rest-framework&#x2F;blob&#x2F;master&#x2F;docs&#x2F;tutorial&#x2F;2-requests-and-responses.md&quot;&gt;part 2&lt;&#x2F;a&gt; of the tutorial I learned how to use more explicit status codes, the Request object instead of the HttpRequest object to handle methods other than POST and the Response object to render responses into the correct type. This helps with error handling and making the code more concise and readable.&lt;&#x2F;p&gt;
&lt;p&gt;In the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;encode&#x2F;django-rest-framework&#x2F;blob&#x2F;master&#x2F;docs&#x2F;tutorial&#x2F;3-class-based-views.md&quot;&gt;next part&lt;&#x2F;a&gt; I rewrote the API views using class-based views and mixins and, alter on, generic class-based views, which shrank the code a lot.&lt;&#x2F;p&gt;
&lt;p&gt;In the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;encode&#x2F;django-rest-framework&#x2F;blob&#x2F;master&#x2F;docs&#x2F;tutorial&#x2F;4-authentication-and-permissions.md&quot;&gt;last part&lt;&#x2F;a&gt; I did today, I learned about permissions and authetication. I added a User model to track snippet&#x27;s owner so that only it can modify&#x2F;delete while other users have read only permission, which dependsa on adding login, so that we can have actual users and know who is trying to read&#x2F;edit the snippet.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2023-11-02</title>
        <published>2023-11-02T00:00:00+00:00</published>
        <updated>2023-11-02T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2023-11-02/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2023-11-02/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Thurday, day 306 of 365 (83.83%). We&#x27;re in week 44 of 52 (84.61%).&lt;&#x2F;p&gt;
&lt;p&gt;Today is a Brazilian holiday. &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;All_Souls%27_Day&quot;&gt;All Souls&#x27; Day&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2023-11-01</title>
        <published>2023-11-01T00:00:00+00:00</published>
        <updated>2023-11-01T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2023-11-01/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2023-11-01/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Wednesday, day 305 of 365 (83.56%). We&#x27;re in week 44 of 52 (84.61%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today: &lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;www.django-rest-framework.org&#x2F;&quot;&gt;make Django Rest Framework (DRF) tutorial&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I did the &lt;a href=&quot;https:&#x2F;&#x2F;www.django-rest-framework.org&#x2F;tutorial&#x2F;quickstart&#x2F;&quot;&gt;Quickstart&lt;&#x2F;a&gt; part of the DRF tutorial, but I wasn&#x27;t able to go further in the exercise because the pages wouldn&#x27;t load.&lt;&#x2F;p&gt;
&lt;p&gt;I did some pre-programming with Maurício on a real world Django application.&lt;&#x2F;p&gt;
&lt;p&gt;I also studied a little about &lt;a href=&quot;https:&#x2F;&#x2F;pub.dev&#x2F;packages&#x2F;google_sign_in&quot;&gt;google_sign_in Flutter plugin&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;Today I learned about APIs and a little of how to use Django to create one.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2023-10-31</title>
        <published>2023-10-31T00:00:00+00:00</published>
        <updated>2023-10-31T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2023-10-31/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2023-10-31/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Tuesday, day 304 of 365 (83.28%). We&#x27;re in week 44 of 52 (84.61%). &lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today: &lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
send a pull request for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nisrulz&#x2F;flutter-examples&#x2F;issues&#x2F;95&quot;&gt;flutter-examples#issue95&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
send a pull request for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nisrulz&#x2F;flutter-examples&#x2F;issues&#x2F;22&quot;&gt;flutter-examples#issue22&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I edited the README for the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;flutter_codelab&#x2F;tree&#x2F;main&#x2F;calculator&quot;&gt;calculator project&lt;&#x2F;a&gt; and sent the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nisrulz&#x2F;flutter-examples&#x2F;pull&#x2F;143&quot;&gt;PR for flutter-examples#issue95&lt;&#x2F;a&gt;. I also worked on the PR for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nisrulz&#x2F;flutter-examples&#x2F;issues&#x2F;22&quot;&gt;#issue22&lt;&#x2F;a&gt;, which is the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;flutter_codelab&#x2F;tree&#x2F;main&#x2F;ci_integration&quot;&gt;ci_integration project&lt;&#x2F;a&gt;, but I had some issues with the release process since it was completely new to me, so I wasn&#x27;t able do send finish that part on the gh-actions, therefore I didn&#x27;t send the PR.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;Today I learned how to use gh-actions to lint and test a flutter project, I also studied a little bit about &lt;a href=&quot;https:&#x2F;&#x2F;pub.dev&#x2F;packages&#x2F;geolocator&quot;&gt;geolocation plugin in Flutter&lt;&#x2F;a&gt; and deployment of both &lt;a href=&quot;https:&#x2F;&#x2F;docs.flutter.dev&#x2F;deployment&#x2F;ios&quot;&gt;iOS&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;docs.flutter.dev&#x2F;deployment&#x2F;android&quot;&gt;Android&lt;&#x2F;a&gt; apps.&lt;&#x2F;p&gt;
&lt;p&gt;I also learned about &lt;a href=&quot;https:&#x2F;&#x2F;semver.org&#x2F;&quot;&gt;semantic versioning&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;git-scm.com&#x2F;book&#x2F;en&#x2F;v2&#x2F;Git-Basics-Tagging&quot;&gt;git tags&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;docs.python.org&#x2F;release&#x2F;3.11.6&#x2F;whatsnew&#x2F;changelog.html#python-3-11-6&quot;&gt;changelogs&lt;&#x2F;a&gt; while trying to understand why the ci_integration project wasn&#x27;t working as expected.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2023-10-30</title>
        <published>2023-10-30T00:00:00+00:00</published>
        <updated>2023-10-30T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2023-10-30/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2023-10-30/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Monday, day 303 of 365 (83.01%). We&#x27;re in week 44 of 52 (84.61%). &lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today: &lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
send a pull request for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nisrulz&#x2F;flutter-examples&#x2F;issues&#x2F;95&quot;&gt;flutter-examples#issue95&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I made a calculator with Flutter to send it as a pull request for flutter-examples#issue95, I did finish the app itself, but I didn&#x27;t have time to format it to the project&#x27;s owner standards, so I didn&#x27;t send the PR.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;Today I learned about:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;the &lt;code&gt;math_expressions&lt;&#x2F;code&gt; &lt;a href=&quot;https:&#x2F;&#x2F;pub.dev&#x2F;packages&#x2F;math_expressions&quot;&gt;Dart library&lt;&#x2F;a&gt; for parsing and evaluating mathematical expressions;&lt;&#x2F;li&gt;
&lt;li&gt;the &lt;code&gt;GridView&lt;&#x2F;code&gt; &lt;a href=&quot;https:&#x2F;&#x2F;api.flutter.dev&#x2F;flutter&#x2F;widgets&#x2F;GridView-class.html&quot;&gt;class from Flutter&lt;&#x2F;a&gt;, which can be used to create all kinds of grids, more specifically I used the &lt;code&gt;GridView.builder()&lt;&#x2F;code&gt; to make a more custom grid;&lt;&#x2F;li&gt;
&lt;li&gt;the &lt;code&gt;flex&lt;&#x2F;code&gt; parameter for the &lt;code&gt;Expanded&lt;&#x2F;code&gt; class and how it can help fitting things in the screen;&lt;&#x2F;li&gt;
&lt;li&gt;the &lt;code&gt;Border&lt;&#x2F;code&gt; &lt;a href=&quot;https:&#x2F;&#x2F;api.flutter.dev&#x2F;flutter&#x2F;painting&#x2F;Border-class.html&quot;&gt;class&lt;&#x2F;a&gt;, that can be used to outline containers.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;I also deepened my knowledge in the &lt;code&gt;setState()&lt;&#x2F;code&gt; method and stateful widgets by learning how you can call this method inside a &lt;code&gt;onPressed&lt;&#x2F;code&gt; parameter like below:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;dart&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-dart &quot;&gt;&lt;code class=&quot;language-dart&quot; data-lang=&quot;dart&quot;&gt;&lt;span&gt;onPressed: () {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;setState&lt;&#x2F;span&gt;&lt;span&gt;(() {
&lt;&#x2F;span&gt;&lt;span&gt;        ...
&lt;&#x2F;span&gt;&lt;span&gt;    });
&lt;&#x2F;span&gt;&lt;span&gt;},
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2023-10-27</title>
        <published>2023-10-27T00:00:00+00:00</published>
        <updated>2023-10-27T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2023-10-27/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2023-10-27/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Friday, day 300 of 365 (82.19%). We&#x27;re in week 43 of 52 (82.69%). &lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today: &lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;orgs&#x2F;OmnicodeSolutions&#x2F;projects&#x2F;3&#x2F;views&#x2F;1?pane=issue&amp;amp;itemId=41028440&quot;&gt;learn QR Code capture with Flutter&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I used the &lt;a href=&quot;https:&#x2F;&#x2F;pub.dev&#x2F;packages&#x2F;qr_code_scanner&quot;&gt;qr_code_scanner Dart plugin&lt;&#x2F;a&gt; to make a simple QR Code scanner example.&lt;&#x2F;p&gt;
&lt;p&gt;I also took a look at some &lt;a href=&quot;https:&#x2F;&#x2F;flutterawesome.com&#x2F;fintech-dashboard-clone-built-with-flutter&#x2F;&quot;&gt;Flutter dashboards&lt;&#x2F;a&gt; and discussed briefly about the theme of the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;orgs&#x2F;OmnicodeSolutions&#x2F;projects&#x2F;3&#x2F;views&#x2F;1?pane=issue&amp;amp;itemId=42765059&quot;&gt;OmniQRCodes&lt;&#x2F;a&gt; app.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;Today I learned about:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;the &lt;code&gt;MaterialApp&lt;&#x2F;code&gt; class and how to use to &lt;a href=&quot;https:&#x2F;&#x2F;docs.flutter.dev&#x2F;cookbook&#x2F;design&#x2F;themes?gclid=CjwKCAjwv-2pBhB-EiwAtsQZFEuZbAeX0IHF0OFDrALpoA6Qzu-zfo84LoNeXdQoySCD2JdVaAOe9RoCKkkQAvD_BwE&amp;amp;gclsrc=aw.ds&quot;&gt;use themes&lt;&#x2F;a&gt; on a Flutter project using &lt;code&gt;theme: ThemeData&lt;&#x2F;code&gt; to share colors and font styles;&lt;&#x2F;li&gt;
&lt;li&gt;the &lt;a href=&quot;https:&#x2F;&#x2F;api.flutter.dev&#x2F;flutter&#x2F;material&#x2F;FloatingActionButton-class.html&quot;&gt;&lt;code&gt;FloatingActionButton&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; class and how it differs from the &lt;code&gt;ElevatedButton&lt;&#x2F;code&gt; class for being over the rest of the app&#x27;s content;&lt;&#x2F;li&gt;
&lt;li&gt;the &lt;code&gt;Barcode&lt;&#x2F;code&gt; type, which stores the the QR Code&#x27;s output text as property &#x27;code&#x27; of type &lt;code&gt;String&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;the &lt;code&gt;toggleFlash()&lt;&#x2F;code&gt;, &lt;code&gt;getFlashStatus()&lt;&#x2F;code&gt;, &lt;code&gt;pauseCamera()&lt;&#x2F;code&gt; and &lt;code&gt;resumeCamera()&lt;&#x2F;code&gt; methods from the qr_code_scanner Dart plugin;&lt;&#x2F;li&gt;
&lt;li&gt;the &lt;code&gt;MediaQuery&lt;&#x2F;code&gt; class, that allowed me to keep the scanner size up to date with the current screen metrics as they change.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2023-10-26</title>
        <published>2023-10-26T00:00:00+00:00</published>
        <updated>2023-10-26T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2023-10-26/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2023-10-26/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Thursday, day 299 of 365 (81.91%). We&#x27;re in week 43 of 52 (82.69%). &lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today: &lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
run Namer App on Android&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;orgs&#x2F;OmnicodeSolutions&#x2F;projects&#x2F;3&#x2F;views&#x2F;1?pane=issue&amp;amp;itemId=41028440&quot;&gt;study Flutter&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I connected and Android device and ran the Namer App on it. I also &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;flutter_codelab&#x2F;tree&#x2F;main&#x2F;name_app&quot;&gt;updated the app&lt;&#x2F;a&gt; to allow the user to dislike a wordpair from the favorites page. For the Flutter studies, I covered the &lt;a href=&quot;https:&#x2F;&#x2F;docs.flutter.dev&#x2F;cookbook&#x2F;networking&#x2F;fetch-data&quot;&gt;networking&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;docs.flutter.dev&#x2F;cookbook&#x2F;plugins&#x2F;picture-using-camera&quot;&gt;camera&lt;&#x2F;a&gt; topics.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;Today I learned about other &lt;a href=&quot;https:&#x2F;&#x2F;docs.flutter.dev&#x2F;release&#x2F;breaking-changes&#x2F;buttons?gclid=CjwKCAjwnOipBhBQEiwACyGLutBAnkm3dR4tqgllKxGJ3HSG2fffnMYF0cqiJwPmg9qsDZrSfRoKKhoCfnYQAvD_BwE&amp;amp;gclsrc=aw.ds&quot;&gt;Buttons&lt;&#x2F;a&gt; from Flutter and the &lt;a href=&quot;https:&#x2F;&#x2F;pub.dev&#x2F;packages&#x2F;http&quot;&gt;http&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;pub.dev&#x2F;packages&#x2F;camera&quot;&gt;camera&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;pub.dev&#x2F;packages&#x2F;path_provider&quot;&gt;path_provider&lt;&#x2F;a&gt; packages.&lt;&#x2F;p&gt;
&lt;p&gt;I also found the &lt;a href=&quot;https:&#x2F;&#x2F;pub.dev&#x2F;packages&#x2F;qr_code_scanner&quot;&gt;qr_code_scanner&lt;&#x2F;a&gt; plugin from Dart, that allows you to read a QR Code using either a IOS or Android phone.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2023-10-25</title>
        <published>2023-10-25T00:00:00+00:00</published>
        <updated>2023-10-25T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2023-10-25/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2023-10-25/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Wednesday, day 298 of 365 (81.64%). We&#x27;re in week 43 of 52 (82.69%). &lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today: &lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;codelabs.developers.google.com&#x2F;codelabs&#x2F;flutter-codelab-first?hl=pt-br#0&quot;&gt;start Flutter codelab&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I started and finished the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;flutter_codelab&#x2F;tree&#x2F;main&#x2F;name_app&quot;&gt;namer app&lt;&#x2F;a&gt; Flutter codelab. I also started and finished the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;flutter_codelab&#x2F;tree&#x2F;main&#x2F;signin_example&quot;&gt;sign in example&lt;&#x2F;a&gt; from &lt;a href=&quot;https:&#x2F;&#x2F;docs.flutter.dev&#x2F;codelabs&quot;&gt;Flutter codelabs&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;Today, I learned a great deal about Flutter, including:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;How to utilize &lt;code&gt;Column()&lt;&#x2F;code&gt;, &lt;code&gt;Row()&lt;&#x2F;code&gt;, &lt;code&gt;ListView()&lt;&#x2F;code&gt;, and &lt;code&gt;ListTile()&lt;&#x2F;code&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;When to choose between Stateless and Stateful widgets.&lt;&#x2F;li&gt;
&lt;li&gt;Understanding how &lt;code&gt;Expanded()&lt;&#x2F;code&gt; and &lt;code&gt;SafeArea()&lt;&#x2F;code&gt; operate.&lt;&#x2F;li&gt;
&lt;li&gt;How to employ &lt;code&gt;NavigationRail()&lt;&#x2F;code&gt; to create a navigation rail and manage selected items using &lt;code&gt;selectedIndex&lt;&#x2F;code&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;Crafting responsive layouts with &lt;code&gt;LayoutBuilder()&lt;&#x2F;code&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;The art of refactoring using VSCode.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2023-10-24</title>
        <published>2023-10-24T00:00:00+00:00</published>
        <updated>2023-10-24T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2023-10-24/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2023-10-24/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Tuesday, day 297 of 365 (81.36%). We&#x27;re in week 43 of 52 (82.69%). &lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today: &lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;docs.flutter.dev&#x2F;get-started&#x2F;editor?tab=vscode&quot;&gt;finish Flutter set up&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I finished setting up Flutter and created a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;flutter_codelab&quot;&gt;git repository&lt;&#x2F;a&gt; to work on the &lt;a href=&quot;https:&#x2F;&#x2F;codelabs.developers.google.com&#x2F;codelabs&#x2F;flutter-codelab-first?hl=pt-br#0&quot;&gt;flutter codelab&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;I installed Flutter with asdf and, because of that, it took a lot of time to make it work on VSCode, since it couldn&#x27;t find the SDK. I had to mannualy mannualy change ~&#x2F;.zshrc to resolve the issue, so I also updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;ansible-debian&quot;&gt;ansible-debian&lt;&#x2F;a&gt; to include this Flutter configuration and save me from having to do it all again.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2023-10-23</title>
        <published>2023-10-23T00:00:00+00:00</published>
        <updated>2023-10-23T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2023-10-23/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2023-10-23/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Monday, day 296 of 365 (81.09%). We&#x27;re in week 43 of 52 (82.69%).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today: &lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;exercism.org&#x2F;tracks&#x2F;dart&#x2F;exercises&#x2F;forth&quot;&gt;forth&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;orgs&#x2F;OmnicodeSolutions&#x2F;projects&#x2F;3?pane=issue&amp;amp;itemId=41028440&quot;&gt;start &amp;quot;learn flutter&amp;quot; task&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I finished the forth exercise from Exercism&#x27;s Dart track and &lt;a href=&quot;https:&#x2F;&#x2F;docs.flutter.dev&#x2F;get-started&#x2F;install&#x2F;linux&quot;&gt;installed Flutter&lt;&#x2F;a&gt; and started reading it&#x27;s &lt;a href=&quot;https:&#x2F;&#x2F;docs.flutter.dev&#x2F;ui&quot;&gt;documentation&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2023-10-20</title>
        <published>2023-10-20T00:00:00+00:00</published>
        <updated>2023-10-20T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2023-10-20/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2023-10-20/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Friday, day 293 of 365 (80.27%). We&#x27;re in week 42 of 52 (80.76%). &lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today: &lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;exercism.org&#x2F;tracks&#x2F;dart&#x2F;exercises&#x2F;secret-handshake&quot;&gt;secret handshake&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;exercism.org&#x2F;tracks&#x2F;dart&#x2F;exercises&#x2F;forth&quot;&gt;forth&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I finished the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;LuCCoelho&#x2F;Exercism-Solutions&#x2F;tree&#x2F;main&#x2F;dart&#x2F;secret-handshake&quot;&gt;secret handshake exercise&lt;&#x2F;a&gt; from Exercism&#x27;s Dart track. I aso started the forth exercise.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;By starting the forth exercise I learned about &lt;a href=&quot;https:&#x2F;&#x2F;dart.dev&#x2F;language&#x2F;error-handling&quot;&gt;error handlind&lt;&#x2F;a&gt; and the &lt;a href=&quot;https:&#x2F;&#x2F;api.dart.dev&#x2F;stable&#x2F;3.1.4&#x2F;dart-core&#x2F;Exception-class.html&quot;&gt;Exception&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;api.dart.dev&#x2F;stable&#x2F;3.1.4&#x2F;dart-core&#x2F;Error-class.html&quot;&gt;Error&lt;&#x2F;a&gt; classes in Dart.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2023-10-19</title>
        <published>2023-10-19T00:00:00+00:00</published>
        <updated>2023-10-19T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2023-10-19/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2023-10-19/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Thursday, day 292 of 365 (80.00%). We&#x27;re in week 42 of 52 (80.76%). &lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today: &lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;exercism.org&#x2F;tracks&#x2F;dart&#x2F;exercises&#x2F;isbn-verifier&quot;&gt;isbn verifier&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;exercism.org&#x2F;tracks&#x2F;dart&#x2F;exercises&#x2F;luhn&quot;&gt;luhn&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;exercism.org&#x2F;tracks&#x2F;dart&#x2F;exercises&#x2F;secret-handshake&quot;&gt;secret handshake&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;exercism.org&#x2F;tracks&#x2F;dart&#x2F;exercises&#x2F;forth&quot;&gt;forth&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I finished the first two exercises from the planning list:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;LuCCoelho&#x2F;Exercism-Solutions&#x2F;tree&#x2F;main&#x2F;dart&#x2F;isbn-verifier&quot;&gt;isbn verifier&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;LuCCoelho&#x2F;Exercism-Solutions&#x2F;tree&#x2F;main&#x2F;dart&#x2F;luhn&quot;&gt;luhn&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2023-10-18</title>
        <published>2023-10-18T00:00:00+00:00</published>
        <updated>2023-10-18T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2023-10-18/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2023-10-18/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Wednesday, day 291 of 365 (79.72%). We&#x27;re in week 42 of 52 (80.76%). &lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today: &lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;exercism.org&#x2F;tracks&#x2F;dart&#x2F;exercises&#x2F;binary-search-tree&quot;&gt;binary search tree&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;exercism.org&#x2F;tracks&#x2F;dart&#x2F;exercises&#x2F;isbn-verifier&quot;&gt;isbn verifier&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;exercism.org&#x2F;tracks&#x2F;dart&#x2F;exercises&#x2F;luhn&quot;&gt;luhn&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;exercism.org&#x2F;tracks&#x2F;dart&#x2F;exercises&#x2F;secret-handshake&quot;&gt;secret handshake&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;exercism.org&#x2F;tracks&#x2F;dart&#x2F;exercises&#x2F;forth&quot;&gt;forth&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I started and finished &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;LuCCoelho&#x2F;Exercism-Solutions&#x2F;tree&#x2F;main&#x2F;dart&#x2F;binary-search-tree&quot;&gt;the binary search tree exercise&lt;&#x2F;a&gt; from Exercism&#x27;s Dart track.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learnings&quot;&gt;Learnings&lt;&#x2F;h2&gt;
&lt;p&gt;Today I learned about &lt;a href=&quot;https:&#x2F;&#x2F;dart.dev&#x2F;null-safety&#x2F;understanding-null-safety&quot;&gt;null safety in Dart&lt;&#x2F;a&gt; and how &lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;&amp;lt;Type&amp;gt;? != &amp;lt;Type&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;I also aquired a better understanding of &lt;a href=&quot;https:&#x2F;&#x2F;dev.to&#x2F;newtonmunene_yg&#x2F;dart-getters-and-setters-1c8f&quot;&gt;getters and setters in Dart&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2023-10-17</title>
        <published>2023-10-17T00:00:00+00:00</published>
        <updated>2023-10-17T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2023-10-17/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2023-10-17/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Tuesday, day 290 of 365 (79.45%). We&#x27;re in week 42 of 52 (80.76%). &lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today: &lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;LuCCoelho&#x2F;Exercism-Solutions&quot;&gt;continue Dart track on Exercism&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I did the following exercise on Exercism&#x27;s Drat track:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;LuCCoelho&#x2F;Exercism-Solutions&#x2F;tree&#x2F;main&#x2F;dart&#x2F;minesweeper&quot;&gt;minesweeper&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2023-10-16</title>
        <published>2023-10-16T00:00:00+00:00</published>
        <updated>2023-10-16T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2023-10-16/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2023-10-16/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Monday, day 289 of 365 (79.17%). We&#x27;re in week 42 of 52 (80.76%). &lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today: &lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;exercism.org&#x2F;tracks&#x2F;dart&quot;&gt;continue Dart track on Exercism&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I did the folowing exercises on Exercism&#x27;s Dart track:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;LuCCoelho&#x2F;Exercism-Solutions&#x2F;tree&#x2F;main&#x2F;dart&#x2F;robot-simulator&quot;&gt;robot-simulator&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;starterd minesweeper&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;I also watched a &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=oBt53YbR9Kk&quot;&gt;video&lt;&#x2F;a&gt; and learned more about dynamic programing, as welll as &lt;a href=&quot;https:&#x2F;&#x2F;dart.dev&#x2F;language&#x2F;enums&quot;&gt;Enumerated types&lt;&#x2F;a&gt; in Dart.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2023-10-13</title>
        <published>2023-10-13T00:00:00+00:00</published>
        <updated>2023-10-13T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2023-10-13/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2023-10-13/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Friday, day 286 of 365 (78.35%). We&#x27;re in week 41 of 52 (78.84%). &lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today: &lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;exercism.org&#x2F;tracks&#x2F;dart&quot;&gt;continue Dart track on Exercism&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I did the folowing exercises on Exercism&#x27;s Dart track:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;LuCCoelho&#x2F;Exercism-Solutions&#x2F;tree&#x2F;main&#x2F;dart&#x2F;difference-of-squares&quot;&gt;difference-of-squares&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;LuCCoelho&#x2F;Exercism-Solutions&#x2F;tree&#x2F;main&#x2F;dart&#x2F;word-count&quot;&gt;word-count&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;In the process of resolving the second one, I learned what &lt;a href=&quot;https:&#x2F;&#x2F;api.flutter.dev&#x2F;flutter&#x2F;dart-core&#x2F;Iterable-class.html&quot;&gt;Iterables are and how they behave in Dart&lt;&#x2F;a&gt; and how to use &lt;a href=&quot;https:&#x2F;&#x2F;api.dart.dev&#x2F;stable&#x2F;2.14.4&#x2F;dart-core&#x2F;RegExp-class.html&quot;&gt;regular expressions in Dart&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2023-10-12</title>
        <published>2023-10-12T00:00:00+00:00</published>
        <updated>2023-10-12T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2023-10-12/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2023-10-12/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Thursay, day 285 of 365 (78.08%). We&#x27;re in week 41 of 52 (78.84%).&lt;&#x2F;p&gt;
&lt;p&gt;Today is a Brazilian holiday. &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Our_Lady_of_Aparecida&quot;&gt;Day of Our Lady of Aparecida&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2023-10-11</title>
        <published>2023-10-11T00:00:00+00:00</published>
        <updated>2023-10-11T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2023-10-11/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2023-10-11/</id>
        
        <content type="html">&lt;p&gt;Today is Wednesday, day 284 of 365 (77.80%). We&#x27;re in week 41 of 52 (78.84%). &lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today: &lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
continue Dart track on Exercism&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I continued the Dart track on exercism, I finished the folowing exercises:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;LuCCoelho&#x2F;Exercism-Solutions&#x2F;tree&#x2F;main&#x2F;dart&#x2F;armstrong-numbers&quot;&gt;armstrong numbers&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;LuCCoelho&#x2F;Exercism-Solutions&#x2F;tree&#x2F;main&#x2F;dart&#x2F;high-scores&quot;&gt;high scores&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;I also learned how to run a single test from a Dart test file in the command line using &lt;em&gt;dart test --name &amp;quot;&amp;lt; test_name &amp;gt;&amp;quot;&lt;&#x2F;em&gt; and about the 64bit limitation for integers and how to deal with numbers larger than that using &lt;a href=&quot;https:&#x2F;&#x2F;api.dart.dev&#x2F;stable&#x2F;3.1.3&#x2F;dart-core&#x2F;BigInt&#x2F;BigInt.from.html&quot;&gt;BigInt class&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2023-10-10</title>
        <published>2023-10-10T00:00:00+00:00</published>
        <updated>2023-10-10T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2023-10-10/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2023-10-10/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Tuesday, day 283 of 365 (77.53%). We&#x27;re in week 41 of 52 (78.84%). &lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today: &lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
update blog&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;LuCCoelho&#x2F;Exercism-Solutions&#x2F;issues&#x2F;1&quot;&gt;continue to configure github-actions to test dart exercices&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I added links to my Dart exercices in the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;blog&#x2F;blob&#x2F;main&#x2F;content&#x2F;blog&#x2F;2023-10-04.md&quot;&gt;2023-10-04 page&lt;&#x2F;a&gt; and finished to configure github-actions to test them, it runs a bash script that uses &lt;a href=&quot;https:&#x2F;&#x2F;dougrichardson.us&#x2F;notes&#x2F;fail-fast-bash-scripting.html&quot;&gt;set -euo pipefail&lt;&#x2F;a&gt; to exit with non 0 error code so that the gh-actions will fail.&lt;&#x2F;p&gt;
&lt;p&gt;I also removed the warnings on the Dart exercises so that the gh-actions workflow would pass, in order to do that I removed the strong-mode mode from the &lt;a href=&quot;https:&#x2F;&#x2F;dart.dev&#x2F;tools&#x2F;analysis&quot;&gt;static analysis&lt;&#x2F;a&gt; settings, since the configurations used were no longer supported.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2023-10-09</title>
        <published>2023-10-09T00:00:00+00:00</published>
        <updated>2023-10-09T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2023-10-09/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2023-10-09/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Monday, day 282 of 365 (77.26%). We&#x27;re in week 41 of 52 (78.84%). &lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today: &lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;blog&#x2F;issues&#x2F;1&quot;&gt;finish script to create a new blog entry&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
create second blog page for entries in brazilian portuguese&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
write last week&#x27;s activities&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
configure github-actions to test dart exercices &lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I finished the script for creating a new blog entry, wrote last week&#x27;s activities in both brazilian portuguese and english, changed the keyboard settings to write in brazilian portuguese more easily and created all the templates for pages in brazilian portuguese. I also started the github-actions to test the dart exercises.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2023-10-06</title>
        <published>2023-10-06T00:00:00+00:00</published>
        <updated>2023-10-06T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2023-10-06/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2023-10-06/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Friday, day 279 of 365 (76.43%). We&#x27;re in week 40 of 52 (76.92%). &lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today: &lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;blog&#x2F;issues&#x2F;1&quot;&gt;start worklog blog with Zola&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;blog&#x2F;issues&#x2F;1&quot;&gt;automate blog&#x27;s deploy with github-actions&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I studied Zola&#x27;s documentation and made all templates for the blog in english, I also configured github-actions to auto publish it when pushing in the main branch.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2023-10-05</title>
        <published>2023-10-05T00:00:00+00:00</published>
        <updated>2023-10-05T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2023-10-05/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2023-10-05/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Thursday, day 278 of 365 (76.16%). We&#x27;re in week 40 of 52 (76.92%). &lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today: &lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;blog&quot;&gt;create a repository for the worklog blog&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;orgs&#x2F;OmnicodeSolutions&#x2F;projects&#x2F;3?pane=issue&amp;amp;itemId=40652167&quot;&gt;install Zola&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I initiated the GitHub repository that will contain the blog with my learnings at Omnicode during the internship and installed Zola.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2023-10-04</title>
        <published>2023-10-04T00:00:00+00:00</published>
        <updated>2023-10-04T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2023-10-04/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2023-10-04/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Wednesday, day 277 of 365 (75.89%). We&#x27;re in week 40 of 52 (76.92%). &lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today: &lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;LuCCoelho&#x2F;Exercism-Solutions&quot;&gt;begin Dart studies with Exercism&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I started the Dart track on Exercism and did the following exercises:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;LuCCoelho&#x2F;Exercism-Solutions&#x2F;tree&#x2F;main&#x2F;dart&#x2F;hello-world&quot;&gt;hello-world&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;LuCCoelho&#x2F;Exercism-Solutions&#x2F;tree&#x2F;main&#x2F;dart&#x2F;two-fer&quot;&gt;two-fer&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;LuCCoelho&#x2F;Exercism-Solutions&#x2F;tree&#x2F;main&#x2F;dart&#x2F;leap&quot;&gt;leap&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;LuCCoelho&#x2F;Exercism-Solutions&#x2F;tree&#x2F;main&#x2F;dart&#x2F;scrabble-score&quot;&gt;scrabbler-score&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;LuCCoelho&#x2F;Exercism-Solutions&#x2F;tree&#x2F;main&#x2F;dart&#x2F;armstrong-numbers&quot;&gt;armstrong-numbers&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>2023-10-03</title>
        <published>2023-10-03T00:00:00+00:00</published>
        <updated>2023-10-03T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/posts/2023-10-03/" type="text/html"/>
        <id>https://omnicode.com.br/blog/posts/2023-10-03/</id>
        
        <content type="html">&lt;hr &#x2F;&gt;
&lt;p&gt;Today is Tuesday, day 276 of 365 (75.61%). We&#x27;re in week 40 of 52 (76.92%). &lt;&#x2F;p&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;p&gt;What I am going to do today: &lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;OmnicodeSolutions&#x2F;ansible-debian&quot;&gt;create ansible-debian to configure the computer&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;activities-executed&quot;&gt;Activities executed&lt;&#x2F;h2&gt;
&lt;p&gt;Today I started and finished ansible-debian that creates a new user with zsh shell, installs oh-my-zsh, ansible and some packages and configures python&#x27;s version.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Luísa Coelho</title>
        <published>2021-04-01T08:50:45+00:00</published>
        <updated>2021-04-01T08:50:45+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://omnicode.com.br/blog/authors/luisa-coelho/" type="text/html"/>
        <id>https://omnicode.com.br/blog/authors/luisa-coelho/</id>
        
        <content type="html">&lt;p&gt;Intern at &lt;strong&gt;Omnicode&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;luccoelho&quot;&gt;@LuCCoelho&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
</content>
        
    </entry>
</feed>
